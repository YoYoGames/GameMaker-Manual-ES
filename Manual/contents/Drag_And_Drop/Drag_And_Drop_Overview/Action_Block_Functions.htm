<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Funciones de script del bloque de acción</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Article explaining how to make action block script functions" />
  <meta name="rh-index-keywords" content="GML Visual Overview - Action Block Script Functions" />
  <meta name="search-keywords" content="GML Visual Scripts" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Funciones de script del bloque de acción</h1>
  <p>Uno de los más importantes <span class="notranslate">assets</span> en el <a href="../../Introduction/The_Asset_Browser.htm">Navegador de Activos</a> es el <a href="../../The_Asset_Editors/Scripts.htm">Script</a> <span class="notranslate">asset</span>. <span class="notranslate">Scripts</span> son especiales <span class="notranslate">assets</span> en el sentido de que son esencialmente &quot;contenedores&quot; para las funciones definidas por el usuario y no son realmente llamados por usted directamente en sus juegos. Todos los <span class="notranslate">scripts</span> son de alcance <strong>global</strong> y serán ejecutados automáticamente por <span class="notranslate">GameMaker</span> cuando tu juego se inicie, así que puedes usarlos para definir variables y funciones globales que quieras usar en todo tu juego.</p>
  <p>Cada <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> puede tener una o más funciones definidas por el usuario añadidas, y estas funciones se crean utilizando la acción <a href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm">Declarar una nueva función</a>:</p>
  <p><img>Las funciones que definas aquí tendrán un alcance global y actuarán como cualquier acción incorporada en <span class="notranslate">GML</span> Visual, es decir: pueden tomar diferentes valores -o ninguno- llamados<span class="glossextra">argumentos</span> (o parámetros), y luego realizar una tarea, devolviendo un valor o no devolviendo nada, según sea necesario. A continuación, llamarías a la función en tus juegos utilizando la acción <a href="../Drag_And_Drop_Reference/Common/Function_Call.htm">Function Call</a> <img>, que tiene el siguiente aspecto:</p>
  <p><img>Para crear un <span class="notranslate">GML</span> Visual <span class="notranslate">script</span>, basta con utilizar el botón derecho del ratón <img> en cualquier lugar del navegador <span class="notranslate">Asset</span> y seleccionar <strong>Crear </strong>y luego <strong>Script</strong>. Esto creará un nuevo <span class="notranslate">GML</span> Visual <span class="notranslate">script</span> y abrirá la ventana del editor:</p>
  <p><img>Puede nombrar el <span class="notranslate">script</span> haciendo clic con el botón derecho del ratón sobre <img> en el navegador <span class="notranslate">Asset</span> y seleccionando <strong>Renombrar </strong>(o haciendo un lento doble clic con el botón izquierdo <img>), pero tenga en cuenta que el nombre de <span class="notranslate">script</span> debe ajustarse a las reglas generales de <span class="notranslate">assets</span>, por lo que debe empezar por una letra y contener sólo letras, números o el símbolo de la barra inferior &quot;_&quot;. Su <span class="notranslate">script</span> también estará precargado con una acción de <strong>Declarar una nueva función</strong>, lista para que usted la rellene, y puede añadir más declaraciones de funciones según sea necesario (un solo <span class="notranslate">script</span> puede contener múltiples funciones, lo cual es útil para agrupar funciones con un uso similar o conectado).</p>
  <p>Como se ha mencionado anteriormente, puedes pasar un número de argumentos a una función, y ésta los utilizará para realizar la tarea para la que la has escrito. Para entender esto mejor, toma - por ejemplo - cualquiera de las acciones incorporadas y piensa en cómo funciona... lo colocas en un evento y le proporcionas un número de valores y hará que tu instancia haga algo. Las funciones definidas por el usuario son exactamente lo mismo, con la única diferencia de que <em>tú </em>las escribes.</p>
  <p>Cuando se define una nueva función, se le da un nombre y también se define el nombre de los argumentos que toma, si es que toma alguno (las funciones pueden no tomar argumentos o tomar múltiples argumentos dependiendo de lo que se requiera). Si das nombres de argumentos, éstos se utilizarán en las acciones a las que llame la función como <strong>variables </strong>locales que contienen los valores de entrada de la función.</p>
  <p>También es una buena práctica añadir un comentario para la acción que explique lo que hace, siguiendo las <a href="../../The_Asset_Editors/Code_Editor_Properties/JSDoc_Script_Comments.htm">reglas de JS Doc.</a> Por ejemplo, considere esta función <span class="inline">set_vec()</span>:</p>
  <p><img>Para llamar a la <span class="notranslate">script</span> de arriba, simplemente se utilizaría la acción de <strong>llamar a la función</strong>, así:</p>
  <p><img>No sólo puedes pasar argumentos a una función, sino que también puedes pedirle a una función que devuelva un valor (usando la acción <a href="../Drag_And_Drop_Reference/Common/Return.htm">Return</a> <img> ), así que puedes usarlas para (por ejemplo) construir métodos de cálculo o devolver un ID de instancia después de una compleja detección de colisión o cualquier número de cosas. Ten en cuenta, sin embargo, que el uso de return <strong>finaliza la función</strong>, por lo que no se ejecutará ninguna acción colocada después de su uso, y esto significa que hay que pensar bien cómo se estructuran tus funciones.</p>
  <p>A continuación se muestra una función de <span class="notranslate">GML</span> Visual que devuelve un valor:</p>
  <p><img alt="Declare A New Function Syntax" class="center" src="../../assets/Images/Scripting_Reference/Drag_And_Drop/Reference/Common/a_Common_Declare_Function.png" /></p>
  <p>La función anterior simplemente comprueba todas las instancias en un <span class="notranslate">room</span> para ver cuál es su <span class="inline">object_index</span> y si una de ellas es el jugador <span class="notranslate">object</span> la función devolverá <span class="inline">true</span> (terminando la llamada a la función) o <span class="inline">false</span>. Usted llamaría a esta función así:</p>
  <p><img>Así, llamamos a la función y hacemos que cree una variable temporal (local) para almacenar el valor devuelto (que en este caso es <span class="inline">true</span> o <span class="inline">false</span>), y luego se comprueba esta variable y se realiza una acción.</p>
  <p>También puede hacer que los argumentos sean opcionales y definir un valor por defecto, de modo que en caso de que no se proporcionen en una llamada a la función se utilizará el valor por defecto en su lugar. Consulte el <a data-xref="{text}" href="../Drag_And_Drop_Reference/Common/Declare_A_New_Function.htm#h">ejemplo ampliado 2</a> de la acción para obtener más información.</p>
  <p>Al crear funciones para su <span class="notranslate">GML</span> Visual <span class="notranslate">scripts</span> puede utilizar todas las mismas acciones que cuando añade acciones en un evento <span class="notranslate">object</span>, e incluso puede llamar a funciones desde dentro de funciones, y de esta manera crear un código de acción más &quot;modular&quot;. Construir <span class="notranslate">scripts</span> con funciones de esta manera puede ahorrarte mucho tiempo creando la misma acción <span class="notranslate">sequences</span> y también puede ayudar a que tu acción <span class="notranslate">sequences</span> sea más fácil de leer y de depurar.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Volver: <a href="../../Content.htm">Index</a></div>
        <div style="float:right">Siguiente: <a href="Changing_DnD_To_Code.htm">Cambio de <span class="notranslate">GML</span> Visual to Code</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
GML Visual Scripts
-->
  <!-- TAGS
drag_and_drop_scripts
-->
</body>
</html>