<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Comentarios de la secuencia de comandos JSDoc</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that explains how JSDoc Script Comments work" />
  <meta name="rh-index-keywords" content="Code Editor - JSDoc Comments,JSDoc" />
  <meta name="search-keywords" content="JSDoc,JSDoc Comments" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>JSDoc <span class="notranslate">Script</span> Comentarios</h1>
  <p>Si desea que sus funciones personalizadas tengan completado el código y muestren los argumentos requeridos de una manera específica en el editor de código, entonces necesita añadir algunos comentarios de <a href="https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html">estilo JSDoc</a>. Estos comentarios se utilizan para indicar a la función de autocompletar cómo debe utilizarse la función y rellenarse en el editor de <a href="../Scripts.htm">scripts</a>.</p>
  <p>El formato de una típica cabecera de función sería tener el nombre de la función, la descripción de la función, y luego la lista de los diferentes argumentos (parámetros) que la función toma, asegurándose de comenzar cada línea con una triple barra invertida &quot;<span class="inline">///</span>&quot; ya que eso le dice a <span data-keyref="GameMaker Name">GameMaker</span> que analice el comentario como de estilo JSDoc. También puede envolver sus comentarios JSDoc en <span class="inline">/**</span>... <span class="inline">*/</span> con el <span class="inline">/**</span> en su propia línea.</p>
  <p>A los comentarios se les debe asignar un identificador (precedido de &quot;<span class="inline">@</span>&quot;) y un contenido, y los identificadores disponibles son los siguientes:</p>
  <table>
    <colgroup>
      <col style="width: 306px;" />
      <col style="width: 488px;" />
      <col style="width: 487px;" />
    </colgroup>
    <tbody>
      <tr>
        <th>Identificador</th>
        <th>Contenido</th>
        <th>Sintaxis</th>
      </tr>
      <tr>
        <td><span class="inline">@function</span> / <span class="inline">@func</span></td>
        <td>El nombre completo de la función, incluidos los argumentos</td>
        <td><span class="inline">@func my_func(args)</span></td>
      </tr>
      <tr>
        <td><span class="inline">@description</span> / <span class="inline">@desc</span></td>
        <td>Una descripción general de lo que hace la función</td>
        <td><span class="inline">@desc &lt;Description goes&gt;</span></td>
      </tr>
      <tr>
        <td><span class="inline">@param</span> / <span class="inline">@</span><span class="inline">parameter</span> / <span class="inline">@arg</span> / <span class="inline">@argument</span></td>
        <td>Información sobre los argumentos, con un <a href="Feather_Data_Types.htm"><span class="notranslate">type</span></a></td>
        <td><span class="inline">@param <em>{type}</em> name &lt;Parameter description&gt;</span></td>
      </tr>
      <tr>
        <td><span class="inline">@return / @returns</span></td>
        <td><a href="Feather_Data_Types.htm">Tipo</a> de datos que devuelve la función</td>
        <td><span class="inline">@return {type} &lt;Return description&gt;</span></td>
      </tr>
      <tr>
        <th colspan="3">Sólo<a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">pluma</a> </th>
      </tr>
      <tr>
        <td><span class="inline">@pure</span></td>
        <td>Marca la función como <a class="glossterm" data-glossterm="puro" href="#">pura</a></td>
        <td><span class="inline">@pure</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@ignore</span></td>
        <td style="">Oculta la función de autocompletar de Feather</td>
        <td><span class="inline">@ignore</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@deprecated</span></td>
        <td style="">Marca la función como obsoleta</td>
        <td><span class="inline">@deprecated</span></td>
      </tr>
      <tr>
        <td style=""><span class="inline">@context / @self</span></td>
        <td style="">Establece el contexto de la función, que Feather autocompleta para proporcionar información contextual. Puede ser un <span class="notranslate">object</span> o un constructor.</td>
        <td><span class="inline">@self &lt;object&gt;</span></td>
      </tr>
    </tbody>
  </table>
  <p>Si no has especificado un tipo para tus argumentos o valor de retorno, y estás usando <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">Feather</a>, asumirá un <span class="notranslate">data type</span> para ellos automáticamente, basado en el cuerpo de tu función.</p>
  <p>Véase la información en <span class="notranslate">data types</span> para <span class="inline">@param</span> y <span class="inline">@return</span> sobre los <a href="Feather_Data_Types.htm">tipos de datos de las plumas</a>.</p>
  <h2>Ejemplos</h2>
  <p>Para tener una idea de cómo funcionaría esto al escribir tus propias funciones, tomemos este ejemplo básico:</p>
  <p class="code">function is_same_object(_id, _obj)<br />
    {<br />
        if (_id.object_index == _obj)<br />
        {<br />
            return true;<br />
        }<br />
        else return false;<br />
    }</p>
  <p>Todo lo que hace este <span class="notranslate">script</span> es comprobar si una instancia tiene el mismo <span class="inline">object_index</span> que un <span class="notranslate">object</span> dado y se llamaría simplemente como:</p>
  <p class="code">if is_same_object(id, obj_Player)<br />
    {<br />
        instance_destroy()<br />
    }</p>
  <p>Sin embargo, al escribir esto en el editor de código se mostrarán directamente los nombres de las variables de los argumentos (<span class="inline">_id</span> y <span class="inline">_obj</span>), lo que en la mayoría de los casos no es muy descriptivo. Puedes usar JSDoc para definir nombres de argumentos y descripciones personalizadas, junto con información para la función también:</p>
  <p class="code">/// @function                is_same_object(inst_id, object_id)<br />
    /// @description             Check if the given instance belongs to the given object.<br />
    /// @param {Id.Instance}     inst_id    The unique instance ID value of the instance to check.<br />
    /// @param {Asset.GMObject}  object_id  The object index to be checked against.<br />
    /// @return {Bool}<br />
    <br />
    function is_same_object(_inst_id, _object_id)<br />
    {<br />
        return _inst_id.object_index == _object_id;<br />
    }
  </p>
  <p>Ahora, cuando llame a esta función en cualquier parte de su proyecto, verá los nuevos nombres de los argumentos que se introdujeron en los comentarios de JSDoc:</p>
  <p><img>En la imagen de arriba, la parte superior muestra la función en el autocompletado y la parte inferior muestra cómo funciona el ayudante de argumentos en la parte inferior. Tenga en cuenta que tanto la parte opcional &quot;tipo&quot; como la obligatoria &quot;descripción&quot; de <span class="inline">@param</span> no se muestran por defecto en el código completo de <span class="notranslate">IDE</span>, y para verlas debe activar las opciones en las <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/GML_Code_Preferences.htm">Preferencias de GML</a>.</p>
  <p>Al utilizar <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Feather_Settings.htm">Feather</a>, verás información detallada sobre la función cuando pases el ratón por encima de ella:</p>
  <p><img>Puede encerrar el nombre de un argumento entre corchetes <span class="inline">[]</span> para indicar que es opcional. El editor de código esperará entonces cualquier número de argumentos entre el mínimo requerido y el número total de argumentos.</p>
  <p>Por ejemplo, véase la siguiente función:</p>
  <p class="code">/// @function    animate_position(end_x, end_y, start_x, start_y)<br />
    /// @desc        Animates the instance to ending point, from optional starting point<br />
    /// @arg end_x<br />
    /// @arg end_y<br />
    /// @arg [start_x]<br />
    /// @arg [start_y]<br />
    <br />
    function animate_position (x1, y1, x2, y2)<br />
    {<br />
        // Function code<br />
    }
  </p>
  <p>Los argumentos <span class="inline">start_x</span> y <span class="inline">start_y</span> están marcados como opcionales, lo que significa que el editor de código espera ahora de 2 a 4 argumentos, como puede verse en el mensaje de advertencia:</p>
  <p><img alt="JSDoc Example" class="center" height="652" src="../../assets/Images/Scripting_Reference/Additional_Information/JavaDoc_Example.png" width="672" /></p>
  <p class="note"><span class="note">NOTA</span> Obtendrá el mismo comportamiento si utiliza argumentos opcionales en la declaración de la función. Consulte <a href="../../GameMaker_Language/GML_Overview/Script_Functions.htm">las funciones de script</a> para obtener más información.</p>
  <p>Dado que <span class="notranslate">scripts</span> puede contener varias funciones, puede añadir comentarios JSDoc para cada una de ellas antes de su declaración:</p>
  <p><img class="center" src="../../assets/Images/Asset_Editors/JSDoc_Feather_Info.png" /></p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Scripts.htm">El editor de <span class="notranslate">Script</span> </a></div>
        <div style="float:right">Siguiente: <a data-xref="{title}" href="Feather_Data_Types.htm">Tipos de datos de la pluma</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
JSDoc <span class="notranslate">Script</span> Comments
-->
  <!-- TAGS
jsdoc_comments
-->
</body>
</html>