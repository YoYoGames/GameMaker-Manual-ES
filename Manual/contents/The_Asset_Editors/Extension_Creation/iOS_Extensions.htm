<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Extensiones iOS / tvOS</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how iOS extensions work" />
  <meta name="rh-index-keywords" content="Extensions - Creating iOS / tvOS Extensions" />
  <meta name="search-keywords" content="iOS Extensions,iOS, tvOS Extensions, tvOS" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>iOS / <span class="notranslate">tvOS</span> Extensiones</h1>
  <p>Para crear un <span class="notranslate">extension</span> para <span class="notranslate">iOS</span> o tvOS hay que hacerlo en dos partes. La primera parte sería añadir el propio <span class="notranslate">extension</span>, junto con los archivos necesarios, y la segunda es crear las funciones y macros/constantes que requiere el <span class="notranslate">extension</span>.</p>
  <p>Las funciones y las constantes se añaden utilizando archivos de <strong>marcadores de posición </strong>para agruparlos, por lo que añadirías un marcador de posición y luego definirías las funciones y las macros como se explica en <a href="Creating_An_Extension.htm">esta sección</a>. Para añadir el resto de los archivos, sin embargo, tienes que marcar primero la casilla de <em>iOS </em>y/o <em>tvOS </em>en la sección de <strong>características adicionales</strong> del editor para abrir la ventana de <strong>propiedades de la extensión</strong> correspondiente (la imagen de abajo muestra la ventana de propiedades de <span class="notranslate">iOS</span>, pero la ventana de <span class="notranslate">tvOS</span> es exactamente la misma):</p>
  <p class="dropspot"><img alt="iOS Editor" class="center" src="../../assets/Images/Asset_Editors/Editor_Extensions_iOS.png" /></p>
  <p>Aquí puede dar los siguientes detalles:</p>
  <ul class="colour">
    <li class="dropspot"><strong>Compilador <span class="notranslate">Flags</span> / Banderas del</strong> enlazador: Algunos frameworks y SDKs de terceros requieren la adición de un linker extra <span class="notranslate">flags</span> y un compilador <span class="notranslate">flags</span> para funcionar, que pueden ser especificados aquí (ver la documentación que acompaña al SDK o framework en cuestión para más detalles).</li>
    <li class="dropspot"><strong>Nombre de la</strong> clase: Tu <span class="notranslate">extension</span> puede tener varias clases, y cada una de ellas tiene sus propias funciones y constantes, por lo que debes darle un nombre que refleje su propósito.</li>
    <li class="dropspot"><strong>App Delegate Class Name</strong>: El nombre de tu clase delegada de aplicación personalizada. Al establecer esto, <span class="notranslate">extension</span> puede anular/extender la funcionalidad principal de la aplicación. Para utilizar esta función es necesario hacer lo siguiente:
      <ol>
        <li>Asegúrese de que los archivos fuente del delegado tienen el mismo nombre que la clase del delegado (por ejemplo, <span class="inline">@interface MyCustomAppDelegate</span> debe definirse en &quot; <span class="inline">MyCustomAppDelegate.h</span>&quot;)</li>
        <li>Añade la variable de entorno <span class="inline">${YYExtAppDelegateIncludes}</span> en la parte superior del archivo de cabecera del delegado de tu aplicación. Ésta será sustituida en tiempo de compilación por los archivos de inclusión pertinentes para la clase delegada principal.</li>
        <li>Utiliza la variable de entorno <span class="inline">${YYExtAppDelegateBaseClass}</span> como clase base para tu delegado de aplicación personalizado. Ésta será sustituida en el momento de la compilación por la clase base correcta del delegado.<br>
          <br>
          Para garantizar que su <span class="notranslate">extension</span> funcione con cualquier otro <span class="notranslate">extensions</span> que utilice delegados de aplicación personalizados, debe llamar a cualquier método de la clase base desde los métodos anulados de su clase hija. Antes de llamar al método de la superclase, debes asegurarte de que está implementado en la jerarquía de clases para evitar errores, por ejemplo
        </li>
      </ol>
     <p class="code">- (BOOL)application:(UIApplication *)application willFinishLaunchingWithOptions:(NSDictionary *)launchOptions<br />
        {<br />
            // Check if any superclasses implement this method and call it<br />
            if([[self superclass] instancesRespondToSelector:@selector(application:willFinishLaunchingWithOptions:)])<br />
              return [super application:application willFinishLaunchingWithOptions:launchOptions];<br />
            else<br />
                return TRUE;<br />
        }</p>
    </li>
    <li class="dropspot"><strong>Frameworks del</strong> sistema: Aquí puede añadir cualquier <a class="glossterm" data-glossterm="marco" href="#">marco</a>del sistema <span class="notranslate">iOS</span> a su <span class="notranslate">extension</span>. Estos se añaden haciendo clic en el botón <img> que añadirá un marco de trabajo de marcador de posición, que luego puede editar haciendo doble clic en <img>. Puedes encontrar más información sobre las estructuras del sistema disponibles <a href="https://developer.apple.com/documentation/">aquí</a>. Para eliminar un marco del sistema, simplemente selecciónelo y haga clic en el botón <img>.<br>
      <br>
      <img>Puede activar la casilla de verificación de un marco para marcarlo como &quot;<strong>Referencia débil</strong>&quot;. Esto lo añade a la sección &quot;<strong>Build Phases -&gt; Link Binary with Libraries</strong>&quot; de <span class="notranslate">Xcode</span> como un framework &quot;<strong>Opcional&quot;</strong>, en lugar de un framework &quot;<strong>Requerido</strong>&quot; (que es el comportamiento por defecto).
    </li>
    <li class="dropspot"><strong>Frameworks de terceros + Bundles</strong>: Esta sección es para añadir paquetes de terceros y SDK. Al igual que con los frameworks del sistema, haga clic en el botón <img> para añadirlos y, a continuación, haga doble clic en <img> para editarlos; si los selecciona y hace clic en <img>, los eliminará (consulte la documentación que acompaña al SDK elegido para obtener información sobre el nombre del framework).<br>
      <br>
      Aquí puedes elegir <strong>no incrustar</strong> el framework, <strong>incrustarlo y firmarlo</strong>, o <strong>incrustarlo sin firmarlo</strong>:<br>
      <img>Esto refleja la misma opción para un framework añadido en &quot;<strong>Frameworks, Librerías y Contenido Incrustado</strong>&quot; en <span class="notranslate">Xcode</span>.
    </li>
    <li class="dropspot">Introduzca el framework<strong> <span class="notranslate">path</span> </strong> en el Mac: Si quieres añadir un framework a la <span class="notranslate">extension</span> cuyos archivos están presentes en el Mac que se utiliza para construir tu proyecto, puedes introducir el <span class="notranslate">path</span> a ese framework (en la máquina de construcción) en este campo y luego hacer clic en el botón <img> para añadirlo.<br>
      <br>
     <span class="notranslate">path</span> El <span class="notranslate">extension</span> tiene que apuntar a un archivo <span class="inline">.framework</span> que se comprimirá como un <span class="inline">.zip</span> y se colocará en la carpeta <span class="inline">iOSSourceFromMac</span> bajo su directorio <span class="notranslate">extension</span>; puede abrirlo fácilmente en cualquier momento haciendo clic con el botón derecho del ratón en el <img> y seleccionando <em>Abrir en el Explorador</em>.
    </li>
    <li class="dropspot"><strong>Añadir fuente</strong>: Puede utilizar esta opción para añadir los archivos fuente necesarios para que su <span class="notranslate">extension</span> funcione. Los archivos añadidos se almacenarán en la carpeta <span class="inline">iOSSource</span> dentro de su directorio de extensión.</li>
    <li class="dropspot"><b>Inyección de código</b>: Aquí puedes añadir cualquier código que se inyecte (añada) en tu aplicación <span class="notranslate">iOS</span> cuando tu juego se construya para su prueba o lanzamiento final. Asegúrate de revisar esto (y tus permisos) cuidadosamente antes de enviar cualquier juego a la tienda, ya que una configuración incorrecta hará que tu juego no sea enviado.</li>
  </ul>
  <h2>Inyección de código</h2>
  <p>La inyección de código puede utilizarse para iOS/tvOS <span class="notranslate">extensions</span> de la misma manera que se describe en la página <span class="notranslate">Android</span> <span class="notranslate">Extensions</span>: véase <a data-xref="{text}" href="Android_Extensions.htm#h">Inyección de código</a>.</p>
  <p>Las siguientes etiquetas están disponibles para las plataformas <span class="notranslate">iOS</span> y <span class="notranslate">tvOS</span>:</p>
  <p class="code">YYIosPlist<br />
    YYIosEntitlements<br />
    YYIosCocoaPods<br />
    YYIosCocoaPodsDependencies<br />
    YYIosBuildRules<br />
    YYIosBuildSettingsInjection<br />
    YYIosScriptPhase<br />
    YYIosCFBundleURLSchemesArray<br />
    YYIosLSApplicationQueriesSchemesArray<br />
    <br />
    YYTvosPlist<br />
    YYTvosEntitlements<br />
    YYTvosCocoaPods<br />
    YYTvosCocoaPodsDependencies<br />
    YYTvosBuildRules<br />
    YYTvosBuildSettingsInjection<br />
    YYTvosScriptPhase<br />
    YYTvosCFBundleURLSchemesArray<br />
    YYTvosLSApplicationQueriesSchemesArray
  </p>
  <p>La ubicación de <span class="notranslate">runtime</span> donde se inyecta el código dependerá del tipo de etiqueta:</p>
  <table>
    <colgroup>
      <col style="width: 174px;" />
      <col style="width: 760px;" />
    </colgroup>
    <tbody>
      <tr>
        <th style="">Tipo de etiqueta</th>
        <th style="">Ruta de inyección</th>
      </tr>
      <tr>
        <td style=""><b>Derechos</b></td>
        <td style="">{RUNTIME}\N-plantillaProyecto\N-${YXCodeProjName}\N-$<br>
         <span>${YXCodeProjName}.derechos</span>
        </td>
      </tr>
      <tr>
        <td style=""><b>info.plist</b></td>
        <td style="">{RUNTIME}\N-plantillaProyecto\N-${YXCodeProjName}\N-$<br>
          Supporting Files${YXCodeProjName}-Info<span>.plist</span></td>
      </tr>
      <tr>
        <td style=""><strong>infoLista.cadenas</strong></td>
        <td style="">{RUNTIME}\N-plantillaProyecto\N-${YXCodeProjName}\N-$<br>
          es.lproj\infoPlist.strings</td>
      </tr>
      <tr>
        <td style=""><strong>proyecto.pbxproj</strong></td>
        <td style="">{RUNTIME}\N-plantillaProyecto\N-${YXCodeProjName}.xcodeproj<br>
          proyecto.pbxproj</td>
      </tr>
      <tr>
        <td style=""><strong>xcscheme</strong></td>
        <td style="">{RUNTIME}\N-plantillaProyecto\N-${YXCodeProjName}.xcodeproj<br>
          xcshareddata\\xcschemes\${YXCodeProjName}.xcscheme</td>
      </tr>
    </tbody>
  </table>
  <p class="note"><strong></strong><span class="note">NOTA</span> Estos <span class="notranslate">paths</span> son sólo para VM. Para YYC, el código inyectado irá al directorio <span class="inline">{RUNTIME}\yyc\</span>, donde los <span class="notranslate">paths</span> pueden o no ser equivalentes a los de VM.</p>
  <p>Tenga en cuenta que hay una opción de juego <a href="../../Settings/Game_Options/iOS.htm">para iOS</a> y <a href="../../Settings/Game_Options/tvOS.htm">para tvOS</a> para añadir un archivo <span class="inline">Podfile.lock</span> a <span data-keyref="GameMaker Name">GameMaker</span>, que es necesario si está añadiendo <span class="notranslate">CocoaPods</span> Dependencias en esta sección.</p>
  <h2>Información adicional</h2>
  <p>Si a su <span class="notranslate">extension</span> se le ha añadido algún System Frameworks o 3rd Party Frameworks, éstos aparecerán ahora en la ventana de <strong>Propiedades de la Extensión </strong>, y cada uno de ellos tendrá una casilla de verificación al lado. Si marcas la casilla, estarás habilitando la vinculación débil, lo que es útil si necesitas &quot;anular&quot; algún símbolo de la biblioteca incluida con tu propio valor, pero hay que tener en cuenta que al hacerlo se ralentizará la vinculación.</p>
  <p>Para obtener información sobre la creación de su <span class="notranslate">extensions</span> nativo para <span class="notranslate">iOS</span>, consulte <a href="Extended_Examples.htm">Ejemplos de fuentes</a>; y para obtener información sobre el uso de <span class="notranslate">CocoaPods</span> en <span class="notranslate">extensions</span>, consulte la siguiente guía:</p>
  <ul class="colour">
    <li><a href="https://help.yoyogames.com/hc/en-us/articles/360008958858">iOS y tvOS: Uso de Cocoa Pods</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Extensions.htm">El editor de <span class="notranslate">Extension</span> </a></div>
        <div style="float:right">Siguiente: <a href="Extended_Examples.htm">Ejemplos de fuentes</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
iOS Extensions
tvOS Extensions
-->
  <!-- TAGS
extensions_ios
-->
</body>
</html>