<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Grabación de audio</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Página que detalla el evento asíncrono de grabación de audio." />
  <meta name="rh-index-keywords" content="Objects - Evento de grabación de audio asíncrono" />
  <meta name="search-keywords" content="Grabación de audio,ev_audio_recording" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Grabación de audio</h1>
  <p><img alt="Audio Recording Event" class="center" src="../../../assets/Images/Asset_Editors/Async_AudioRecording.png">Este evento sólo puede ser activado por la <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_start_recording.htm"><span class="inline">audio_start_recording()</span></a> función
    y devolverá un <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">Mapa DS</a> almacenado en la variable <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>,
    que contiene diferentes pares clave/valor dependiendo de la <a class="glossterm" data-glossterm="callback" href="Dialog.htm#">llamada de retorno</a> de la función que ha disparado el evento.</p>
  <p>Las siguientes claves estarán disponibles en el ds_map:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - el ID del temporal <a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">buffer</a> que puedes utilizar para recuperar los datos de audio</li>
    <li class="dropspot">&quot;<span class="inline">channel_index</span>&quot; - el índice del canal de grabación devuelto por la función de llamada de la que proceden estos datos</li>
    <li class="dropspot">&quot;<span class="inline">data_len</span>&quot; - la longitud de los datos (en bytes) que ha recibido</li>
  </ul>
  <p class="note"><strong>NOTA</strong>: Como se mencionó al principio de esta página, la variable <span class="inline" style="font-size: 14px">async_load </span>sólo es válida en los eventos asíncronos, ya que el mapa DS al que apunta se crea al inicio del evento,
    y luego se borra de nuevo al final. Sin embargo, ten en cuenta que el buffer temporal en el que se almacena todo el audio con el mapa también se eliminará al final del evento, por lo que deberás copiarlo en un buffer personalizado si quieres conservarlo para su uso posterior.</p>
  <p>En el ejemplo de uso de abajo crearemos un buffer personalizado para almacenar nuestro audio grabado, y también configuraremos nuestro juego para grabar desde la fuente de entrada 0:</p>
  <p class="code">channel_index = audio_start_recording(0);<br/> audio_buffer = buffer_create(len, buffer_fast, 1);</p>
  <p>Cada paso del juego en el que se detecte la grabación activará un evento de grabación de audio asíncrono en el que se puede tratar la entrada grabada algo así:</p>
  <p class="code">var channel = async_load[? &quot;channel_index&quot;];<br/> if channel == channel_index<br/>    {<br/>    len = async_load[? &quot;data_len&quot;];<br/>    buffer_copy(async_load[? &quot;buffer_id&quot;], 0, len, audio_buffer, 0);<br/>    }</p>
  <p>Aquí simplemente comprobamos la clave &quot;channel_index&quot; para asegurarnos de que coincide con el valor devuelto cuando iniciamos la grabación, y si lo hace copiamos el contenido del buffer temporal creado para este evento en nuestro buffer personalizado. Después de esto puedes
    hacer lo que quieras con el buffer personalizado - puedes reproducirlo usando las funciones de audio dedicadas de buffer, puedes procesarlo y enviarlo por la red, puedes guardarlo en el disco... Una vez que tengas tu audio grabado en un buffer, puedes hacer básicamente
    todo lo que quieras.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Async_Events.htm">Eventos asíncronos</a></div>
        <div style="float:right">Siguiente: <a href="Cloud.htm">Nube</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Recording Event
ev_audio_recording
-->
  <!-- TAGS
ev_audio_recording
-->

</body></html>