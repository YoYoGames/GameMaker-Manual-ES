<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title>Construcción a través de la línea de comandos</title>
    <meta name="generator" content="Adobe RoboHelp 2020" />
    <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
    <script src="../assets/scripts/main_script.js"></script>
    <meta name="rh-authors" content="Gurpreet S. Matharoo" />
    <meta name="topic-comment" content="Page that explains how your project can be compiled and tested through a CLI
" />
    <meta name="rh-index-keywords" content="Building via Command Line" />
    <meta name="search-keywords" content="build, command line, cli, ci, igor, continuous integration" />
  </head>
  <body><!--<div class="body-scroll" style="top: 150px;">-->
    <h1 id="h">Construcción a través de la línea de comandos</h1>
    <p class="note"><span class="note"><strong>NOTA</strong></span> La construcción de paquetes ejecutables a través de la línea de comandos sólo está disponible en licencias específicas, así que por favor mira <a href="https://help.yoyogames.com/hc/en-us/articles/115002637011" title="Which Licence Is Right For Me?">esta página</a> para saber si tu licencia lo soporta. Para el resto de licencias, puedes ejecutar y depurar tu proyecto a través de una línea de comandos sin ninguna restricción.</p>
    <p>Además de construir su proyecto a través de la página web <span class="notranslate">IDE</span>, <span data-keyref="GameMaker Name"><span data-keyref="GameMaker Name">GameMaker</span></span> le permite construir sus proyectos a través de una interfaz de línea de comandos utilizando las numerosas opciones y comandos que se describen a continuación. Puedes usar esto para construir tu proyecto, probarlo y desplegarlo en múltiples plataformas ejecutando un archivo por lotes, y para configurar la integración continua a través de una automatización <span class="notranslate">server</span> como <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a>.</p>
    <p>Esto se hace ejecutando el ejecutable <span class="inline">Igor.exe</span> presente en su carpeta <span class="notranslate">runtime</span> y pasando las opciones y comandos listados en esta página. En <span class="notranslate">Windows</span> estará presente en la carpeta <span class="inline">C:\ProgramData\GameMaker\Cache\runtimes\runtime-[version]\bin</span> y en Mac en <span class="inline">/Users/Shared/GameMaker/Cache/runtimes/runtime-[version]/bin</span>.</p>
    <p> </p>
    <h1>Edificio Igor CI</h1>
    <h2>Configuración</h2>
    <p>Para configurar la construcción de CI en una máquina, tendrá que hacer lo siguiente:</p>
    <ul class="colour">
      <li>Instalar <span data-keyref="GameMaker Name">GameMaker</span> y el <span class="notranslate">runtimes</span> necesario</li>
      <li>Construir los proyectos a través de la <span class="notranslate">IDE</span> para los objetivos requeridos, para asegurarse de que funcionan bien</li>
      <li>Prueba de construcción desde la línea de comandos (ver ejemplos más abajo)</li>
      <li>Cree un archivo por lotes que realice la construcción que necesita dentro de la tarea (pruébelo desde la línea de comandos)</li>
      <li>Configure un entorno CI (esto depende de cómo vaya a construir sus juegos); le sugerimos que utilice <a href="https://www.jenkins.io/" title="Jenkins">Jenkins</a></li>
      <li>Configure su tarea CI y asegúrese de que todos los prerrequisitos están configurados (por ejemplo, <span class="notranslate">source control</span> sync to your project)</li>
      <li>Enganche el archivo por lotes en la tarea CI y pruebe dentro del entorno Jenkins</li>
    </ul>
    <h2>Notas</h2>
    <ul class="colour">
      <li>Algunas plataformas pueden tener problemas con la longitud de su archivo <span class="notranslate">paths</span>, en cuyo caso tendrá que <span class="inline"><a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/subst" title="subst documentation">subst</a></span> unidades virtuales en su PC (como hace el <span class="notranslate">IDE</span> ) antes de pasarlas a sus comandos</li>
      <li>Algunas plataformas (sobre todo <span class="notranslate">Android</span>) se encargan automáticamente de <span class="inline">subst</span> una unidad mientras se construye, por lo que es posible que tenga que limpiarla manualmente en caso de que se produzca un error</li>
    </ul>
    <h2>Opciones</h2>
    <p>Estas son las opciones que puedes utilizar al ejecutar el ejecutable de <strong>Igor </strong>:</p>
    <table>
      <colgroup>
        <col style="width: 316px;" />
        <col />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Opción</th>
          <th style="">Descripción</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">La carpeta de usuario utilizada para recuperar la información de la licencia
            <br>
            <br>
            En <span class="notranslate">Windows</span>, será: <span class="inline"><span>%appdata%\GameMaker\&lt;user_name&gt;_&lt;number&gt;</span>
            <br>
            En <span class="notranslate">macOS</span>, será: <span class="inline"><span>~/.config/GameMaker/&lt;user_name&gt;_&lt;number&gt;</span> </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">La carpeta raíz del tiempo de ejecución</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/project=[project_YYP_file]</span></td>
          <td style="">La dirección completa <span class="notranslate">path</span> al archivo del proyecto <span class="inline">.yyp</span> </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/cache=[cache_dir_path]</span></td>
          <td style="">El directorio <span class="notranslate">cache</span> a utilizar (por defecto es <span class="inline">\cache</span> en el directorio actual)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/temp=[temp_dir_path]</span></td>
          <td style="">El directorio temporal a utilizar (por defecto es <span class="inline">c:\temp</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/of=[output_folder_filename]</span></td>
          <td style="">El directorio de salida donde se extraerá la compilación; no especifique sólo un directorio, ya que la entrada final siempre se elimina (por ejemplo: si especifica <span class="inline">d:\game\output</span>, los archivos del juego se colocarán en <span class="inline">d:\game</span>)
            <br>
            <br>
            Si no se especifica, se creará un directorio llamado <span class="inline">output</span> en el mismo directorio que el archivo <span class="inline">.bat</span> (o desde donde se ejecute el comando), que contendrá los archivos de compilación extraídos </td>
        </tr>
        <tr>
          <td style=""><span class="inline">/tf=[target_file]</span></td>
          <td style="">El nombre real del archivo ZIP o del instalador NSIS que se crea</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/config=[configName]</span></td>
          <td style="">El nombre de la configuración a utilizar (por defecto es <span class="inline">Default</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/runtime=YYC|VM</span></td>
          <td style="">El tipo de salida (YYC o VM), por defecto VM</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/j=[NumCPUs]</span></td>
          <td style="">El número de CPUs a utilizar durante el proceso de construcción</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name_from_IDE]</span></td>
          <td style="">El nombre del dispositivo de destino tal y como está configurado en el IDE</td>
        </tr>
      </tbody>
    </table>
    <h2>Ejemplos</h2>
    <p>A continuación puedes encontrar ejemplos de comandos de compilación para todas las plataformas:</p>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down12" href="#">Opera GX</a></p>
    <div class="droptext" data-targetname="drop-down12">
      <p>Limpieza del proyecto Opera GX:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Clean</p>
      <p>Corriendo Opera GX:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- OperaGX Run</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Windows</a></p>
    <div class="droptext" data-targetname="drop-down">
      <p>Proyecto de limpieza <span class="notranslate">Windows</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Construcción de VM para <span class="notranslate">Windows</span> -- <span class="inline">Run</span>, <span class="inline">PackageZip </span>y <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Windows PackageNsis</p>
      <p>Construcción de YYC para Windows-- <span class="inline">Run</span>, <span class="inline">PackageZip </span>y <span class="inline">PackageNsis</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /platform=YYC -- Windows Run</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageZip</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Windows PackageNsis</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">macOS</a></p>
    <div class="droptext" data-targetname="drop-down1">
      <p>Proyecto de limpieza <span class="notranslate">macOS</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Mac Clean</p>
      <p>Creación de VM para <span class="notranslate">macOS</span> en un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Mac Package</p>
      <p><strong>Ten en cuenta</strong> que en Mac tendrás que utilizar mono para ejecutar Igor, por lo que tendrás que escribir <span class="inline"><strong>mono</strong></span> antes de todos tus comandos, por ejemplo <span class="inline">mono Igor.exe [options]</span></p>
      <p>Construcción de VM para <span class="notranslate">macOS</span> mientras se está en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Mac Package</p>
      <p>Construyendo YYC para <span class="notranslate">macOS</span> en un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Mac Package</p>
      <p>Construyendo YYC para <span class="notranslate">macOS</span> en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Mac Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Linux / Ubuntu</a></p>
    <div class="droptext" data-targetname="drop-down2">
      <p>Proyecto de limpieza <span class="notranslate">Linux</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Linux Clean</p>
      <p>Construcción de VM para <span class="notranslate">Linux</span> mientras se está en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Linux Package</p>
      <p>Construyendo YYC para <span class="notranslate">Linux</span> en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Linux Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">HTML5</a></p>
    <div class="droptext" data-targetname="drop-down3">
      <p>Limpieza del proyecto HTML5:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- HTML5 Clean</p>
      <p>Construcción de la carpeta HTML5 (asegúrese de especificar una carpeta de destino con <span class="inline">/tf)</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_folder] -- HTML5 folder</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">iOS</a></p>
    <div class="droptext" data-targetname="drop-down4">
      <p>Creación de VM para <span class="notranslate">iOS</span> en un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- ios Package</p>
      <p>Construcción de VM para <span class="notranslate">iOS</span> mientras se está en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ios Package</p>
      <p>Construyendo YYC para <span class="notranslate">iOS</span> en un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- ios Package</p>
      <p>Construyendo YYC para <span class="notranslate">iOS</span> en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ios Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down5" href="#">Android</a></p>
    <div class="droptext" data-targetname="drop-down5">
      <p>Proyecto de limpieza <span class="notranslate">Android</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Windows Clean</p>
      <p>Construir un APK de <span class="notranslate">Android</span> usando VM:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- Android Package</p>
      <p>Construir un APK de <span class="notranslate">Android</span> usando YYC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- Android Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">tvOS</a></p>
    <div class="droptext" data-targetname="drop-down6">
      <p>Proyecto de limpieza <span class="notranslate">tvOS</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- tvos Clean</p>
      <p>Creación de VM para <span class="notranslate">tvOS</span> en un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] -- tvos Package</p>
      <p>Construcción de VM para <span class="notranslate">tvOS</span> mientras se está en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- tvos Package</p>
      <p>Construyendo YYC para <span class="notranslate">tvOS</span> en un Mac:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC -- tvos Package</p>
      <p>Construyendo YYC para <span class="notranslate">tvOS</span> en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- tvos Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down7" href="#">PS4</a></p>
    <div class="droptext" data-targetname="drop-down7">
      <p>Limpieza del proyecto PS4:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps4 Clean</p>
      <p>Construir VM para PS4 mientras se está en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps4 Package</p>
      <p>Construyendo YYC para PS4 en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps4 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down10" href="#">PS5</a></p>
    <div class="droptext" data-targetname="drop-down10">
      <p>Limpieza del proyecto PS5:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- ps5 Clean</p>
      <p>Construyendo VM para PS5 en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- ps5 Package</p>
      <p>Construyendo YYC para PS5 en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- ps5 Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down8" href="#">Xbox One</a></p>
    <div class="droptext" data-targetname="drop-down8">
      <p>Proyecto de limpieza de Xbox One:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOne Clean</p>
      <p>Construir VM para Xbox One mientras se está en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOne Package</p>
      <p>Construyendo YYC para Xbox One en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOne Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down11" href="#">Xbox Serie X/S</a></p>
    <div class="droptext" data-targetname="drop-down11">
      <p>Limpieza del proyecto Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- XBoxOneSeriesXS Clean</p>
      <p>Construcción de VM para Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
      <p>Construcción de YYC para Xbox Series X/S:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- XBoxOneSeriesXS Package</p>
    </div>
    <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down9" href="#">Interruptor</a></p>
    <div class="droptext" data-targetname="drop-down9">
      <p>Proyecto de limpieza <span class="notranslate">Switch</span>:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] -- Switch Clean</p>
      <p>Construcción de VM para <span class="notranslate">Switch</span> mientras se está en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /device=[device_IDE_Name] -- Switch Package</p>
      <p>Construyendo VM para YYC en un PC:</p>
      <p class="code">Igor.exe /uf=[user_folder] /rp=[runtime_path] /project=[project_YYP_file] /cache=[cache_dir_path] /temp=[temp_dir_path] /of=[output_folder_filename] /tf=[target_file] /platform=YYC /device=[device_IDE_Name] -- Switch Package</p>
    </div>
    <p> </p>
    <h1>Tiempo de ejecución de Igor</h1>
    <p>Estas son las opciones que se pueden utilizar con el tiempo de ejecución de Igor:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Opción</th>
          <th style="">Descripción</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Establezca la carpeta de usuario utilizada para recuperar la información de la licencia para que <span data-keyref="GameMaker Name">GameMaker</span> sepa qué módulos se pueden instalar</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Establezca el <span class="notranslate">path</span> directo a un archivo de licencia, puede ser utilizado como una alternativa a la configuración de una carpeta de usuario (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/ru=[runtime_url]</span></td>
          <td style="">Establezca la URL de la que se obtendrá la información de <span class="notranslate">runtime</span> (por defecto, la versión estable)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/rp=[runtime_root]</span></td>
          <td style="">Configure la carpeta de instalación local de <span class="notranslate">runtime</span> para listar los tiempos de ejecución instalados <span class="notranslate">runtimes</span> o instale nuevos tiempos de ejecución</td>
        </tr>
      </tbody>
    </table>
    <p>Estos son los comandos que se pueden utilizar con el tiempo de ejecución de Igor:</p>
    <h4>Sintaxis:</h4>
    <p class="code">Igor.exe [command]</p>
    <table>
      <colgroup>
        <col style="width: 237px;" />
        <col style="width: 537px;" />
      </colgroup>
      <tbody>
        <tr>
          <th style="">Comando</th>
          <th style="">Descripción</th>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime List</span></td>
          <td style="">Enumera los <span class="notranslate">runtimes</span> disponibles en una fuente (número de versión, fecha/hora de compilación)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime ListInstalled [directory]</span></td>
          <td style="">Enumera los <span class="notranslate">runtimes</span> disponibles en la carpeta actual (<span class="inline">directory</span>= completo <span class="notranslate">path</span> a la carpeta)
            <br>
            <br>
            Puede especificar un directorio en el que buscar, pero si no se especifica se utilizará por defecto el directorio actual
            <br>
            <br>
            Esto también comprueba si hay un archivo <span class="inline">receipt.json</span> y una carpeta <span class="inline">manifest</span> dentro del directorio (asegurándose de que es realmente un <span class="notranslate">runtime</span>) </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Info [version]</span></td>
          <td style="">Imprime la información sobre los <span class="notranslate">runtime</span> más recientes en el feed dado; también necesita un archivo de licencia para mostrar la información relativa a los módulos disponibles para el usuario
            <br>
            <br>
            <span class="inline">version</span> puede ser un <span class="notranslate">string</span> utilizado para buscar en los títulos de los feeds (por ejemplo: <span class="inline">&quot;739&quot;</span> mostraría información de todas las construcciones que contengan 739 en sus números de versión), o puede ser <span class="inline">all</span> para mostrar información de todos los feeds
            <br>
            <br>
            Enumerará los módulos con los nombres de archivo <span class="inline">.zip</span> para cada módulo </td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Install [version]</span></td>
          <td style="">Instala la última versión de <span class="notranslate">runtime</span> desde el feed dado, utilizando la dirección <span class="inline">version</span> como filtro de búsqueda; si no se especifica, se utiliza por defecto la última versión. Obtendrá todos los módulos que el usuario tenga en su licencia.</td>
        </tr>
        <tr>
          <td style=""><span class="inline">Runtime Verify [folder=.]</span></td>
          <td style="">Calcula las sumas de comprobación de todos los archivos instalados y las compara con las sumas de comprobación escritas en el manifiesto <span class="inline">folder</span>. Se puede especificar una carpeta para comprobar, sin embargo, si no se especifica, se utilizará por defecto el directorio actual.
            <br>
            <br>
            Esto hará que <span class="notranslate">flag</span> compruebe los archivos cuyas sumas de comprobación no coincidan, los que falten y los que no deberían estar ahí.
            <br>
            <br>
            Tenga en cuenta que los propios archivos de manifiesto no se verifican y que un usuario puede alterar los archivos de manifiesto para que coincidan con los instalados. </td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <h1>Pruebas de Igor</h1>
    <p>Estas son las opciones que se pueden utilizar para probar tus construcciones con Igor:</p>
    <table>
      <tbody>
        <tr>
          <th style="">Opción</th>
          <th style="">Descripción</th>
        </tr>
        <tr>
          <td style=""><span class="inline">/uf=[user_folder]<strong></strong></span></td>
          <td style="">Establezca la carpeta de usuario utilizada para recuperar la información de la licencia para que <span data-keyref="GameMaker Name">GameMaker</span> sepa qué módulos se pueden instalar</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/lf=[license_file]</span></td>
          <td style="">Establecer un <span class="notranslate">path</span> directo a un archivo de licencia, se puede utilizar como una alternativa a la configuración de una carpeta de usuario (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/df=[device_file]</span></td>
          <td style="">Establezca un <span class="notranslate">path</span> directo a un archivo <span class="inline">devices.json</span>, puede ser utilizado como una alternativa a la configuración de una carpeta de usuario (<span class="inline">/uf</span>)</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/timeout=[number_of_seconds_to_wait]</span></td>
          <td style="">El tiempo de espera que se utilizará para la prueba en segundos, por defecto es de 120 segundos; la prueba se detendrá después de este tiempo de espera y se marcará como fallida</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/waittime=[number_of_seconds_to_wait]</span></td>
          <td style="">Número de segundos que hay que esperar en la página principal <span class="notranslate">loop</span> antes de declarar la prueba como superada, por defecto 30 segundos</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/device=[device_name]</span></td>
          <td style="">Se utiliza para buscar el nombre del dispositivo en el archivo <span class="inline">devices.json</span> de la carpeta de usuario</td>
        </tr>
        <tr>
          <td style=""><span class="inline">/target=[list_of_targets]</span></td>
          <td style="">Lista de objetivos separada por comas en el formato <span class="inline">PLATFORM|DEVICE</span>, por ejemplo: <span class="inline">/target=&quot;Windows|Local,HTML|Firefox&quot;</span>
            <br>
            <br>
            Si especifica <strong>todos</strong>, las pruebas intentarán ejecutarse para todos los dispositivos del archivo <span class="inline">devices.json</span> </td>
        </tr>
      </tbody>
    </table>
    <p>Hay un comando que puedes utilizar para ejecutar pruebas con Igor:</p>
    <p class="code">Igor.exe Tests RunTests [test_directory/test_filename]</p>
    <p>Debe especificar un directorio de prueba o un nombre de archivo de prueba.</p>
    <ul class="colour">
      <li>Si es un directorio, Igor buscará un archivo llamado <span class="inline">tests.json</span> en el directorio
        <ul>
          <li>Si <strong>no</strong> se encuentra el archivo, Igor buscará recursivamente los archivos <span class="inline">.yyz</span> y <span class="inline">.yyp</span> en el directorio
            <ul>
              <li>Cada proyecto encontrado será construido y ejecutado en Windows</li>
              <li>Esperará hasta que el corredor llegue al bucle principal
                <ul>
                  <li>La prueba se supera si el ejecutor sigue funcionando después del tiempo de espera</li>
                  <li>La prueba falla si el proyecto no se compila dentro del período de tiempo de espera, o se bloquea antes de que el tiempo de espera haya terminado</li>
                </ul>
              </li>
            </ul>
          </li>
          <li>Si se <strong>encuentra</strong> un archivo <span class="inline">tests.json</span>, Igor ejecutará las pruebas descritas en el archivo (véase el ejemplo siguiente)</li>
        </ul>
      </li>
      <li>Como alternativa, puede proporcionar un <span class="notranslate">path</span> directo a un archivo <span class="inline">tests.json</span> en lugar de un directorio</li>
    </ul>
    <p> </p>
    <h1>Archivo Tests.json</h1>
    <h2>Formato</h2>
    <p>El archivo <span class="inline">tests.json</span> debe tener el siguiente formato:</p>
    <ul class="colour">
      <li>El archivo JSON debe contener una matriz de objetos</li>
      <li>Cada <span class="notranslate">object</span> debe describir una prueba
        <ul>
          <li>La prueba <span class="notranslate">object</span> debe contener estas claves:
            <ul>
              <li><span class="inline">name</span>: Un nombre utilizado para informar si la prueba ha sido aprobada o fallada</li>
              <li><span class="inline">path</span>: Un <span class="notranslate">path</span> a un archivo o carpeta <span class="inline">.yyp</span>, <span class="inline">.yyz</span>, <span class="inline">.gml</span>, <span class="inline">.js</span> para la prueba</li>
              <li><span class="inline">command</span>: El comando Igor para la prueba (<span class="inline">Run</span>, <span class="inline">CreatePackage</span>, etc. como se describe anteriormente)</li>
            </ul>
          </li>
          <li>La prueba <span class="notranslate">object</span> también puede contener estas claves:
            <ul>
              <li><span class="inline">platform</span>: Pasado directamente a través de Igor para hacer la prueba</li>
              <li><span class="inline">device</span>: El nombre del dispositivo del archivo <span class="inline">devices.json</span> </li>
              <li><span class="inline">target</span>: El objetivo en un formato &quot;<span class="inline">PLATFORM|TARGET&quot;</span>, por ejemplo: &quot;<span class="inline">Windows|Local&quot;</span></li>
              <li><span class="inline">timeout</span>: Un tiempo de espera para toda la prueba, incluyendo la compilación y la ejecución; si se supera, la prueba se detendrá y se marcará como fallida</li>
              <li><span class="inline">waittime</span>: El tiempo que se debe esperar después de entrar en la página principal <span class="notranslate">loop</span> antes de decidir si la prueba ha sido superada</li>
              <li><span class="inline">owner</span>La dirección de correo electrónico del usuario al que se le enviará un mensaje si la prueba falla.</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
    <h2>Ejemplo</h2>
    <p>Este es un ejemplo de un archivo <span class="inline">tests.json</span>:</p>
    <p class="code">[
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Game Idea Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/scratch/GameIdea.yyz&quot;,
      <br/>
      &quot;platform&quot; : &quot;Windows&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;timeout&quot; : &quot;500&quot;,
      <br/>
      &quot;waittime&quot; : &quot;30&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Platformer Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Platformer Game/PlatformerGame.yyp&quot;,
      <br/>
      &quot;target&quot; : &quot;Windows|Local,HTML5|selenium:firefox,PS4|Default&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;
      <br/>
      },
      <br/>
      {
      <br/>
      &quot;name&quot; : &quot;Puzzle Game Windows&quot;,
      <br/>
      &quot;path&quot; : &quot;C:/Users/&lt;MY USERNAME&gt;/Documents/GameMaker/Puzzle Game/PuzzleGame.yyp&quot;,
      <br/>
      &quot;platform&quot; : &quot;HTML5&quot;,
      <br/>
      &quot;command&quot; : &quot;Run&quot;,
      <br/>
      &quot;device&quot; : &quot;selenium:chrome&quot;
      <br/>
      }
      <br/>
      ]</p>
    <p> </p>
    <p> </p>
    <div class="footer">
      <div class="buttons">
        <div class="clear">
          <div style="float:left">Atrás: <a data-xref="{title}" href="Runner_Details/Runner_Details.htm">Corredor y Compilador</a></div>
          <div style="float:right">Siguiente: <a data-xref="{title}" href="Runner_Details/Compiler_Batch_Files.htm">Archivos de lotes / scripts del compilador</a></div>
        </div>
      </div>
      <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
    </div>
    <!-- KEYWORDS
Building via Command Line
CLI
Command Line Interface
CI
Continuous Integration
--><!-- TAGS
building_via_command_line
--></body>
</html>