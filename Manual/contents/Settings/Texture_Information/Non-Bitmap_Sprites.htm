<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Sprites sin mapa de bits</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../assets/css/default.css" />
  <script src="../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Section explaining non-bitmap sprites in GameMaker" />
  <meta name="search-keywords" content="SWF,Spine,skeleton animation,vector sprites" />
  <meta name="rh-index-keywords" content="Texture Goups - Non-Bitmap Sprites,SWF,Spine" />
</head>
<body>
  <h1>Sprites sin mapa de bits</h1>
  <p><span data-keyref="GameMaker Name">GameMaker</span> tiene soporte para los no-mapas <span class="notranslate">sprites</span> en forma de archivos <a class="glossterm" data-glossterm="vector" href="#">vectoriales</a> <span class="inline">SWF </span>o archivos de <strong>Animación Esquelética de Espines</strong>. Ambos formatos tienen sus pros y sus contras, y las dos secciones siguientes explican cómo importarlos en el <a href="../../The_Asset_Editors/Sprites.htm">Sprite Editor</a>, así como un poco de información sobre cómo se dibujan.</p>
  <h2>Animación esquelética <span class="notranslate">Sprites</span> (<span class="notranslate">Spine</span>)</h2>
  <p>Un <span class="notranslate">sprite</span> realizado con animación esquelética, es aquel en el que se ha creado un &quot;esqueleto&quot; base y se ha animado utilizando fotogramas clave para mover las partes componentes del esqueleto en el tiempo. Este esqueleto es entonces revestido de un <a class="glossterm" data-glossterm="atlas de texturas" href="#">atlas de texturas</a> y la animación resultante se exporta en uno de los muchos tipos de archivos. <span data-keyref="GameMaker Name">GameMaker</span> permite importar este tipo de <span class="notranslate">sprite</span> siempre y cuando se haya exportado como un archivo de formato <span class="inline">*.json</span> y tenga el archivo de atlas de textura asociado correctamente (<span class="inline">*.atlas</span>) y el archivo de imagen (como <span class="inline">*.png</span>) <em>en el mismo directorio</em>.</p>
  <p><img>Actualmente <span data-keyref="GameMaker Name">GameMaker</span> <strong>sólo</strong> puede <strong>importar imágenes vectoriales desde archivos en formato JSON hechos por el programa <a href="http://esotericsoftware.com/">Spine</a></strong>, sin embargo la forma de importarlos al programa es casi idéntica a la de añadir una imagen normal de mapa de bits. Para añadir una animación esquelética, es necesario crear un nuevo <span class="notranslate">sprite</span>, lo que hará que aparezca el cuadro de diálogo estándar <strong>Load Sprite</strong>, sólo que aquí hay que asegurarse de haber seleccionado <span class="inline">*.json</span> en el filtro de archivos de la parte inferior:</p>
  <p><img alt="Spine UI" class="center" src="../../assets/Images/Settings/Spine_Example.png" /></p>
  <p>Al pulsar el botón &quot;cargar&quot; se añadirá la animación esquelética al <a href="../../Introduction/The_Asset_Browser.htm">Navegador de Activos</a> como <span class="notranslate">sprite</span>, mostrándose una barra de progreso mientras se procesa el archivo. Ten en cuenta que, dependiendo de la complejidad del archivo, esto puede tardar un momento o dos. Cuando el procesamiento haya terminado, volverá al diálogo de propiedades de <span class="notranslate">sprite</span>, que ahora tendrá el siguiente aspecto:</p>
  <p><img>Una vez que haya importado la animación, puede establecer las propiedades de colisión, pero tenga en cuenta que está limitado aquí a usar simplemente colisiones precisas o colisiones de caja delimitadora, y que los datos de colisión para una animación esquelética se toman explícitamente de los datos proporcionados. <span data-keyref="GameMaker Name">GameMaker</span> no genera ninguna máscara de colisión si los datos faltan en el archivo importado, lo que significa que simplemente no obtendrá colisiones de trabajo si las máscaras no se establecen correctamente en el programa utilizado para crear la imagen que se importa.</p>
  <p class="note"><span class="note">NOTA</span> Debido a la complejidad de las animaciones esqueléticas, la imagen de vista previa que se muestra en el editor <span class="notranslate">sprite</span> no pretende representar con exactitud su animación, sino que le ofrece una imagen simple que representa la animación para visualizarla en el editor <span class="notranslate">room</span>.</p>
  <p>A diferencia del mapa de bits <span class="notranslate">sprites</span>, la animación esquelética importada <span class="notranslate">sprite</span> <strong>no puede ser modificada en el editor</strong> de ninguna manera, pero hay un número de funciones disponibles dentro de <span class="notranslate">GameMaker Language</span> (<span class="notranslate">GML</span>) que pueden ser usadas para cambiar pieles, establecer propiedades y controlar otros aspectos de la animación. Tampoco puede establecer ninguna de las opciones de textura para el <span class="notranslate">sprite</span>, ya que <span class="notranslate">GameMaker</span> utilizará el atlas de textura suministrado que fue hecho por el programa que generó el <span class="notranslate">sprite</span>.</p>
  <p>Hay una serie de cosas que debes tener en cuenta al importar una animación de esqueleto <span class="notranslate">sprites</span>, siendo la más importante que algunas de las funciones de dibujo de <span class="notranslate">sprite</span> y de gestión de <span class="notranslate">sprite</span> no son compatibles por razones técnicas, particularmente aquellas funciones de dibujo que dibujan sólo una parte de <span class="notranslate">sprite</span>, o que &quot;sesgan&quot; la posición de alguna manera (ver las funciones individuales de <a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/Sprites_And_Tiles.htm"><span class="inline">draw_sprite_*()</span></a> para conocer los detalles exactos). Sin embargo, las funciones básicas de dibujo de <span class="notranslate">sprite</span> son totalmente compatibles, al igual que las variables incorporadas en <span class="notranslate">sprite</span>. Aparte de estas funciones y variables, también puede establecer y cambiar las propiedades de la animación utilizando funciones especiales de <span class="inline">skeleton_*</span>, que se enumeran y explican en la sección de referencia sobre <a href="../../GameMaker_Language/GML_Reference/Asset_Management/Sprites/Skeletal_Animation/Skeletal_Animation.htm">Animaciones Esqueléticas</a>.</p>
  <h2>Vector <span class="notranslate">Sprites</span> (SWF)</h2>
  <p>Por lo general, todos los sitios <span class="notranslate">sprites</span> en <span class="notranslate">GameMaker</span> utilizan mapas de bits que, aunque son flexibles en cuanto al contenido, limitan el tamaño y el número de cuadros posibles en <span class="notranslate">sprite</span> antes de que el uso de la memoria sea prohibitivo. Los vectores <span class="notranslate">sprites</span> superan estas limitaciones almacenando y dibujando su contenido de forma diferente: en lugar de una cuadrícula de píxeles, que puede volverse borrosa o en bloque cuando se escala, se dibujan como triángulos utilizando matemáticas vectoriales y éstos pueden ampliarse (o reducirse) sin perder definición, como se ilustra en la imagen siguiente:</p>
  <p><img>Para ayudarte a visualizar cómo se hace esto, la imagen de abajo es del mismo vector Fireman <span class="notranslate">sprite</span> sólo que ahora podemos ver los polígonos que se usan para hacer la imagen dentro de <span data-keyref="GameMaker Name">GameMaker</span>:</p>
  <p><img>Sin embargo, nada es gratis cuando se trata de programar juegos, y la contrapartida de los vectores <span class="notranslate">sprites</span> es que son más costosos de dibujar para la CPU que los mapas de bits <span class="notranslate">sprites</span> y esta diferencia de velocidad aumenta a medida que aumenta la complejidad de la animación que se importa. Además, su uso de memoria se ve afectado por su complejidad visual, a diferencia del mapa de bits <span class="notranslate">sprites</span>. Teniendo esto en cuenta, permiten añadir grandes gráficos animados de una forma que sería imposible utilizando los mapas de bits tradicionales <span class="notranslate">sprites</span>.</p>
  <p>En el lado opuesto de la ecuación del rendimiento, como el vector <span class="notranslate">sprites</span> sólo dibuja los píxeles absolutamente necesarios (a diferencia del mapa de bits <span class="notranslate">sprites</span> que también &quot;dibuja&quot; el espacio vacío alrededor de la imagen) pueden ser más baratos desde la perspectiva de la GPU. Además, en general el vector <span class="notranslate">sprites</span> es mucho más pequeño que sus equivalentes de mapa de bits - para el ejemplo del bombero anterior los tamaños de los distintos tipos de <span class="notranslate">sprite</span> son los siguientes:</p>
  <p class="code">Bitmap at 70x68 = 4x70x68 bytes x 12 frames = 223k<br />
    Vector = 54k</p>
  <p>Si se cuadruplica la resolución del sprite:</p>
  <p class="code">Bitmap at 280x272 = 4x280x272 bytes x 12 frames = 3570k<br />
    Vector = 54k</p>
  <p>Así que, como puedes ver, se puede ahorrar mucha memoria potencialmente utilizando el vector <span class="notranslate">sprites</span>, y todavía tenemos mucho potencial para ahorrar espacio en el futuro.</p>
  <p>Actualmente <span data-keyref="GameMaker Name">GameMaker</span> tiene <em>un </em>soporte <em>limitado </em>para vectores <span class="notranslate">sprites</span>. y sólo puede importar imágenes vectoriales desde archivos de formato <span class="inline">SWF</span>. La forma de importarlas al programa es casi idéntica a la de añadir una imagen de mapa de bits normal. Para añadir un vector <span class="notranslate">sprite</span>, cree un nuevo <span class="notranslate">sprite</span>, lo que hará que aparezca el cuadro de diálogo estándar Load <span class="notranslate">Sprite</span>, pero asegúrese de que ha seleccionado <span class="inline">*.swf</span> en el filtro de archivos de la parte inferior.</p>
  <p><img>Al pulsar el botón &quot;cargar&quot; se añadirá la imagen vectorial o la animación al <a href="../../Introduction/The_Asset_Browser.htm">Navegador de Activos</a>, mostrándose una barra de progreso a medida que se procesa el archivo. Ten en cuenta que, dependiendo de la complejidad del archivo, esto puede llevar un tiempo (hasta un minuto para las animaciones más complejas). Cuando el procesamiento haya finalizado, volverá al diálogo de propiedades de <span class="notranslate">sprite</span>, que ahora tendrá el siguiente aspecto:</p>
  <p><img>El editor de <span class="notranslate">sprite</span> no habrá cambiado mucho, pero ahora el botón <strong>Editar imagen</strong> se ha vuelto gris y no se puede pulsar, ya que no hay mapas de bits para editar en este tipo de <span class="notranslate">sprite</span>. En segundo lugar, todas las opciones de textura también se han vuelto grises. El SWF <span class="notranslate">sprites</span> se basa en las matemáticas y, como tal, no suele tener texturas asociadas, por lo que ninguna de las opciones disponibles es aplicable a este tipo de <span class="notranslate">sprite</span>.</p>
  <p class="note"><span class="note">NOTA</span> El aspecto de la imagen en el editor de vista previa que hayas elegido no será el mismo que el de tu juego, ni el de la ventana de vista previa del editor <span class="notranslate">sprite</span>. La imagen vectorial se importará al tamaño en que fue creada, que no es necesariamente el tamaño en que se muestra la vista previa (los navegadores normalmente escalarán la imagen para que quepa, por ejemplo).</p>
  <p>Una adición al Editor de <span class="notranslate">Sprite</span> es que puede establecer la <em>calidad </em>del vector <span class="notranslate">sprite</span> cuando se dibuja utilizando el control deslizante de <strong>Precisión SWF</strong> en la parte superior. Esto simplemente reducirá o aumentará el número de triángulos utilizados para generar el <span class="notranslate">sprite</span> - con un valor de alrededor del 50% es suficiente normalmente para la mayoría de los juegos - sin embargo usted debe experimentar con este valor si usted está utilizando la escala extrema, o está teniendo problemas de rendimiento.</p>
  <p>Hay una serie de cosas que debe tener en cuenta al importar el vector <span class="notranslate">sprites</span>, siendo la más importante que algunas de las funciones de dibujo de <span class="notranslate">sprite</span> y de gestión de <span class="notranslate">sprite</span> no son compatibles por razones técnicas, en particular aquellas funciones de dibujo que dibujan sólo una parte de <span class="notranslate">sprite</span>, o que &quot;sesgan&quot; la posición de alguna manera (ver las funciones individuales <a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/Sprites_And_Tiles.htm"><span class="inline">draw_sprite_*()</span></a> para conocer los detalles exactos). Sin embargo, las funciones básicas de dibujo de <span class="notranslate">sprite</span> son totalmente compatibles, así como las variables incorporadas en <span class="notranslate">sprite</span>. También puede establecer diferentes valores de <a class="glossterm" data-glossterm="antialiasing" href="#">antialiasing</a> (AA) para el SWF <span class="notranslate">sprites</span> que se está dibujando utilizando las funciones <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_enable_swf_aa.htm">draw_enable_swf_aa()</a></span>, <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_get_swf_aa_level.htm">draw_get_swf_aa_level()</a></span> o <span class="inline"><a href="../../GameMaker_Language/GML_Reference/Drawing/Sprites_And_Tiles/draw_set_swf_aa_level.htm">draw_set_swf_aa_level()</a></span>.</p>
  <p>También debe tener en cuenta lo siguiente:</p>
  <ul class="colour">
    <li>Al importar un archivo <span class="inline">*.SWF</span>, <em>no </em>se admite Actionscript, por lo que si su SWF depende de él para funcionar correctamente, probablemente no saldrá bien. Del mismo modo, cualquier clip de película incrustado que tenga su propio <span class="notranslate">timeline</span> sólo tendrá su primer fotograma mostrado a lo largo de la animación - toda la animación debe estar en el <span class="notranslate">timeline</span> principal.</li>
    <li>Si su archivo vectorial tiene detalles particularmente finos, puede encontrar ocasionalmente que aparecen agujeros o triángulos extraños en el resultado <span class="notranslate">sprites</span>. Esto se debe a que, en escalas pequeñas, la geometría puede colapsar y crear formas que no se triangulan bien. En este caso tienes dos opciones: puedes aumentar la escala del contenido del archivo vectorial, lo que dará al importador más <span class="notranslate">room</span> para jugar, o puedes intentar reducir el nivel de detalle en el <span class="notranslate">object</span> que se está rompiendo.</li>
    <li><span data-keyref="GameMaker Name">GameMaker</span> utiliza el tamaño del escenario del SWF como los límites del resultado <span class="notranslate">sprite</span>. Sin embargo, si usted tiene algo en el escenario fuera de estos límites todavía se dibuja. Esto significa que debe evitar poner cualquier cosa fuera de los límites del escenario si no quiere que se muestre, o utilizar una capa de máscara para limitar el dibujo a esta área.</li>
    <li>El tamaño del escenario también afecta al tamaño de las máscaras de colisión que se generan, por lo tanto si tienes un tamaño de escenario grande y muchos fotogramas en tu animación puedes potencialmente consumir mucha memoria. Por lo tanto, sólo utilice máscaras de colisión precisas si realmente lo necesita.</li>
    <li>Dado que un archivo SWF se crea a partir de múltiples capas, algunas de las cuales pueden superponerse, el alfa no funciona del mismo modo que con el mapa de bits <span class="notranslate">sprites</span>: las áreas superpuestas no se verán tan transparentes como otras partes de <span class="notranslate">sprite</span>, ya que los píxeles se dibujan varias veces.</li>
    <li> <em>Se </em>admiten los rellenos de mapa de bits, aunque si utiliza rellenos de mapa de bits en mosaico como parte de su archivo SWF, debe asegurarse de que el mapa de bits tenga un tamaño de potencia de dos, ya que, de lo contrario, no se mostrará correctamente en <span class="notranslate">tile</span>. También se admite la representación de texto, pero es necesario incrustar el <span class="notranslate">font</span> en el archivo SWF para que aparezca en el resultado <span class="notranslate">sprite</span>. Además, actualmente sólo se admite el texto de una sola línea alineado a la izquierda.</li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Texture_Groups.htm">Grupos de texturas</a></div>
        <div style="float:right">Siguiente: <a href="Texture_Pages.htm">Páginas de texturas</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
</body>
</html>