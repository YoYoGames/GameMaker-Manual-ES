<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Repita</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the repeat function" />
  <meta name="rh-index-keywords" content="repeat" />
  <meta name="search-keywords" content="if,else,then,?,ternary,conditional" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Repita</h1>
  <p>El <span class="notranslate">GameMaker Language</span> tiene una serie de formas en las que se pueden realizar <i>bucles</i>, es decir, hacer que una o varias sentencias iteren sobre sí mismas un determinado número de veces. La más sencilla es la sentencia <span class="inline">repeat</span>, que tiene la forma:</p>
  <p class="code">repeat (&lt;expression&gt;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>Con <span class="inline">repeat</span> la <a class="glossterm" data-glossterm="declaración" href="#">expresión</a> dada se repite el número de veces indicado por el valor redondeado de la <a class="glossterm" data-glossterm="expresión" href="#">expresión</a>. Por ejemplo, lo siguiente crea cinco bolas en posiciones aleatorias:</p>
  <p class="code">repeat (5)<br />
    {<br />
        instance_create_layer(random(400), random(400), &quot;Instances&quot;, obj_ball);<br />
    }</p>
  <p>Esto puede ser muy útil para evitar escribir el mismo código varias veces, o para utilizar matrices, o para contar a través de un número de operaciones, etc. Tampoco está limitado a utilizar una sola sentencia, y puede repetir varias sentencias encerrándolas entre llaves <span class="inline">{}</span>. Por ejemplo:</p>
  <p class="code">var _x = 32;<br />
    repeat (global.p_lives)<br />
    {<br />
        draw_sprite(spr_heart, 0, _x, 32);<br />
        _x += sprite_get_width(spr_heart);<br />
    }</p>
  <p>El ejemplo anterior repite las sentencias en las corchetes durante el número de <a class="glossterm" data-glossterm="iteración" href="#">iteraciones</a>que tenga la variable global &quot;lives&quot;, y cada iteración dibuja el corazón <span class="notranslate">sprite</span> en la posición <span class="inline">_x</span>, luego mueve la posición a lo largo de un bit basado en el ancho del corazón <span class="notranslate">sprite</span>.</p>
  <p><strong>¿Cuándo debe utilizar un <span class="inline">repeat</span> <span class="notranslate">loop</span>?</strong> Siempre que quieras repetir sobre una o más sentencias un número fijo de veces sin necesidad específica de mantener un recuento de las iteraciones.</p>
  <p>Vale la pena señalar que puede utilizar las declaraciones especiales <span class="inline"><a href="break.htm">break</a></span> y <span class="inline"><a href="continue.htm">continue</a></span> dentro de un bucle <font face="Lucida Console"><span style="font-size: 16px;"><b>repetir</b></span></font> bucle. Usando <span class="inline">break</span> saldrá inmediatamente de <span class="notranslate">loop</span> y pasará a cualquier código que esté en el evento o función después de que <span class="notranslate">loop</span> haya terminado, por ejemplo</p>
  <p class="code">var i = 0;<br />
    var temp = 0;<br />
    repeat (10)<br />
    {<br />
        temp += array[i];<br />
        if (temp &gt; max_total)<br />
        {<br />
            break;<br />
        }<br />
        else<br />
        {<br />
            i += 1;<br />
        }<br />
    }</p>
  <p>El código anterior <span class="notranslate">loops</span> a través de 10 valores <a href="../Arrays.htm">del array</a> y los añade a una variable local. Si el total de la variable local es mayor que el valor dado para <span class="inline">max_total</span>, entonces el <span class="notranslate">loop</span> se termina usando break, de lo contrario el <span class="notranslate">loop</span> continuará. </p>
  <p>Un ejemplo de uso de <span class="inline">continue</span> en un <span class="inline">repeat</span> <span class="notranslate">loop</span> sería:</p>
  <p class="code">repeat(10)<br />
    {   <br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        if (instance_position(_x, y, obj_Enemy)<br />
        {<br />
            continue;<br />
        }<br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }</p>
  <p>Este código se repetirá 10 veces, generando una posición aleatoria de <span class="notranslate">room</span> y comprobando si existe una instancia de <span class="notranslate">object</span> <span class="inline">obj_Enemy</span> en esa posición. Si lo hace, la iteración actual de <span class="notranslate">loop</span> se termina usando <span class="inline">continue</span> y se inicia una nueva iteración, y si no lo hace entonces se crea una instancia de <span class="notranslate">object</span> <span class="inline">obj_Enemy</span> en la posición aleatoria.</p>
  <p>Para ver más ejemplos de funciones de <span class="notranslate">loop</span>, consulte las secciones de <a href="while.htm"><span class="inline">while</span></a>, <a href="do___until.htm"><span class="inline">do... until</span></a>y <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">Siguiente: <a href="while.htm"><span class="notranslate">while</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
repeat
-->
  <!-- TAGS
repeat
-->
</body>
</html>