<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>cambiar</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the switch function" />
  <meta name="rh-index-keywords" content="switch,case" />
  <meta name="search-keywords" content="switch,default" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>cambiar</h1>
  <p>En varias situaciones, querrá que sus instancias realicen diferentes acciones en función de un valor concreto. Puede hacerlo utilizando varias sentencias consecutivas <a href="If_Else_and_Conditional_Operators.htm"><span class="inline">if / else</span></a> pero cuando las opciones posibles son más de dos o tres, suele ser más fácil utilizar la sentencia <span class="inline">switch</span>.</p>
  <p>Una declaración <span class="inline">switch</span> tiene la siguiente sintaxis:</p>
  <p class="code">switch (&lt;expression&gt;)<br />
    {<br />
        case &lt;constant1&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
    <br />
        case &lt;constant2&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
        <br />
        // more cases (with breaks)<br />
    <br />
        default:<br />
            &lt;code&gt;;<br />
    }
  </p>
  <p>Esto funciona de la siguiente manera:</p>
  <ul class="colour">
    <li>Primero se ejecuta la <a class="glossterm" data-glossterm="expresión" href="#">expresión</a>.</li>
    <li>A continuación, su resultado se compara con las diferentes constantes después de cada una de las<span class="glossextra">declaraciones de</span> <span class="inline">case</span>. Cuando decimos &quot;constante&quot; lo que queremos decir es que el valor en el caso no puede ser una expresión variable y debe ser un valor fijo de cualquier <a href="../Data_Types.htm">tipo de datos</a>, como <span class="inline2">&quot;lucha&quot;</span> o <span class="inline2">3</span> o la palabra clave <span class="inline2"><span class="inline"><a href="../Instance_Keywords.htm">noone</a></span></span>. </li>
    <li>La ejecución comienza a partir de la primera sentencia <span class="inline">case</span> con el valor coincidente, <i>hasta que se encuentra una sentencia <a href="break.htm"><span class="notranslate">break</span></a> </i>.</li>
    <li>Si ninguna sentencia <span class="inline">case</span> tiene el valor correspondiente, se ejecutará la sentencia <span class="inline">default</span>. No es necesario que haya una sentencia <span class="inline">default</span>, y si no se suministra ninguna, no se realizará ninguna acción cuando no haya casos coincidentes. La sentencia <span class="inline">default</span> puede colocarse en cualquier parte de un bloque <span class="notranslate">switch</span>, aunque tradicionalmente se coloca al final, después de todos los casos.</li>
  </ul>
  <p class="note"><span class="note">NOTA</span> La sentencia <span class="notranslate">switch</span> continuará ejecutando código dentro de un <span class="inline">case</span>, hasta que se encuentre un <span class="inline">break</span>. Si no utiliza <span class="inline">break</span>s al final de sus casos, hará que el <span class="notranslate">switch</span> se &quot;filtre&quot; al siguiente <span class="inline">case</span>, e incluso a una sección <span class="inline">default</span>, si no hay <span class="inline">break</span>s en el camino. Esto puede causar un comportamiento no deseado, ya que la ejecución de un <span class="inline">case</span> puede dar lugar a la ejecución de múltiples <span class="inline">case</span>s, así que asegúrese de utilizar <span class="inline">break</span> cuando sea apropiado.</p>
  <p>Un ejemplo sencillo de utilización de una declaración <span class="notranslate">switch</span> sería algo así:</p>
  <p class="code">switch (player_lives)<br />
    {<br />
        case 3:<br />
            draw_sprite(20, 20, spr_face_healthy);<br />
        break;<br />
    <br />
        case 2:<br />
            draw_sprite(20, 20, spr_face_hurt);<br />
        break;<br />
    <br />
        case 1:<br />
            draw_sprite(20, 20, spr_face_fatal);<br />
        break;<br />
    <br />
        default:<br />
            draw_sprite(20, 20, spr_face_fainted);<br />
        break;<br />
    }
  </p>
  <p>Tenga en cuenta que se pueden utilizar varias sentencias <span class="inline">case</span> para ejecutar la misma sentencia, ya que la <span class="inline">break</span> no siempre es necesaria para todas y cada una de las <span class="inline">case</span>. Si no hay ninguna sentencia <span class="inline">break</span> para un determinado <span class="inline">case</span>, la ejecución simplemente continúa con el código para el siguiente caso, por ejemplo:</p>
  <p class="code">switch (keyboard_key)<br />
    {<br />
        case vk_left:<br />
        case ord(&quot;A&quot;):<br />
            x -= 4;<br />
        break;<br />
    <br />
        case vk_right:<br />
        case ord(&quot;D&quot;):<br />
            x += 4;<br />
        break;<br />
    <br />
        case vk_up:<br />
        case ord(&quot;W&quot;):<br />
            y -= 4;<br />
        break;<br />
    <br />
        case vk_down:<br />
        case ord(&quot;S&quot;):<br />
            y += 4;<br />
        break;<br />
    }
  </p>
  <p>El código anterior utiliza <span class="inline">switch</span> para comprobar si hay un evento de teclado y luego lo compara con cada <span class="inline">case</span> de la lista. Si cumple con alguno de los valores requeridos entonces se ejecuta el código correspondiente. Observe cómo el <span class="inline">switch</span> puede comprobar múltiples <span class="inline">cases</span> y ejecutar el código hasta el siguiente <span class="inline">break</span>, para permitir que se utilicen varias teclas para obtener el mismo resultado.</p>
  <p>Cada <span class="inline">case</span> puede tener su propio código, por lo que se puede establecer una especie de sistema de &quot;herencia&quot; en el que un caso ejecuta su propio código y, a continuación, el código del siguiente caso también.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">Siguiente: <a href="break.htm"><span class="notranslate">break</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
switch
-->
  <!-- TAGS
switch
-->
</body>
</html>