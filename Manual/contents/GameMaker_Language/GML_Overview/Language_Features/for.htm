<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>para</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the for function" />
  <meta name="rh-index-keywords" content="for" />
  <meta name="search-keywords" content="for" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>para</h1>
  <p>Una de las formas más utilizadas para iterar sobre una <a class="glossterm" data-glossterm="declaración" href="#">sentencia</a> (o sentencias) varias veces es utilizar un <span class="inline">for</span> <span class="notranslate">loop</span>, que tiene esta forma:</p>
  <p class="code">for (&lt;assignment&gt;; &lt;expression&gt;; &lt;operation&gt;;)<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }</p>
  <p>Funciona de la siguiente manera - Primero se ejecuta la asignación que asigna un valor a una variable, luego se evalúa la <a class="glossterm" data-glossterm="expresión" href="#">expresión</a> y, si es <span class="inline">true</span>, se ejecutan las sentencias entre llaves{}. A continuación se realiza la operación sobre la variable asignada y luego se evalúa de nuevo la expresión. Esto <span class="notranslate">loop</span> continuará hasta que la expresión sea <span class="inline">false</span>.</p>
  <p>Ahora, esto puede sonar complicado cuando se escribe así, pero debes interpretarlo como:</p>
  <ol>
    <li>La primera asignación inicializa el bucle for</li>
    <li>La expresión comprueba si el <span class="notranslate">loop</span> debe terminar</li>
    <li>La declaración se realiza</li>
    <li>La operación se realiza</li>
    <li>Volver al paso 2 y realizar la expresión de nuevo y continuar o salir del bucle</li>
  </ol>
  <p>Esto es extremadamente útil para hacer tareas repetitivas que implicarían múltiples líneas de código de cualquier otra manera, y se utiliza comúnmente como contador para evaluar arrays, dibujar cosas, establecer valores incrementales, etc. El siguiente ejemplo de código ilustra un uso típico de este tipo de sentencia:</p>
  <p class="code">for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        draw_text(32, 32 + (i * 32), string(i) + &quot;. &quot;+ string(scr[i]));<br />
    }</p>
  <p>El código anterior inicializa un <span class="inline">for</span> <span class="notranslate">loop</span>, comenzando en 0 y contando hasta (e incluyendo) 9, y luego utiliza el valor <span class="notranslate">loop</span> de <span class="inline">i</span> para dibujar los valores almacenados en un array por la pantalla. Observe cómo la variable <span class="inline">for</span> <span class="notranslate">loop</span> <span class="inline">i</span> se utiliza no sólo para <span class="notranslate">loop</span> a través de la matriz, sino para dibujar un número, así como para decirle a <span data-keyref="GameMaker Name">GameMaker</span> dónde dibujar los valores en el <span class="notranslate">room</span>. Esta flexibilidad es una de las principales razones por las que <span class="inline">for</span> <span class="notranslate">loops</span> son tan importantes en la programación.</p>
  <p><strong>¿Cuándo se debe utilizar un <span class="inline">for</span> <span class="notranslate">loop</span>?</strong> Siempre que se necesite realizar un número fijo de iteraciones sobre una o más sentencias mientras se mantiene un registro de la <a class="glossterm" data-glossterm="iteración" href="#">iteración</a> que se está ejecutando actualmente y se utiliza ese valor de iteración.</p>
  <p class="note"><b>NOTA</b>: Verás múltiples ejemplos al trabajar con otras personas de las variables &quot;<span class="inline">i</span>&quot; y &quot;<span class="inline">j</span>&quot; que se utilizan para la variable del contador <span class="notranslate">loop</span>. Estos <b>no</b> son nombres de variables obligatorios y puedes usar cualquier cosa como &quot;<span class="inline">a</span>&quot; o &quot;<span class="inline">foo</span>&quot; o lo que sea. El uso de &quot;<span class="inline">i</span>&quot; y &quot;<span class="inline">j</span>&quot; es simplemente una convención estándar en programación.</p>
  <p>Cabe destacar que también se pueden utilizar las sentencias especiales <span class="inline"><a href="break.htm">break</a></span> y <span class="inline"><a href="continue.htm">continue</a></span> dentro de un <span class="inline">for</span> <span class="notranslate">loop</span>. El uso de <span class="inline">break</span> saldrá inmediatamente de <span class="notranslate">loop</span> y pasará a cualquier código que esté en el evento o función después de que el <span class="notranslate">loop</span> haya terminado, por ejemplo:</p>
  <p class="code">var _inst = noone;<br />
    for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        _inst = instance_find(obj_Enemy_Parent, i);<br />
        if instance_exists(_inst)<br />
        {<br />
            if _inst.object_index == obj_Enemy_Melee<br />
            {<br />
                break;<br />
            }<br />
        }<br />
    }<br />
    target = _inst;</p>
  <p>El código anterior <span class="notranslate">loops</span> a través de las 10 instancias más cercanas del &quot;padre&quot; dado <span class="notranslate">object</span>, y si se encuentra una instancia se comprueba el ID de la instancia <span class="notranslate">object</span>, y si es una instancia de <span class="inline">obj_Enemy_Melee</span> entonces se termina el <span class="notranslate">loop</span> usando <span class="inline">break</span> y el valor del ID se asigna a una variable (si no se encuentra ninguna instancia, entonces se añade la palabra clave <span class="inline"><a href="../Instance_Keywords.htm">noone</a></span> a la variable).</p>
  <p>Un ejemplo de uso de <span class="inline">continue</span> en un <span class="inline">for</span> <span class="notranslate">loop</span> sería:</p>
  <p class="code">var _val = 0;<br />
    for (var i = 0; i &lt; 10; i += 1)<br />
    {<br />
        if (val_array[i] &lt;= 0)<br />
        {<br />
            continue;<br />
        }<br />
        _val += val_array[i];<br />
    }<br />
    draw_text(32, 32, &quot;Positive Values Total = &quot; + string(_val));</p>
  <p>Este código comprobará el valor almacenado en cada posición del array de un <a href="../Arrays.htm">array</a> 1D de 10 longitudes, y si alguno es menor o igual a 0 se <span class="inline">continue</span> el <span class="notranslate">loop</span>, lo que significa que la iteración actual terminará, <span class="inline">i</span> se incrementará, y se iniciará la siguiente iteración <span class="notranslate">loop</span>. Si el valor es mayor que 0, entonces se agrega a la variable local <span class="inline">_val</span>, y después de terminar la <span class="notranslate">loop</span> se dibuja el valor total en la pantalla.</p>
  <p>Para ver más ejemplos de palabras clave en <span class="notranslate">loop</span>, consulte las secciones de <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>y <a href="do___until.htm"><span class="inline">do / until</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">Siguiente: <a href="switch.htm"><span class="notranslate">switch</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
for
-->
  <!-- TAGS
for
-->
</body>
</html>