<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>hacer / hasta que</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the do / until loop" />
  <meta name="rh-index-keywords" content="do,until" />
  <meta name="search-keywords" content="do,until" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>hacer / hasta que</h1>
  <p>Una función <span class="inline">do</span> es otra forma de iterar sobre una o más<span class="glossextra">sentencias</span> varias veces, y es realmente una sentencia &quot;<span class="inline">do... until</span>&quot; ya que no se puede tener una sin la otra ya que se le está diciendo a <span data-keyref="GameMaker Name">GameMaker</span> que haga algo hasta que una <a class="glossterm" data-glossterm="expresión" href="#">expresión</a> específica devuelva <span class="inline">true</span>. Tiene esta forma:</p>
  <p class="code">do<br />
    {<br />
        &lt;statement&gt;;<br />
        &lt;statement&gt;;<br />
        ...<br />
    }<br />
    until (&lt;expression&gt;);</p>
  <p>La sentencia (que puede ser un bloque de código de múltiples sentencias entre llaves <span class="inline">{}</span>) se ejecuta hasta que se encuentra la expresión <span class="inline">true</span>, y la sentencia inicial <strong>siempre se ejecuta al menos una vez</strong>. A continuación puede encontrar un ejemplo de una forma típica de utilizar <span class="inline">do... until</span>:</p>
  <p class="code">do<br />
    {<br />
        x = random(room_width);<br />
        y = random(room_height);<br />
    }<br />
    until (place_free(x, y));</p>
  <p>El código anterior intenta colocar el <span class="notranslate">object</span> actual en una posición libre y establecerá las variables x/y al menos una vez, y luego realizará tantas <a class="glossterm" data-glossterm="iteración" href="#">iteraciones</a>como sean necesarias hasta que la expresión <span class="inline">place_free()</span> devuelva <span class="inline">true</span>.</p>
  <p><strong>¿Cuándo se debe utilizar un <span class="inline">do</span> / <span class="inline">until</span> <span class="notranslate">loop</span>?</strong> Debe utilizarse siempre que quiera repetir una o más sentencias, pero no sepa realmente cuántas veces tiene que repetirse, y quiera asegurarse de que las sentencias se ejecutan al <em>menos una vez</em> antes de que termine el <span class="notranslate">loop</span>.</p>
  <p>También puede utilizar los botones <a href="break.htm"><span class="inline">break</span></a> y <a href="continue.htm"><span class="inline">continue</span></a> dentro de su <span class="inline">do</span> <span class="notranslate">loops</span>. Usando <span class="inline">break</span> saldrá inmediatamente de <span class="notranslate">loop</span> y pasará a cualquier código que esté en el evento o función después de que <span class="notranslate">loop</span> haya terminado, por ejemplo:</p>
  <p class="code">var _id = noone;<br />
    do<br />
    {<br />
        _id = list[| 0];<br />
        if (instance_exists(_id))<br />
        {<br />
            break;<br />
        }<br />
        ds_list_delete(list, 0);<br />
    }<br />
    until (ds_list_empty(list));<br />
    <br />
    target = _id;
  </p>
  <p>En el código anterior, creamos una variable local y la configuramos para que contenga la palabra clave <a href="../Instance_Keywords.htm"><span class="notranslate">noone</span></a>. A continuación, realizamos una <span class="inline">do / until</span> <span class="notranslate">loop</span> comprobando la primera posición de una lista DS para ver si contiene un ID de instancia válido, y si lo hace entonces <span class="inline">break</span> el <span class="notranslate">loop</span>, de lo contrario el valor de la posición de la lista se elimina. Después de que el <span class="notranslate">loop</span> se termine (ya sea por el <span class="inline">break</span> o porque la lista está vacía) el valor de la variable local se asigna a la variable de instancia <span class="inline">target</span>.</p>
  <p>Un ejemplo de uso de continue en un <span class="inline">do / until</span> <span class="notranslate">loop</span> sería:</p>
  <p class="code">do<br />
    {<br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        if (instance_position(_x, y, obj_Enemy)<br />
        {<br />
            continue;<br />
        }<br />
        instance_create_layer(_x, _y, &quot;Instances&quot;, obj_Enemy);<br />
    }<br />
    until (instance_count(obj_Enemy) &gt;= 10);</p>
  <p>Este código generará una posición aleatoria de <span class="notranslate">room</span> y luego comprobará si existe una instancia de <span class="notranslate">object</span> <span class="inline">obj_Enemy</span> en esa posición. Si lo hace, la iteración actual de <span class="notranslate">loop</span> se termina usando <span class="inline">continue</span> y se inicia una nueva iteración, y si no lo hace entonces se crea una instancia de <span class="notranslate">object</span> <span class="inline">obj_Enemy</span> en la posición aleatoria. El <span class="notranslate">loop</span> sólo terminará cuando haya 10 o más instancias del <span class="notranslate">object</span> en el <span class="notranslate">room</span>.</p>
  <p>Una nota final: ten cuidado con tu <span class="inline">do</span> <span class="notranslate">loops</span>, ya que puedes hacer que sean <span class="notranslate">loop</span> para siempre, en cuyo caso tu juego se colgará y no reaccionará más a ninguna entrada del usuario y tendrán que forzar el cierre.</p>
  <p>Para ver más ejemplos de palabras clave en <span class="notranslate">loop</span>, consulte las secciones de <a href="repeat.htm"><span class="inline">repeat</span></a>, <a href="while.htm"><span class="inline">while</span></a>y <a href="for.htm"><span class="inline">for</span></a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">Siguiente: <a href="for.htm"><span class="notranslate">for</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
do
until
-->
  <!-- TAGS
do
until
-->
</body>
</html>