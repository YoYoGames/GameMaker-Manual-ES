<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Variables locales</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining local variables" />
  <meta name="rh-index-keywords" content="var,Local Variables" />
  <meta name="search-keywords" content="local variables,local,var,local scope" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Variables locales</h1>
  <p>Una variable <strong>local</strong> es aquella que creamos <i>sólo</i> para un <strong>evento</strong> o <strong>función</strong> específica y luego la descartamos cuando el evento o función ha terminado. Si se crea en una función personalizada, la variable local sólo está disponible para la función y luego se descarta cuando la función ha terminado. ¿Por qué las necesitamos? Bueno, las variables ocupan espacio en la memoria y puede ser que sólo las vayamos a usar para una operación o función en cuyo caso sólo necesitamos tenerla en memoria durante ese corto tiempo que se usa. Esto mantiene tu base de código limpia y ordenada, además de mantener el espacio de memoria optimizado para las cosas que realmente lo necesitan. Para declarar una variable local utilizamos el operador <span class="inline"><strong><span class="inline">var</span> así:</p>
  <p class="code">var _i, _num, _str;<br />
    _i = 0;<br />
    _num = 24.5;<br />
    _str = &quot;Hello World&quot;;<br />
    <br />
    // or<br />
    <br />
    var _i = 0, _num = 24.5, _str = &quot;Hello World&quot;;<br />
    <br />
    // or<br />
    <br />
    var _i = 0;<br />
    var _num = 24.5;<br />
    var _str = &quot;Hello World&quot;;
  </p>
  <p>Todas las variables creadas de esta manera serán &quot;olvidadas&quot; (es decir, eliminadas de la memoria) al final del evento (o función) en el que fueron creadas. Debes tener cuidado de que el nombre que le das a todas las variables declaradas en <span class="inline">var</span> no coincida con otra variable de instancia dentro de <span class="notranslate">object</span> que ejecuta el código, y también asegúrate de que no tienes intención de utilizar el valor almacenado en esa variable fuera del evento o función en el que la declaras (en los ejemplos anteriores, todas las variables declaradas en <span class="inline">var</span> han sido definidas con el guión bajo &quot;_&quot; precediendo al nombre de la variable, pero esto no es necesario y se hace simplemente para hacer más obvio en el código que estamos tratando con una variable local). Dicho esto, si te encuentras en una situación en la que crees que una variable local <em>debe</em> ser la misma que una variable de instancia, entonces puedes utilizar la <a href="../Instance_Keywords.htm">palabra clave</a> <span class="inline">self</span> para identificar la variable de instancia como separada, por ejemplo:</p>
  <p class="code">var hp = 10;<br />
    with (obj_Enemy)<br />
    {<br />
        self.hp -= hp;<br />
    }</p>
  <p>Las variables locales se utilizan mucho en los programas, especialmente en <span class="notranslate">loops</span> para contar <a class="glossterm" data-glossterm="iteración" href="#">iteraciones</a>, o cuando se utiliza un valor varias veces en una operación que no se va a repetir de nuevo. Aquí hay otro par de ejemplos:</p>
  <p class="code">var _i = 0;<br />
    repeat (10)<br />
    {<br />
        inventory[_i] = 0;<br />
        _i += 1;<br />
    }</p>
  <p>El código anterior crea una variable local llamada &quot;<span class="inline">_i</span>&quot; y la pone a 0, todo en la misma línea. Tenga en cuenta que en versiones anteriores de <i>GameMaker</i> tenía que declarar sus variables locales primero y <i>luego</i> asignarles valores, pero en esta versión puede declarar <i>y</i> asignarles un valor al mismo tiempo. El código anterior utiliza esta variable para inicializar un <a href="../Arrays.htm">array</a>. Como la variable &quot;<span class="inline">_i</span>&quot; no va a ser utilizada para ninguna otra función en la instancia que no sea esta, puede ser de ámbito local. Aquí hay un ejemplo más:</p>
  <p class="code">var _x, _y;<br />
    _x = x - 32 + irandom(64);<br />
    _y = y - 32 + irandom(64);<br />
    instance_create_layer(_x, _y, &quot;Effects&quot;, obj_blood);</p>
  <p>Aquí hemos utilizado las variables locales &quot;<span class="inline">_x</span>&quot; y &quot;<span class="inline">_y</span>&quot; para almacenar unas coordenadas aleatorias que luego utilizamos para crear una instancia. En este ejemplo puedes ver que no es estrictamente necesario que utilicemos estas variables, pero en aras de la legibilidad y la facilidad de uso, lo hacemos. Es MUCHO más claro y obvio lo que estamos haciendo ahí que si usáramos este código:</p>
  <p class="code">instance_create_layer(x - 32 + irandom(64), y - 32 + irandom(64), &quot;Effects&quot;, obj_guts);</p>
  <p>Otra cosa sobre las variables locales declaradas en <span class="inline">var</span> debe ser notada... Dado que son únicas para el evento o función que las ejecuta, ¡también pueden ser utilizadas en cualquier otra instancia a través del código! Esto significa que podemos usar estas variables para establecer y cambiar cosas en otras instancias usando la construcción &quot;<span class="inline">with()</span>&quot; (ver la sección sobre el <a href="../Variables_And_Variable_Scope.htm">alcance de las variables</a> para más información). El código real se vería algo así:</p>
  <p class="code">var num = instance_number(obj_Enemy);<br />
    with (obj_Enemy)<br />
    {<br />
        if num&gt;10 instance_destroy();<br />
    }</p>
  <p>El código anterior funciona porque la variable declarada en <span class="inline">var</span> es local al <i>evento</i> (o función) en el que está contenida, no a la instancia, ni al mundo del juego, por lo que puede ser utilizada en cualquier función en cualquier <span class="notranslate">object</span> siempre que esté en el mismo bloque de código.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Variables_And_Variable_Scope.htm">Variables y Ámbito de las Variables</a></div>
        <div style="float:right">Siguiente: <a href="Instance_Variables.htm">Variables de instancia</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
local variables
var
-->
  <!-- TAGS
var
local_variables
-->
</body>
</html>