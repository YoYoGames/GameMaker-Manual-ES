<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_revolute_create</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_revolute_create" />
  <meta name="rh-index-keywords" content="physics_joint_revolute_create" />
  <meta name="search-keywords" content="physics_joint_revolute_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_joint_revolute_create</h1>
  <p>Una junta revoluta obliga a dos cuerpos a compartir un punto de anclaje común (a menudo llamado punto de bisagra) y la junta tiene un único grado de libertad: la rotación relativa de los dos cuerpos alrededor de este punto. Para especificar una revoluta es necesario proporcionar dos instancias y un único punto de anclaje en <span class="notranslate">room</span>, como puede ver en la imagen proporcionada:</p>
  <p><img>Si se observa la imagen, se puede ver que las dos instancias se han creado para solaparse y en el punto en el que se tocan, hemos definido una articulación revoluta. Ahora, esta articulación puede ser limitada en su libertad de rotación gracias a los valores &quot;ang_min_limit&quot; y &quot;ang_max_limit&quot;. ¿Cómo funciona esto? Bueno, veamos otra imagen:</p>
  <p><img>Como puede ver, los ángulos en el mundo de la física <i>no</i> son los mismos que los ángulos estándar <span data-keyref="GameMaker Name">de GameMaker</span>, donde la derecha es 0 grados y luego va en sentido contrario a las agujas del reloj, de modo que arriba es 90, izquierda es 180 y abajo es 270. No, cuando se trata de la articulación revoluta, el eje de 0 grados va desde la posición de la articulación hasta el origen de la segunda instancia definida por la función y los ángulos se calculan entonces en el sentido de las agujas del reloj. Si <span class="notranslate">switch</span> en la limitación de ángulos, los límites se definen como relativos a este eje de 0 grados y el rango de límites <i>debe incluir el cero</i>, de lo contrario la articulación dará bandazos cuando comience el <span class="notranslate">room</span>. Finalmente, puede definir la articulación como si tuviera o no motor. Esto significa que cuando no está influenciada por una colisión, la articulación se moverá en una dirección, la cual está definida por la velocidad del motor, siendo un número positivo las agujas del reloj y un número negativo las agujas del reloj. El argumento &quot;max_motor_torque&quot; sirve para limitar la velocidad de rotación para no tener un motor en perpetua aceleración y para limitar la influencia que una colisión pueda tener en la rotación. De este modo, puede utilizar un motor de articulación para simular la fricción de la articulación estableciendo la velocidad de la articulación a cero y el par máximo a algún valor pequeño, pero significativo. El motor intentará evitar que la articulación gire, pero cederá ante una carga significativa.</p>
  <p>Al igual que con todas las articulaciones, si se establece el valor &quot;col&quot; a <span class="inline">true</span> entonces las dos instancias pueden interactuar y colisionar entre sí, pero <i>sólo</i> si tienen eventos de colisión, sin embargo, si se establece a <span class="inline">false</span>, no van a colisionar no importa qué.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">physics_joint_revolute_create(inst1, inst2, w_anchor_x, w_anchor_y, ang_min_limt, ang_max_limit, ang_limit, max_motor_torque, motor_speed, motor, col)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance">ID de la instancia</span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance">ID de la instancia</span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor_x</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">w_anchor_y</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y coordinate for the joint, within the game world</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ang_min_limit</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The lower permitted limit for the joint angle</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ang_max_limit</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The upper permitted limit for the joint angle</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ang_limit</span></td>
        <td><span data-keyref="Type_Bool">Booleano</span></td>
        <td><span class="notranslate">Whether the to limit the angle of the joint (true) or not (false)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">max_motor_torque</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Sets the maximum motor torque used to achieve the desired motor speed (in Newtons per meter)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">motor_speed</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">This is the speed at which the motor should rotate</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">motor</span></td>
        <td><span data-keyref="Type_Bool">Booleano</span></td>
        <td><span class="notranslate">Whether the motor should be active (true) or not (false)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">col</span></td>
        <td><span data-keyref="Type_Bool">Booleano</span></td>
        <td><span class="notranslate">Whether the two instances can collide (true) or not (false)</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var mainFixture, o_id;<br />
    mainFixture = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);<br />
    o_id=instance_create_layer(x+25, y, &quot;Instances&quot;, obj_Door);<br />
    physics_fixture_bind(mainFixture, id);<br />
    physics_fixture_bind(mainFixture, o_id);<br />
    physics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 0, 0, 0, 0);<br />
    physics_fixture_delete(mainFixture);</p>
  <p>El código anterior crea y define un nuevo fixture y luego crea una instancia de &quot;obj_Door&quot;, vinculando el fixture creado a los dos nuevos <span class="notranslate">objects</span>. A continuación, se unen mediante una junta revolutiva sin motor y con los ángulos limitados a una oscilación de +/- 90 grados. Por último, se elimina el fixture porque ya no es necesario.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Joints.htm">Articulaciones</a></div>
        <div style="float:right">Siguiente: <a href="physics_joint_prismatic_create.htm"><span class="notranslate">physics_joint_prismatic_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_revolute_create
-->
  <!-- TAGS
physics_joint_revolute_create
-->
</body>
</html>