<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_gear_create</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_gear_create" />
  <meta name="rh-index-keywords" content="physics_joint_gear_create" />
  <meta name="search-keywords" content="physics_joint_gear_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">physics_joint_gear_create</span></h1>
  <p>Si quieres crear un artilugio mecánico sofisticado, es posible que quieras utilizar engranajes. En principio puedes crear engranajes en <span data-keyref="GameMaker Name">GameMaker</span> usando instancias de composición para modelar los dientes de los engranajes, pero esto no es muy eficiente y puede ser tedioso para el autor. Afortunadamente hay un método más sencillo, y es utilizar una <i>junta de eng</i>ranaje. Para hacer una articulación necesitas haber definido previamente tus fijaciones y haber creado las dos articulaciones básicas que van a componer tu engranaje - éstas <b>deben</b> estar formadas por una articulación <a href="physics_joint_revolute_create.htm">revolutiva</a> y una <a href="physics_joint_prismatic_create.htm">articulación prismática</a> u otra <i>articulación revolutiva</i>. La siguiente imagen muestra cómo se crea un engranaje en un juego:</p>
  <p><img>¿Qué ocurre entonces? Bueno, una vez que las dos articulaciones se añaden en el engranaje, la interacción con una tendrá un efecto en la otra, por lo que en la imagen de ejemplo anterior, si se gira inst2, inst3 se moverá hacia arriba y hacia abajo, o si se mueve inst3 hacia arriba y hacia abajo entonces inst2 girará. También puedes cambiar la relación de transmisión, lo que significa que necesitas mover una instancia más (o menos) para obtener el efecto deseado. El código del ejemplo de abajo muestra cómo se puede crear algo como la imagen de arriba.</p>
  <p class="note"><b>NOTA</b>: Si necesita eliminar cualquiera de las dos instancias que están involucradas en la unión de engranajes (o simplemente eliminar sus uniones) entonces <b>debe</b> eliminar la unión de engranajes primero usando <span style="font-size:1px;"><a href="physics_joint_delete.htm"><span class="inline">physics_joint_delete()</span></a></span> o de lo contrario obtendrá un error.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code"><span data-field="title" data-format="default">physics_joint_gear_create</span>(inst1, inst2, joint_1, joint_2, ratio)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">inst1</span></td>
        <td><span data-keyref="Type_ID_Instance"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm" target="_blank">ID de la instancia</a></span></td>
        <td><span class="notranslate">The first instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">inst2</span></td>
        <td><span data-keyref="Type_ID_Instance"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Instances/Instance_Variables/id.htm" target="_blank">ID de la instancia</a></span></td>
        <td><span class="notranslate">The second instance to connect with the joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">joint_1</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate">A previously defined revolute joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">joint_2</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate">A previously defined revolute <i>or</i> prismatic joint</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ratio</span></td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span class="notranslate">Set the velocity ratio between the two joints</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_ID_Physics_Joint"><a href="../../../../../GameMaker_Language/GML_Reference/Physics/Joints/Joints.htm" target="_blank">Physics Joint ID</a></span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var t_fix, g_fix, inst1, inst2, inst3, r_joint, p_joint;<br />
    g_fix = physics_fixture_create();<br />
    physics_fixture_set_box_shape(g_fix, 40, 10);<br />
    t_fix = physics_fixture_create();<br />
    physics_fixture_set_circle_shape(t_fix, 10);<br />
    physics_fixture_set_density(t_fix, 0.5);<br />
    inst1 = instance_create_layer(60, room_height - 30, &quot;Background&quot;, obj_Ground);<br />
    inst2 = instance_create_layer(40, room_height - 300, &quot;Instances&quot;, obj_Cog);<br />
    inst3 = instance_create_layer(150, room_height - 300, &quot;Instances&quot;, obj_Barrel);<br />
    physics_fixture_bind(g_fix, inst1);<br />
    physics_fixture_bind(t_fix, inst2);<br />
    physics_fixture_bind(t_fix, inst3);<br />
    r_joint = physics_revolute_joint_create(inst1, inst2, 40, room_height - 300, -80, 80, 1, 10, 0.5, 1, 0);<br />
    p_joint = physics_prismatic_joint_create(inst1, inst3, 150, room_height - 300, 0, 1, -10, 10, true, 0, 0, 0, 0);<br />
    <span data-field="title" data-format="default">physics_joint_gear_create</span>(inst2, inst3, r_joint, p_joint, 0.5);
  </p>
  <p>El código anterior crea y define dos fixture y luego crea tres instancias, una &quot;obj_Ground&quot; y otras dos, &quot;obj_Cog&quot; y &quot;obj_Barrel&quot;. Las fijaciones se vinculan a estas instancias y se crean dos articulaciones. Una junta revolutiva entre el suelo y el engranaje, y una junta prismática entre el suelo y el barril. Por último, se crea una articulación de engranaje entre las instancias de la rueda dentada y el barril utilizando las articulaciones revoluta y prismática definidas anteriormente.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Joints.htm">Articulaciones</a></div>
        <div style="float:right">Siguiente: <a href="physics_joint_rope_create.htm"><span class="notranslate">physics_joint_rope_create</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_gear_create
-->
  <!-- TAGS
physics_joint_gear_create
-->
</body>
</html>