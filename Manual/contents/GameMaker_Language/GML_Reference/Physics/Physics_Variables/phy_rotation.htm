<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>phy_rotation</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for phy_rotation" />
  <meta name="rh-index-keywords" content="phy_rotation" />
  <meta name="search-keywords" content="phy_rotation" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>phy_rotation</h1>
  <p>Esta variable se puede utilizar para obtener (o establecer) el ángulo de la fijación de las instancias en grados, de forma similar a establecer u obtener la variable <a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/image_angle.htm"><span class="inline">image_angle</span></a>. Sin embargo, tenga en cuenta que en el mundo de la física las rotaciones se calculan de manera <i>opuesta</i> al mundo normal del juego de <span data-keyref="GameMaker Name">GameMaker</span>, lo que significa que las funciones vectoriales como <a href="../../Maths_And_Numbers/Angles_And_Distance/point_direction.htm"><span class="inline">point_direction()</span></a>deben tener sus valores de retorno modificados (simplemente haciendo positivo a negativo debería resolver esto).</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">phy_rotation;</p>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Real"></span> (single precision floating point value, or <span class="inline">undefined</span> if the instance is not physics enabled)</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">if (phy_speed_x &gt; 0) || (phy_speed_y &gt; 0)<br />
    {<br />
        phy_rotation += sqrt(sqr(phy_speed_x) + sqr(phy_speed_y)) /10;<br />
    }</p>
  <p>El código anterior comprueba la velocidad lineal y si alguno de los vectores no es 0, entonces calcula la velocidad real y la utiliza para establecer la rotación.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Physics_Variables.htm">Variables físicas</a></div>
        <div style="float:right">Siguiente: <a href="phy_fixed_rotation.htm"><span class="notranslate">phy_fixed_rotation</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
phy_rotation
-->
  <!-- TAGS
phy_rotation
-->
</body>
</html>