<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Física</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for physics functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Physics" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Física</h1>
  <p>La integración de una biblioteca de física dedicada a <span data-keyref="GameMaker Name">GameMaker</span> significa que ahora puedes controlar todos los aspectos del comportamiento físico de <span class="notranslate">objects</span> dentro de tu mundo de juego, especialmente las colisiones y la interacción con <span class="notranslate">object</span>. El sistema de colisión &quot;tradicional&quot; (con el que <span data-keyref="GameMaker Name">GameMaker</span> viene por defecto) es un sistema &quot;reactivo&quot;, en el que se comprueba la existencia de una colisión y <i>se</i> reacciona a ella con un código que se coloca en cada <span class="notranslate">objects</span>. Esto está bien para los juegos sencillos, pero cuando tienes un gran número de <span class="notranslate">objects</span> y tienes que codificar cómo reaccionan todos a las diferentes situaciones en el mundo del juego, rápidamente se hace evidente que este sistema no es suficiente. Es entonces cuando hay que recurrir al sistema de física <span data-keyref="GameMaker Name">de GameMaker</span>.</p>
  <p>El sistema de física funciona de forma muy diferente a las colisiones normales. Es más bien un sistema &quot;pasivo&quot; en el que defines una serie de propiedades para tu <span class="notranslate">objects</span> en el mundo del juego, así como las propiedades del propio mundo del juego, antes de que se produzcan colisiones o interacciones. Estas &quot;reglas&quot; codificadas regirán entonces la forma en que interactúa todo en tu mundo de juego. De este modo, con unos pocos códigos sencillos y la configuración correcta de <span class="notranslate">room</span>, puedes crear interacciones muy complejas entre <span class="notranslate">objects</span> y el mundo que ocurrirán y se resolverán <i>sin</i> que tengas que codificar cada uno de los resultados posibles.</p>
  <p>Hay algunas cosas que debes tener en cuenta cuando trabajes con el mundo de la física de <span data-keyref="GameMaker Name">GameMaker</span>:</p>
  <ul class="colour">
    <li>El sistema de física existe &quot;aparte&quot; de la estructura básica de <span class="notranslate">room</span> y de las instancias de <span data-keyref="GameMaker Name">GameMaker</span>, lo que significa que sus tiempos y funciones no están necesariamente ligados a la velocidad de <span class="notranslate">room</span> y al orden de los pasos como todo lo demás.</li>
    <li>El sistema de física reemplaza muchas de las funciones normales de las instancias... por ejemplo, en lugar de establecer una velocidad y una dirección para una instancia, si ha sido declarada como un cuerpo físico completamente simulado, usarás una <i>fuerza</i> o un <i>impulso</i> para hacer que se mueva en el mundo del juego, o si no está habilitada para la física tendrás que establecer las posiciones x e y tú mismo. Esto toma un poco de tiempo para acostumbrarse, así que experimenta con las funciones de física y llega a saber cómo funciona todo antes de tratar de integrarlas en tu proyecto.</li>
    <li>Deberías limitar el número de instancias que se crean, así como el número de colisiones y grupos de colisiones con los que tiene que lidiar el mundo de la física. <i>No puedes</i> tener miles de instancias, todas con propiedades físicas y colisiones y esperar que todo funcione bien debido a que la física requiere algunos cálculos bastante intensivos, así que limítate y optimiza donde sea posible.</li>
    <li>Cuando configure las colisiones, utilice los padres tanto como sea posible ya que el sistema de colisiones tiene un número limitado de <i>bits de colisión</i> disponibles para asignar a las instancias para que Box2D detecte las colisiones. Por ejemplo, si tienes cinco paredes diferentes <span class="notranslate">objects</span>, no compruebes cinco colisiones, más bien, crea un padre <span class="notranslate">object</span> y asígnalo a las cinco paredes y luego haz UNA comprobación de colisión con el padre. Las propiedades físicas del <span class="notranslate">objects</span> <i>no se heredan</i>, sólo las colisiones. De esta manera puedes mantener tu juego optimizado y sin errores.</li>
    <li>Intenta no mover las instancias de un punto de la <span class="notranslate">room</span> a otro de otra manera que no sea usando las funciones de física (es decir: no establezcas las coordenadas x/y manualmente). Aunque esto se puede hacer y en algunas circunstancias puede ser necesario, generalmente se debe evitar debido a los resultados impredecibles que puede tener en el motor de física, especialmente cuando se trata de resolver las colisiones.</li>
    <li>Hay que tener cuidado al vincular los fixture, ya que se pueden vincular a <span class="notranslate">objects</span> y a las instancias de forma independiente. Esto significa que si vinculas un fixture a (por ejemplo) &quot;o_Wall&quot;, <b>todas las</b> instancias de ese <span class="notranslate">object</span> recibirán el fixture. Si sólo quieres vincular un fixture a una instancia, entonces utiliza el id de esa instancia en la función apropiada.</li>
    <li>Tenga en cuenta que, debido a las diferencias en la precisión del punto flotante, es posible que las versiones de su juego para diferentes plataformas de destino muestren un comportamiento sutilmente diferente al de la versión estándar de <span class="notranslate">Windows</span>, aunque cada versión será autoconsistente en las siguientes ejecuciones.</li>
    <li>Para evitar inestabilidades en la simulación física Box2D restringe a límites superiores la cantidad que un cuerpo puede rotar y trasladar dentro de una sola actualización. Las limitaciones aparentes variarán según la precisión de la simulación física de acuerdo con el número de actualizaciones y la velocidad de actualización del mundo de la física, y también de acuerdo con el escalado del mundo de la física. Esto significa que (por ejemplo) si tienes una velocidad de actualización del mundo de 60, la velocidad máxima de movimiento sería de 20.</li>
  </ul>
  <p>En las siguientes páginas encontrará información sobre las funciones físicas:</p>
  <ul class="colour">
    <li><a href="The_Physics_World/The_Physics_World.htm">El mundo de la física</a></li>
    <li><a href="Forces/Forces.htm">Fuerzas</a></li>
    <li><a href="Fixtures/Fixtures.htm">Accesorios</a></li>
    <li><a href="Joints/Joints.htm">Articulaciones</a></li>
    <li><a href="Soft_Body_Particles/Soft_Body_Particles.htm">Partículas corporales blandas</a></li>
    <li><a href="Physics_Variables/Physics_Variables.htm">Variables físicas</a></li>
  </ul>
  <p> </p>
  <p>Por último, hay un par de funciones físicas especiales que pueden ser útiles para simulaciones físicas más avanzadas. La primera es para comprobar posibles colisiones en un punto específico de la <span class="notranslate">room</span>, y la segunda es para generar propiedades de masa e inercia personalizadas dentro de una instancia:</p>
  <ul class="colour">
    <li><a href="physics_test_overlap.htm"><span class="notranslate">physics_test_overlap</span></a></li>
    <li><a href="physics_mass_properties.htm"><span class="notranslate">physics_mass_properties</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../GML_Reference.htm">Referencia GML</a></div>
        <div style="float:right">Siguiente: <a href="../In_App_Purchases/In_App_Purchases.htm">Compras en la aplicación</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Physics
Physics Functions
-->
  <!-- TAGS
physics_functions
-->
</body>
</html>