<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Definición de las entradas</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="template" content="../../../assets/masterpages/Manual_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="condition-tags" content="Export:Beta" />
</head>
<body>
  <h1>Definición de las entradas</h1>
  <p>Las entradas son gestionadas por el sistema Rollback, por lo que pueden sincronizarse adecuadamente entre los jugadores. Las entradas de un jugador pueden ser recuperadas usando <span class="inline"><a href="Rollback_Functions/rollback_get_input.htm">rollback_get_input()</a></span>, que devuelve un <span class="notranslate">struct</span> que contiene las entradas del jugador.</p>
  <h2>Entradas por defecto</h2>
  <p>Por defecto obtendrá las siguientes claves en la estructura de entrada:</p>
  <p class="code"><strong>left</strong>, <strong>right</strong>, <strong>up</strong>, <strong>down</strong>, <strong>Z</strong>, <strong>X</strong>, <strong>C</strong>, <strong>space</strong></p>
  <p>Las entradas direccionales se asignan a las teclas de flecha.</p>
  <h2>Variantes de entrada</h2>
  <p>Cada entrada de teclado definida se lee usando <span class="inline"><a href="../Game_Input/Keyboard_Input/keyboard_check.htm">keyboard_check()</a></span>, que obtiene si la tecla se mantiene o no. Para la entrada del ratón se utiliza <span class="inline"><a href="../Game_Input/Mouse_Input/mouse_check_button.htm">mouse_check_button()</a></span>.</p>
  <p>Con cada entrada definida (por defecto o personalizada), también se obtienen variantes que utilizan <span class="inline"><a href="../Game_Input/Keyboard_Input/keyboard_check_pressed.htm">keyboard_check_pressed()</a></span> y <span class="inline"><a href="../Game_Input/Keyboard_Input/keyboard_check_released.htm">keyboard_check_released()</a></span> (y las funciones equivalentes para la entrada del ratón). Éstas se añaden con el sufijo &quot;<strong>_presionado</strong>&quot; y &quot;<strong>_liberado</strong>&quot; respectivamente.</p>
  <p>Por ejemplo, para la entrada <span class="inline">space</span>, obtendrá también <span class="inline">space_pressed</span> y <span class="inline">space_released</span>.</p>
  <h2 id="h">Controles personalizados</h2>
  <h3>Definición de</h3>
  <p>Para definir sus propias entradas, cree un <span class="notranslate">struct</span> que contenga las teclas de entrada y las constantes asignadas a utilizar, y luego páselo a <span class="inline"><a href="Rollback_Functions/rollback_define_player.htm">rollback_define_input()</a></span>. Esto anulará los controles por defecto mencionados en la parte superior de esta página.</p>
  <p>Se definen los nombres de las entradas en el lado izquierdo (por ejemplo, <span class="inline2">fuego</span>), y se asigna una entrada en el lado derecho (por ejemplo, <span class="inline2">mb_left</span>):</p>
  <p class="code">// Before starting rollback game<br />
    rollback_define_input({<br />
        fire: mb_left,<br />
        interact: vk_space,<br />
        left: ord(&quot;A&quot;),<br />
        right: ord(&quot;D&quot;)<br />
    });</p>
  <p>Al llamar a <span class="inline"><a href="Rollback_Functions/rollback_get_input.htm">rollback_get_input()</a></span> ahora sólo se devolverán las entradas definidas aquí<span class="inline2">(disparar</span>, <span class="inline2">interactuar</span>, etc.), junto con las variantes <span class="inline2">*_presionado</span> y <span class="inline2">*_liberado</span> para cada una de ellas.</p>
  <p>Para <span class="notranslate">GML</span> Visual, utilice <a data-xref="{title}" href="../../../Drag_And_Drop/Drag_And_Drop_Reference/Rollback/Define_Input.htm">Definir entrada (Rollback)</a>.</p>
  <h3>Constantes</h3>
  <p>Puede asignar cualquiera de los siguientes valores de entrada a las entradas de su estructura:</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Tipo de entrada</th>
        <th>Valor</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td colspan="1" rowspan="2"><strong>Teclado</strong></td>
        <td><span class="inline">vk_*</span> constantes</td>
        <td>Utilice estas constantes para definir las teclas del teclado. <a href="../Game_Input/Keyboard_Input/Keyboard_Input.htm">Aquí se ofrece</a> una lista de dichas constantes.</td>
      </tr>
      <tr>
        <td><span class="inline">ord(&quot;&quot;)</span></td>
        <td>Definir una clave de letra envolviéndola en <a href="../Strings/ord.htm"><span class="inline">ord()</span></a>.</td>
      </tr>
      <tr>
        <td><strong>Gamepad</strong></td>
        <td><span class="inline">gp_*</span> constantes</td>
        <td>Utiliza estas constantes para definir las entradas del gamepad (botones y ejes). <a href="../Game_Input/GamePad_Input/Gamepad_Input.htm">Aquí se ofrece</a> una lista de dichas constantes.</td>
      </tr>
      <tr>
        <td colspan="1" rowspan="7"><strong>Ratón</strong></td>
        <td><span class="inline">mb_*</span> constantes</td>
        <td>Utilice estas constantes para definir los botones del ratón. <a href="../Game_Input/Mouse_Input/Mouse_Input.htm">Aquí se ofrece</a> una lista de dichas constantes.<br>
          <br>
         <span class="note">NOTA</span>: <span class="inline">mb_any</span> y <span class="inline">mb_none</span> no se pueden utilizar.
        </td>
      </tr>
      <tr>
        <td><span class="inline">m_axisx</span></td>
        <td>La posición X del ratón en la página <span class="notranslate">room</span> (utilizando <span class="inline"><a href="../Game_Input/Mouse_Input/mouse_x.htm">mouse_x</a></span>).</td>
      </tr>
      <tr>
        <td><span class="inline">m_axisy</span></td>
        <td>La posición Y del ratón en la página <span class="notranslate">room</span> (utilizando <span class="inline"><a href="../Game_Input/Device_Input/device_mouse_y.htm">mouse_y</a></span>).</td>
      </tr>
      <tr>
        <td><span class="inline">m_axisx_gui</span></td>
        <td>La posición X del ratón en la capa de la GUI (usando <a href="../Game_Input/Device_Input/device_mouse_x_to_gui.htm"><span class="inline">device_mouse_x_to_gui()</span></a>).</td>
      </tr>
      <tr>
        <td><span class="inline">m_axisy_gui</span></td>
        <td>La posición Y del ratón en la capa de la GUI (usando <a href="../Game_Input/Device_Input/device_mouse_y_to_gui.htm"><span class="inline">device_mouse_y_to_gui()</span></a>).</td>
      </tr>
      <tr>
        <td><span class="inline">m_scroll_up</span></td>
        <td><span class="inline">1</span> si la rueda del ratón se desplaza hacia arriba, <span class="inline">0</span> en caso contrario</td>
      </tr>
      <tr>
        <td><span class="inline">m_scroll_down</span></td>
        <td><span class="inline">1</span> si la rueda del ratón se desplaza hacia abajo, <span class="inline">0</span> en caso contrario</td>
      </tr>
    </tbody>
  </table>
  <h3>Controles múltiples</h3>
  <p>Puede asignar varios controles a cada entrada, enumerando las constantes de entrada en una matriz:</p>
  <p class="code">rollback_define_input({<br />
        fire:     [mb_left, ord(&quot;X&quot;)],<br />
        interact: [vk_space, ord(&quot;C&quot;)],<br />
        left:     [ord(&quot;A&quot;), vk_left],<br />
        right:    [ord(&quot;D&quot;), vk_right]<br />
    });</p>
  <p>En este ejemplo, el <span class="inline2">fuego</span> será disparado por <span class="inline2">mb_left</span> y la tecla <span class="inline2">X</span>, la <span class="inline2">interacción</span> será disparada por <span class="inline2">vk_space</span> y la tecla <span class="inline2">C</span>, y así sucesivamente.</p>
  <p class="code">var _input = rollback_get_input();<br />
    if (_input.fire)<br />
    {<br />
        // Runs when LMB or X is pressed<br />
    }</p>
  <p class="note"><span class="note">NOTA</span> No se puede vincular la misma constante de entrada a múltiples entradas, por ejemplo, un valor de entrada específico (digamos, <span class="inline2">mb_left</span> u <span class="inline2">ord(&quot;A&quot;)</span>) sólo se puede utilizar <strong>una vez</strong> en toda la entrada <span class="notranslate">struct</span>.</p>
  <h2 id="h1">Entrada simulada</h2>
  <p>Al realizar pruebas locales, es posible que quieras definir entradas temporales para los jugadores remotos para poder probar el juego multijugador sin conexión.</p>
  <p>Esto se puede conseguir definiendo una entrada simulada para un jugador mediante <a href="Rollback_Functions/rollback_define_mock_input.htm"><span class="inline">rollback_define_mock_input()</span></a>. Por ejemplo, después de llamar al fragmento de código anterior para definir las entradas <span class="inline">fire</span>, <span class="inline">interact</span>, <span class="inline">left</span> y <span class="inline">right</span> para todos los jugadores, puede definir un conjunto separado de entradas para el segundo jugador específicamente, que puede utilizar durante la prueba de sincronización.</p>
  <p class="code">rollback_define_mock_input(1, {<br />
        fire: vk_control,<br />
        interact: vk_shift,<br />
        left: ord(&quot;J&quot;),<br />
        right: ord(&quot;L&quot;)<br />
    });</p>
  <p>Esto define una entrada falsa para el jugador 1 (el segundo jugador), manteniendo los mismos nombres de entrada pero asignando diferentes entradas. De esta manera dos personas podrían jugar el juego localmente en el mismo ordenador.</p>
  <h2>Más información</h2>
  <p>Lea las siguientes páginas para obtener más información sobre el sistema Rollback:</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Rollback_Constraints.htm">Restricciones de retroceso</a></li>
    <li><a data-xref="{title}" href="Rollback_Events.htm">Eventos de retroceso</a></li>
    <li><a href="Creating_Multiplayer.htm">Creación de un juego multijugador</a></li>
    <li><a data-xref="{title}" href="Rollback_System.htm">Sistema de retroceso</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Atrás: <a data-xref="{title}" href="Rollback_Multiplayer.htm">Rollback Multiplayer</a></div>
        <div>Siguiente: <a data-xref="{title}" href="Rollback_Constraints.htm">Restricciones de retroceso</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
</body>
</html>