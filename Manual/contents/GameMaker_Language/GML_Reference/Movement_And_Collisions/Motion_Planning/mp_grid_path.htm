<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>mp_grid_path</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="This page outlines the function mp_grid_path" />
  <meta name="rh-index-keywords" content="mp_grid_path" />
  <meta name="search-keywords" content="mp_grid_path" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>mp_grid_path</h1>
  <p>Con esta función puedes crear un <span class="notranslate">path</span> que navegará desde un punto de inicio hasta un punto de finalización utilizando un <span class="inline">mp_grid</span> que has definido previamente, evitando cualquier obstáculo que ya haya sido añadido en la cuadrícula. Los argumentos xstart e ystart indican el inicio de la <span class="notranslate">path</span> en coordenadas <span class="notranslate">room</span>, mientras que los argumentos xgoal, ygoal indican el destino. También puede seleccionar el movimiento horizontal/vertical solamente, o permitir movimientos diagonales completos especificando true en el argumento allowdiag. La función devuelve o bien true (ha conseguido encontrar un <span class="notranslate">path</span>) o bien false (ha fallado), además de establecer el <span class="notranslate">path</span> elegido. En la siguiente imagen se puede ver cómo funciona todo esto:</p>
  <p><img>Como puede ver, la &quot;tubería&quot; <span class="notranslate">objects</span> ha sido añadida a la cuadrícula, lo que significa que cualquier <span class="notranslate">path</span> creado tiene que ir alrededor de ellos. Hay dos <span class="notranslate">paths</span> creados en la imagen, uno (verde) se ha hecho con diagonales permitidas y el otro (rojo) sin ellas. La diferencia entre ambos es bastante obvia, ya que el <span class="notranslate">path</span> verde parece mucho más &quot;elegante&quot; y directo, pero todo depende del uso que le vayas a dar al que prefieras. Tenga en cuenta que el <span class="notranslate">path</span> es independiente de la instancia actual - es un <span class="notranslate">path</span> a través de la red, no un <span class="notranslate">path</span> para una instancia específica, aunque una instancia específica puede tener la variable que almacena el índice <span class="notranslate">path</span>. Puede que también necesites depurar estos <span class="notranslate">paths</span> para ver cómo se hacen e interactúan dentro del entorno del juego, en cuyo caso deberías usar la función <span class="inline"><a href="../../Drawing/Basic_Forms/draw_path.htm">draw_path()</a></span>.</p>
  <p class="note"><b>NOTA</b>: El <span class="notranslate">path</span> debe haber sido creado previamente (ya sea en código con <span style="font-size:1px;"><a href="../../Asset_Management/Paths/Path_Manipulation/path_add.htm"><span class="inline">path_add()</span></a></span> o como recurso) y será sustituido por el <span class="notranslate">path</span> generado por esta función.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">mp_grid_path(id, path, xstart, ystart, xgoal, ygoal, allowdiag);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">id</span></td>
        <td><span data-keyref="Type_ID_MP_Grid">MP Grid ID</span></td>
        <td><span class="notranslate">Index of the mp_grid that is to be used</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">path</span></td>
        <td><span data-keyref="Type_Asset_Path">Activo de la ruta</span></td>
        <td><span class="notranslate">index of the path that is to be used by the function</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xstart</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Starting x coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ystart</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Starting y coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xgoal</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Finishing x coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ygoal</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">Finishing y coordinate of the new path</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">allowdiag</span></td>
        <td><span data-keyref="Type_Bool">Booleano</span></td>
        <td><span class="notranslate">Indicates whether diagonal moves are allowed instead of just horizontal or vertical</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Bool">Boolean</span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">global.grid = mp_grid_create(0, 0, room_width div 32, room_height div 32, 32, 32);<br />
    mp_grid_add_instances(global.grid, obj_wall, false);<br />
    with (obj_Enemy)<br />
    {<br />
        path = path_add();<br />
        if (mp_grid_path(global.grid, path, x, y, obj_Player.x, obj_Player.y, 1))<br />
        {<br />
            path_start(path, 0, 3, 0);<br />
        }<br />
    }</p>
  <p>El código anterior crea una variable global &quot;global.grid&quot;, luego genera una mp_grid y asigna su índice (id) a esa variable para usarla en todas las llamadas posteriores a la función mp_grid. A continuación, añade todas las instancias de &quot;obj_Wall&quot; en la cuadrícula antes de obtener todas las instancias de &quot;obj_Enemy&quot; para crear un <span class="notranslate">path</span> y luego utilizar <span class="inline">mp_grid_path</span> para calcular una ruta desde su posición hasta la posición de &quot;obj_Player&quot;. Si existe una ruta, entonces el <span class="notranslate">object</span> se inicia por sí mismo a lo largo del <span class="notranslate">path</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Motion_Planning.htm">Planificación del movimiento</a></div>
        <div style="float:right">Siguiente: <a href="mp_grid_add_cell.htm"><span class="notranslate">mp_grid_add_cell</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
mp_grid_path
-->
  <!-- TAGS
mp_grid_path
-->
</body>
</html>