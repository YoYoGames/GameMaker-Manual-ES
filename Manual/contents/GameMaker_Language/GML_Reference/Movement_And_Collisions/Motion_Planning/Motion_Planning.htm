<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Planificación del movimiento</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for Motion Planning functions and variables" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Motion Planning,mp,mp funtions" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Planificación del movimiento</h1>
  <p>En muchos juegos quieres que los oponentes, NPC's, enemigos, etc... interactúen con el jugador y muestren cierta inteligencia cuando se mueven, es decir, quieres que eviten los obstáculos, planifiquen las rutas y, en general, que no choquen con todo lo que hay en su <span class="notranslate">path</span>. Para ayudar en esto <span data-keyref="GameMaker Name">GameMaker</span> tiene una serie de funciones que se ocupan de la planificación del movimiento. Ten en cuenta que, aunque están diseñadas para cosas como los enemigos del juego, pueden utilizarse para todo tipo de cosas, como crear una forma suave de introducir texto, o crear transiciones, etc. Sin embargo, sea lo que sea lo que elijas usar de la lista de abajo en tu juego, hay que tener en cuenta que en muchas situaciones un solo conjunto de funciones no te dará una solución perfecta y que tendrás que &quot;mezclar y combinar&quot; las funciones, usando una u otra dependiendo de la situación dentro de tu juego.</p>
  <p>La planificación del movimiento en <span data-keyref="GameMaker Name">GameMaker</span> es tratada por las funciones <b>mp_</b>, que a su vez se dividen en los siguientes tres grupos:</p>
  <h2><label for="one">Funciones lineales</label></h2>
  <p>Este tipo de función intenta calcular un <span class="notranslate">path</span> sin colisiones para la instancia. Una vez que se ha calculado este <span class="notranslate">path</span> se puede asignar a la instancia para que se mueva hacia la meta. El cálculo de <span class="notranslate">path</span> llevará algún tiempo, pero después la ejecución de <span class="notranslate">path</span> será rápida. Por supuesto, esto sólo es válido si la situación no ha cambiado mientras tanto. Por ejemplo, si los obstáculos cambian, posiblemente habrá que volver a computar el <span class="notranslate">path</span>. De nuevo, observe que estas funciones pueden fallar y que puede que no se encuentre ningún <span class="notranslate">path</span> para la instancia.</p>
  <ul class="colour">
    <li><a href="mp_linear_step.htm"><span class="notranslate">mp_linear_step</span></a></li>
    <li><a href="mp_linear_step_object.htm"><span class="notranslate">mp_linear_step_object</span></a></li>
    <li><a href="mp_linear_path.htm"><span class="notranslate">mp_linear_path</span></a></li>
    <li><a href="mp_linear_path_object.htm"><span class="notranslate">mp_linear_path_object</span></a></li>
  </ul>
  <p> </p>
  <h2><label for="three">Funciones potenciales</label></h2>
  <p>Estas son las funciones básicas de evasión y son buenas para la IA simple. Funcionan haciendo que una instancia dé un paso hacia una posición de meta concreta intentando ir en línea recta si es posible pero tomando una dirección diferente si es necesario. Estas funciones deben usarse en el <b>Evento Paso</b> de una instancia.</p>
  <ul class="colour">
    <li><a href="mp_potential_settings.htm"><span class="notranslate">mp_potential_settings</span></a></li>
    <li><a href="mp_potential_step.htm"><span class="notranslate">mp_potential_step</span></a></li>
    <li><a href="mp_potential_step_object.htm"><span class="notranslate">mp_potential_step_object</span></a></li>
    <li><a href="mp_potential_path.htm"><span class="notranslate">mp_potential_path</span></a></li>
    <li><a href="mp_potential_path_object.htm"><span class="notranslate">mp_potential_path_object</span></a></li>
  </ul>
  <p> </p>
  <h2><label for="two">Funciones de rejilla</label></h2>
  <p>El último tipo de función utiliza un mecanismo mucho más complejo basado en un enfoque de cuadrícula (a veces llamado algoritmo A*). Tendrá mucho más éxito a la hora de encontrar <span class="notranslate">paths</span> (aunque todavía puede fallar) y encontrará el <span class="notranslate">paths</span> más corto posible, pero requiere más trabajo por tu parte para configurarlo.</p>
  <p>La idea global es la siguiente: en primer lugar, creamos una retícula que cubra la <span class="notranslate">room</span> (o la parte pertinente de la misma). Puedes elegir entre una rejilla fina, que será más lenta, o una rejilla gruesa, pero ambas deben basarse en la resolución de <span class="notranslate">room</span> para que la búsqueda de rutas sea lo más precisa posible. Por ejemplo, si tienes un <span class="notranslate">room</span> de 400x200 píxeles, puedes tener una resolución de cuadrícula de 40, o de 20, o de 10... todo depende de la precisión que necesites que tenga el <span class="notranslate">path</span> y de cuánto procesamiento quieras que haga <span class="notranslate">GameMaker</span> para generarlo.</p>
  <p>A continuación, para todas las <span class="notranslate">objects</span> relevantes que queremos evitar, tenemos que determinar las celdas de la cuadrícula que se solapan (basándonos en sus cuadros delimitadores o en su <span class="notranslate">sprite</span> precisa) y marcar estas celdas como prohibidas. Así, una celda se marcará como totalmente prohibida, incluso si un obstáculo sólo se solapa parcialmente.</p>
  <p>Por último, especificamos una posición inicial y una posición de meta, ambas <i>deben</i> estar en celdas libres, y la función calcula entonces el <span class="notranslate">path</span> más corto posible entre estas dos posiciones. El <span class="notranslate">path</span> discurrirá entre los centros de todas las celdas libres, por lo que si las celdas son lo suficientemente grandes como para que la instancia colocada en su centro quede completamente dentro de ellas, esto tendrá éxito. Este <span class="notranslate">path</span> se asigna entonces a la instancia a seguir utilizando las funciones <a href="../../Asset_Management/Paths/Paths.htm"><span class="inline">path_*</span></a> funciones. Debe darse cuenta de la importancia del tamaño de la celda para esto, ya que las celdas deben ser lo suficientemente grandes para que el <span class="notranslate">object</span> móvil colocado con su origen en el centro de una celda se sitúe <i>completamente</i> dentro de la misma. (Tenga cuidado con la posición del origen de la <span class="notranslate">object</span>. ¡También tenga en cuenta que puede desplazar la <span class="notranslate">path</span> si el origen de la <span class="notranslate">object</span> no está en su centro!) Por otro lado, cuanto más pequeñas sean las celdas, más posibilidades habrá de <span class="notranslate">paths</span>. Si haces las celdas demasiado grandes, las aberturas entre los obstáculos pueden cerrarse porque todas las celdas intersectan un obstáculo.</p>
  <ul class="colour">
    <li><a href="mp_grid_create.htm"><span class="notranslate">mp_grid_create</span></a></li>
    <li><a href="mp_grid_destroy.htm"><span class="notranslate">mp_grid_destroy</span></a></li>
    <li><a href="mp_grid_path.htm"><span class="notranslate">mp_grid_path</span></a></li>
    <li><a href="mp_grid_add_cell.htm"><span class="notranslate">mp_grid_add_cell</span></a></li>
    <li><a href="mp_grid_add_instances.htm"><span class="notranslate">mp_grid_add_instances</span></a></li>
    <li><a href="mp_grid_add_rectangle.htm"><span class="notranslate">mp_grid_add_rectangle</span></a></li>
    <li><a href="mp_grid_get_cell.htm"><span class="notranslate">mp_grid_get_cell</span></a></li>
    <li><a href="mp_grid_clear_all.htm"><span class="notranslate">mp_grid_clear_all</span></a></li>
    <li><a href="mp_grid_clear_cell.htm"><span class="notranslate">mp_grid_clear_cell</span></a></li>
    <li><a href="mp_grid_clear_rectangle.htm"><span class="notranslate">mp_grid_clear_rectangle</span></a></li>
    <li><a href="mp_grid_to_ds_grid.htm"><span class="notranslate">mp_grid_to_ds_grid</span></a></li>
    <li><a href="mp_grid_draw.htm"><span class="notranslate">mp_grid_draw</span></a></li>
  </ul>
  <p> </p>
  <p>El enfoque basado en la cuadrícula es muy potente (y se utiliza en muchos juegos profesionales), pero requiere que pienses cuidadosamente, ya que debes determinar qué área y tamaño de celda son lo suficientemente buenos para resolver el juego. También hay que determinar qué <span class="notranslate">objects</span> debe evitarse y si es importante una comprobación precisa. Todos estos parámetros influyen mucho en la eficacia del planteamiento. También debe decidir si es realmente necesario, ya que tal vez una de las funciones menos costosas de <span class="inline">mp_*</span> puede hacer el trabajo igual de bien.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Movement_And_Collisions.htm">Movimiento y colisiones</a></div>
        <div style="float:right">Siguiente: <a href="../Collisions/Collisions.htm">Colisiones</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Motion Planning
MP Functions
Motion Planning Functions
-->
  <!-- TAGS
mp_functions
-->
</body>
</html>