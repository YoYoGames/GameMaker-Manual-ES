<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_save_async</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_save_async" />
  <meta name="rh-index-keywords" content="buffer_save_async" />
  <meta name="search-keywords" content="buffer_save_async" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>buffer_save_async</h1>
  <p>Con esta función puede guardar parte del contenido de un <span class="notranslate">buffer</span> en un archivo, listo para ser leído de nuevo en la memoria utilizando la función <a href="buffer_load.htm"><span class="inline">buffer_load()</span></a> (o cualquiera de las otras funciones para cargar <span class="notranslate">buffers</span>). El &quot;offset&quot; define la posición inicial dentro de <span class="notranslate">buffer</span> para guardar (en bytes), y el &quot;tamaño&quot; es el tamaño del área de <span class="notranslate">buffer</span> a guardar a partir de ese offset (también en bytes). Esta función trabaja de forma asíncrona, por lo que el juego continuará ejecutándose mientras se guarda, y todos los archivos guardados mediante esta función se colocarán en una carpeta &quot;por defecto&quot;. Esta carpeta <i>no</i> necesita ser incluida en el nombre del archivo, ya que es añadida automáticamente por <span class="notranslate">GameMaker</span>. Por ejemplo, el nombre de archivo <span class="notranslate">path</span> &quot;<span class="inline">Data\Player_Save.sav</span>&quot; se guardará en realidad en &quot;<span class="inline">default\Data\Player_Save.sav</span>&quot;. Sin embargo, si luego carga el archivo con la función <a href="buffer_load_async.htm"><span class="inline">buffer_load_async()</span></a>tampoco es necesario suministrar la parte &quot;por defecto&quot; de <span class="notranslate">path</span> ( <i>pero</i> cualquier otra función de archivo la requerirá, excepto en las consolas Xbox One, PS4 y <span class="notranslate">Nintendo</span> <span class="notranslate">Switch</span>).</p>
  <p class="note"><b>NOTA</b>: En HTML5 &quot;default/&quot; no se añade automáticamente y es posible que tengas que tenerlo en cuenta en tu código.</p>
  <p>La función devolverá un valor de ID único y desencadenará un <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/Save_Load.htm">Evento Asíncrono de Guardado/Carga</a> en el que se puede utilizar el ID devuelto para comprobar el valor de ID de <span class="inline">async_load</span>, como se muestra en el ejemplo ampliado siguiente. El mapa <a href="../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a> map en el evento tendrá los siguientes dos pares clave/valor:</p>
  <ul>
    <li><b>&quot;id </b>&quot;: el ID de la función asíncrona devuelto por la función de guardar.</li>
    <li><b>&quot;status&quot;: </b>devolverá <span class="inline">true</span> si los datos se han guardado/cargado correctamente, y <span class="inline">false</span> en caso contrario.</li>
  </ul>
  <p>Tenga en cuenta que puede guardar varios <span class="notranslate">buffers</span> en uno llamando a esta función varias veces entre las llamadas a <a href="buffer_async_group_begin.htm"><span class="inline">buffer_async_group_begin()</span></a> y <a href="buffer_async_group_end.htm"><span class="inline">buffer_async_group_end()</span></a> (ver esas funciones para más información sobre esto).</p>
  <p class="note"><b>NOTA</b>: En HTML5 los resultados devueltos se guardan como <span class="notranslate">strings</span> codificado en base64 cuando se guardan en un archivo.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">buffer_save_async(buffer, filename, offset, size);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descripción</th>
     </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td><td><span data-keyref="Type_ID_Buffer"></span></td>
        <td><span class="notranslate">The index of the buffer to save.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">filename</span></td><td><span data-keyref="Type_String"></span></td>
        <td><span class="notranslate">The name of the file to save as.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">offset</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The offset within the buffer to save from (in bytes).</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">size</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The size of the buffer area to save (in bytes).</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Ejemplo ampliado:</h4>
  <p>La función <span class="inline">buffer_save_async()</span> puede ser llamada desde cualquier evento, y como es asíncrona la llamada de retorno puede ser casi instantánea o puede tardar varios segundos. Llamar a la función es sencillo y sería algo así:</p>
  <p class="code">saveid = buffer_save_async(buff, &quot;Player_Save.sav&quot;, 0, 16384);</p>
  <p>El código anterior guarda el contenido de <span class="notranslate">buffer</span> &quot;<i>buff</i>&quot; en el archivo de almacenamiento dado, almacenando el ID de la llamada a la función en la variable &quot;<i>saveid</i>&quot;. Cuando se complete el guardado, se activará el evento asíncrono Save/Load y se podrá analizar el mapa <span class="inline">async_load</span> en busca del ID correcto de la función, así:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == saveid<br />
    {<br />
        if ds_map_find_value(async_load, &quot;status&quot;) == false<br />
        {<br />
            show_debug_message(&quot;Save failed!&quot;);<br />
        }<br />
    }</p>
  <p>El código anterior comprobará primero el id del mapa DS que se ha creado, y luego comprobará el estado de la llamada de retorno, publicando un mensaje de depuración si ha habido algún problema.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Volver: <a href="Buffers.htm">Buffers</a></div>
        <div style="float:right">Siguiente: <a href="buffer_load.htm"><span class="notranslate">buffer_load</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
buffer_save_async
-->
  <!-- TAGS
buffer_save_async
-->
</body>
</html>