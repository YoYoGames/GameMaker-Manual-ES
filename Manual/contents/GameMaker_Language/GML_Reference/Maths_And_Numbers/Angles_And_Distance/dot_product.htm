<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>punto_producto</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for dot_product" />
  <meta name="rh-index-keywords" content="dot_product" />
  <meta name="search-keywords" content="dot_product" />
  <meta name="is_pure" content="true" />
</head>

<body>




  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>punto_producto</h1>
  <p>El producto punto es un valor que expresa la relación angular entre dos vectores y se obtiene tomando dos vectores, multiplicándolos y sumando los resultados. El nombre &quot;producto punto&quot; deriva del punto centrado &quot;-&quot;
    que se utiliza a menudo para designar esta operación (el nombre alternativo &quot;producto escalar&quot; enfatiza la naturaleza escalar y no vectorial del resultado).</p>
  <p>La fórmula matemática real se puede escribir así:</p>
  <p><img alt="Dot Product formula" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image.png"/></p>
  <p>Así, en 2D el producto punto de los vectores <span class="inline">a[x1,y1]</span> y <span class="inline">b[x2,2]</span> es <span class="inline">x1x2 + y1y2</span>, lo que significa que el producto_punto en <span data-keyref="GameMaker Name">GameMaker</span> se calcula como:</p>
  <p class="code">a · b = (x1*x2)+(y1*y2);</p>
  <p>Lo curioso del producto punto es la relación que tiene con el ángulo formado por los vectores de entrada que se puede expresar como:</p>
  <p class="code">a · b = (length of a) * (length of b) * cos(angle)</p>
  <p>Es decir, el producto punto de dos vectores será igual al coseno del ángulo entre dichos vectores, multiplicado por las longitudes de cada uno de ellos. Aquí tienes una imagen para ilustrarlo:</p>
  <p><img alt="Dot Product ilustration" class="center" height="143" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image_2.png" width="406"/></p>
  <p class="note"><strong>NOTA</strong>: Para más información sobre los vectores, consulte <a href="../../../../Additional_Information/Vectors.htm">aquí</a>.</p>
  <p>Hay algunas cosas que podemos afirmar ahora de dos vectores cualesquiera en relación con el resultado de su producto punto:</p>
  <ul class="colour">
    <li>Si a y b son perpendiculares (a 90 grados entre sí), el resultado del producto punto será cero, porque <span class="inline">cos(ang)</span> será cero</li>
    <li>Si el ángulo entre a y b es menor que 90 grados, el producto punto será positivo (mayor que cero), ya que <span class="inline">cos(ang)</span> será positivo</li>
    <li>Si el ángulo entre a y b es mayor que 90 grados, el producto punto será negativo (menor que cero), ya que <span class="inline">cos(ang)</span> será negativo</li>
  </ul>
  <p>¿Qué significa esto para los que hacemos juegos? Bueno, esta relación matemática se puede utilizar en bastantes circunstancias, pero la mejor manera de verlo es construir un escenario real y ver por uno mismo lo que está pasando. Una de las formas más sencillas
    Una de las formas más sencillas de hacerlo es generar una simple comprobación de la &quot;línea de visión&quot; para un enemigo en, por ejemplo, un juego de plataformas, de forma que el enemigo &quot;vea&quot; al jugador si está a menos de 90° de cualquier lado de su vector <i>normal</i>.</p>
  <p><img>Básicamente, tenemos que obtener el vector normal del enemigo (es decir, compuesto por una dirección y una distancia de visión)
    y luego tenemos que obtener el vector del jugador al enemigo. Luego obtendremos el producto_punto de estos vectores, y si el resultado es positivo el jugador ha sido visto, y si es negativo no. El código real para que esto funcione se suministra
    en el siguiente ejemplo.</p>
  <p> </p>
  <h4><b>Sintaxis:</b></h4>
  <p class="code">dot_product(x1, y1, x2, y2)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descripción</th>
     </tr>
      <tr>
        <td><span class="notranslate">x1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y1</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the first vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">x2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the second vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">y2</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the second vector.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var x1, y1, x2, y2;<br/> x1 = lengthdir_x(1, image_angle);<br/> y1 = lengthdir_y(1, image_angle);<br/> x2 = o_Player.x - x;<br/> y2 = o_Player.y - y;<br/> if dot_product(x1, y1, x2, y2) &gt; 0 seen=true else seen=false;</p>
  <p>El código anterior crea un vector utilizando el ángulo de la imagen de las instancias, y luego obtiene el vector del jugador <span class="notranslate">object</span> &quot;o_Player&quot; a sí mismo. Finalmente calcula el producto punto de estos dos vectores y si es mayor que 0 establece la variable
    &quot;visto&quot; a verdadero, y si es igual o menor que 0 lo pone a &quot;falso&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Angles_And_Distance.htm">Ángulos y distancia</a></div>
        <div style="float:right">Siguiente: <a href="dot_product_3d.htm"><span class="notranslate">dot_product_3d</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
dot_product
-->
  <!-- TAGS
dot_product
-->

</body></html>