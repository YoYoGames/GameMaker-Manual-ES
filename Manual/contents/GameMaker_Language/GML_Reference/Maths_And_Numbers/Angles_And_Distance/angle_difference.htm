<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>diferencia_de_ángulo</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <script src="../../../../assets/scripts/canvas_helpers.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for angle_difference" />
  <meta name="rh-index-keywords" content="angle_difference" />
  <meta name="search-keywords" content="angle_difference" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>diferencia_de_ángulo</h1>
  <p>Esta función devolverá la menor diferencia entre los dos ángulos especificados, donde la diferencia se calcula desde el ángulo de origen hacia el ángulo de destino. El valor devuelto estará entre -180 y 180 grados (donde un ángulo positivo es antihorario y un ángulo negativo es horario).</p>
  <p>La relación entre los ángulos &quot;origen&quot; y &quot;destino&quot; es tal que la diferencia que se obtiene al llamar a <span class="inline2">angle_difference(dest, src)</span>, cuando se suma al valor de <span class="inline2">src</span>, da el ángulo de <span class="inline2">destino</span> (aunque los valores numéricos exactos pueden ser diferentes). Puede utilizar una técnica similar para mover el ángulo de origen hacia el ángulo de destino gradualmente en cada paso, donde se añade, digamos, el 10% de la diferencia devuelta de nuevo a <span class="inline2">src</span> para moverlo un poco hacia <span class="inline2">dest</span> (esto se demuestra en el ejemplo siguiente).</p>
  <p> </p>
  <h4><b>Sintaxis:</b></h4>
  <p class="code">angle_difference(dest, src)</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descripción</th>
     </tr>
      <tr>
        <td><span class="notranslate">dest</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The destination or target angle</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">src</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The source angle</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var _dir = point_direction(x, y, mouse_x, mouse_y);<br />
    var _diff = angle_difference(_dir, image_angle);<br />
    image_angle += _diff * 0.1;</p>
  <p>El código anterior obtendrá la dirección de la instancia hacia el cursor del ratón, luego obtendrá la diferencia entre ese ángulo y el actual <a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/image_angle.htm"><span class="inline">image_angle</span></a>y utilizará este valor para girar gradualmente la instancia hacia el ratón.</p>
  <p><img class="invisible" src="../../../../assets/Images/InteractiveExamples/DirectionalSprite.png" /></p>
  <p><canvas class="gml_reference_example" height="128" id="angle_difference_example" width="128"> </canvas></p>
  <p class="canvas_subtitle">Ejemplo interactivo</p>
  <script>
    //<![CDATA[
    let elm = document.getElementById("angle_difference_example");
    let ewidth = elm.clientWidth,
      eheight = elm.clientHeight;
    let context = elm.getContext("2d");
    let imagePath = "../../../../assets/Images/InteractiveExamples/DirectionalSprite.png";
    let img = new Image();
    img.src = imagePath;
    img.onload = () => {
      drawImageCenteredRotated(img, context, ewidth / 2, eheight / 2, angle);
    }
    var angle = 0;
    var targetAngle = 0;
    createMouseMoveEvent(elm, (mx, my) => {
      let diffX = mx - ewidth / 2;
      let diffY = my - eheight / 2;
      targetAngle = radToDeg(Math.atan2(diffY, diffX));
    });
    canvasLoop(() => {
      let diff = angle_difference(targetAngle, angle);
      angle += diff * 0.1;
      context.clearRect(0, 0, ewidth, eheight);
      drawImageCenteredRotated(img, context, ewidth / 2, eheight / 2, angle);
    });
    //]]>
  </script>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Angles_And_Distance.htm">Ángulos y distancia</a></div>
        <div style="float:right">Siguiente: <a href="lengthdir_x.htm"><span class="notranslate">lengthdir_x</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
angle_difference
-->
  <!-- TAGS
angle_difference
-->
</body>
</html>