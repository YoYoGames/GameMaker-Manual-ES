<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>matrix_build_lookat</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for matrix_build_lookat" />
  <meta name="rh-index-keywords" content="matrix_build_lookat" />
  <meta name="search-keywords" content="matrix_build_lookat" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>matrix_build_lookat</h1>
  <p>Esta función construye una matriz de &quot;mirada&quot; (vista) basada en los parámetros especificados que se enumeran a continuación. Dado que esta función modifica la matriz de vista y no la matriz de proyección, primero debe inicializar la matriz de proyección utilizando la otra función de matriz <a href="matrix_build_projection_perspective.htm"><span class="inline">matrix_build_projection_perspective()</span></a>y luego utilizar esta función para mover la cámara de vista dentro de la proyección.</p>
  <p>Para fijar la vista, primero hay que definir la posición <i>desde la</i> que se mira, que se indica con los parámetros (xdesde, ydesde, zdesde). A continuación debes especificar la dirección <i>hacia</i> la que miras y esto se hace dando un segundo punto hacia el que mirar con los argumentos (xto, yto, zto). Por último, todavía se puede rotar la cámara alrededor de la línea que va desde el punto de vista hasta el punto de mirada, y para especificar esto debemos dar un vector &quot;hacia arriba&quot; - la dirección que está hacia arriba en la cámara. Esto viene dado por los tres últimos argumentos (xup, yup, zup).</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">matrix_build_lookat(xfrom, yfrom, zfrom, xto, yto, zto, xup, yup, zup);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descripción</th>
     </tr>
      <tr>
        <td><span class="notranslate">xfrom</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the position to look from.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">yfrom</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the position to look from.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">zfrom</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The z coordinate of the position to look from.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">xto</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the position to look to.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">yto</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the position to look to.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">zto</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The z coordinate of the position to look to.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">xup</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The x coordinate of the &quot;up&quot; vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">yup</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The y coordinate of the &quot;up&quot; vector.</span></td>
     </tr>
      <tr>
        <td><span class="notranslate">zup</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The z coordinate of the &quot;up&quot; vector.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Array_Matrix">Matrix Array</span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);<br />
    projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);<br />
    camera_set_view_mat(view_camera[0], viewmat);<br />
    camera_set_proj_mat(view_camera[0], projmat);</p>
  <p>El código anterior crea una nueva matriz de vista y una matriz ortográfica, almacena sus IDs en variables locales y luego las utiliza para establecer las matrices de vista y proyección para la cámara asignada al puerto de vista[0].</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Matrix_Functions.htm">Funciones de la matriz</a></div>
        <div style="float:right">Siguiente: <a href="matrix_build_projection_ortho.htm"><span class="notranslate">matrix_build_projection_ortho</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
matrix_build_lookat
-->
  <!-- TAGS
matrix_build_lookat
-->
</body>
</html>