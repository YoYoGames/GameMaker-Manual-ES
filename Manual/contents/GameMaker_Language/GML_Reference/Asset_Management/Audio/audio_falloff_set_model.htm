<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_falloff_set_model</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_falloff_set_model" />
  <meta name="rh-index-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none" />
  <meta name="search-keywords" content="audio_falloff_set_model,audio_falloff_exponent_distance,audio_falloff_exponent_distance_clamped,audio_falloff_inverse_distance,audio_falloff_inverse_distance_clamped,audio_falloff_linear_distance,audio_falloff_linear_distance_clamped,audio_falloff_none" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">audio_falloff_set_model</span></h1>
  <p>Para añadir más versatilidad al motor de audio, <span data-keyref="GameMaker Name">GameMaker</span> te permite seleccionar el modelo de decaimiento que se adapte a tu juego. Este modelo se utilizará para <b>todas</b> las funciones de audio del juego o la app, por lo que debes asegurarte de que el modelo que elijas sea el correcto, ya que cada uno afectará a la forma en que el oyente percibe los sonidos que reproduces a través de emisores o con la función <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span>.</p>
  <p>El modelo de decaimiento por defecto es <span class="inline">audio_falloff_none</span>, lo que significa que no hay decaimiento cuando se utilizan emisores o audio posicionado a menos que se cambie el modelo de decaimiento.</p>
  <h2>Modelos de desprendimiento</h2>
  <p>Cuando reproduzcas audio a través de <span class="inline"><a href="audio_play_sound_at.htm">audio_play_sound_at()</a></span> o establezcas el <a href="Audio_Emitters/audio_emitter_falloff.htm">desvanecimiento de un emisor</a>, hay tres argumentos que deberás establecer, y cada uno es apropiado para un modelo específico y afectará a la forma en que el sonido final es escuchado por el jugador dependiendo de la distancia a la que el oyente se encuentre de la fuente. Los tres argumentos son:</p>
  <ul class="colour">
    <li><b>Distancia de referencia</b>: es la distancia del oyente por debajo de la cual el volumen del sonido que se reproduce normalmente bajaría a la mitad antes de ser influenciado por el factor de roll-off o la distancia máxima especificada.<b></b></li>
    <li><b>Distancia máxima</b>: establece la distancia en la que ya no habrá atenuación del sonido de la fuente. Puede ser el punto en el que ya no se oye el sonido <i>o</i> el punto en el que el volumen del sonido ya no disminuye por debajo del umbral mínimo definido por el modelo elegido.<b></b></li>
    <li><b>Factor</b> de desvanecimiento: El factor de decaimiento se utiliza en la atenuación de la distancia basada en el modelo de distancia inversa y establece el umbral mínimo final para un sonido con decaimiento.</li>
  </ul>
  <p>Los modelos de desvanecimiento que se ven afectados por estos argumentos están representados en <span data-keyref="GameMaker Name">GameMaker</span> por las siguientes constantes (la tabla muestra también los cálculos exactos utilizados):</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Audio_Falloff_Type"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_falloff_set_model.htm" target="_blank">Constante de caída de audio</a></span></th>
      </tr>
      <tr>
        <th>Constante</th>
        <th>Cálculo de la ganancia</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance</span></td>
        <td><span class="inline"><br />
            gain = (listener_distance / reference_distance) ^ (-falloff_factor)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = (distance / reference_distance) ^ (-falloff_factor)</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_exponent_distance_scaled</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            <br />
            gain = ((distance / reference_distance) ^ (-falloff_factor)) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance</span></td>
        <td><span class="inline"><br />
            gain = reference_distance / (reference_distance + falloff_factor * (listener_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_inverse_distance_scaled</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            <br />
            gain = (reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))) * (((maximum_distance - distance) / (maximum_distance - reference_distance)) ^ (distance / maximum_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_linear_distance</span></td>
        <td><span class="inline"><br />
            distance = min(distance, maximum_distance)<br />
            gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_linear_distance_clamped</span></td>
        <td><span class="inline"><br />
            distance = clamp(listener_distance, reference_distance, maximum_distance)<br />
            gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))</span></td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">audio_falloff_none</span></td>
        <td><span class="inline"><br />
            gain = 1</span></td>
      </tr>
    </tbody>
  </table>
  <p>Los modelos &quot;<span class="inline">_scaled</span>&quot; están escalados de tal manera que se garantiza que los sonidos caen por completo en la distancia máxima.</p>
  <p>Los siguientes gráficos son representaciones visuales de cómo funcionan algunas de las constantes anteriores y afectan al sonido que se reproduce:</p>
  <p><img alt="Distance Model Examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Distance_Models.png" /></p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(model);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">model</span></td>
        <td><span data-keyref="Type_Constant_Audio_Falloff_Type"><a href="../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/audio_falloff_set_model.htm" target="_blank">Constante de caída de audio</a></span></td>
        <td><span class="notranslate">The <b>constant</b> used to set the falloff model.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code"><span data-field="title" data-format="default">audio_falloff_set_model</span>(audio_falloff_exponent_distance_clamped);<br />
    audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);</p>
  <p>El código anterior establece el modelo de decaimiento y luego reproduce el sonido indexado en la variable &quot;snd_Waterfall&quot;, que se reproducirá en bucle en su posición <span class="notranslate">room</span>, con una referencia de decaimiento de 100, una distancia de decaimiento de 300, un factor de decaimiento de 1 y una prioridad baja.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Audio.htm">Audio</a></div>
        <div style="float:right">Siguiente: <a href="audio_sound_gain.htm"><span class="notranslate">audio_sound_gain</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
audio_falloff_set_model
audio_falloff_exponent_distance
audio_falloff_exponent_distance_clamped
audio_falloff_inverse_distance
audio_falloff_inverse_distance_clamped
audio_falloff_linear_distance
audio_falloff_linear_distance_clamped
audio_falloff_none
-->
  <!-- TAGS
audio_falloff_set_model
-->
</body>
</html>