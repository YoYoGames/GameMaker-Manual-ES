<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>skeleton_attachment_create_colour</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function skeleton_attachment_create_colour" />
  <meta name="rh-index-keywords" content="skeleton_attachment_create_colour,skeleton_attachment_create_color" />
  <meta name="search-keywords" content="skeleton_attachment_create_colour,skeleton_attachment_create_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>skeleton_attachment_create_colour</h1>
  <p>Cuando creas tu animación de esqueleto <span class="notranslate">sprite</span>, puedes asignar <i>ranuras de adición</i> y <i>aditamentos</i> para ir en ellas. Estos son simplemente imágenes (<span class="notranslate">sprites</span>) que están separadas de la animación pero que cuando se adjuntan se mueven junto con el hueso al que se adjuntan. Normalmente asignarías estos adjuntos en tu programa de animación (<span class="notranslate">Spine</span>), pero con esta función puedes crear los tuyos propios en tiempo de ejecución usando un <span class="notranslate">sprite</span> <span class="notranslate">asset</span> de tu juego. la función requiere que le des un nombre al adjunto (como <span class="notranslate">string</span>) y luego establezcas los <a href="../../Sprite_Instance_Variables/sprite_index.htm"><span class="inline">sprite_index</span></a> y <a href="../../Sprite_Instance_Variables/image_index.htm"><span class="inline">image_index</span></a> a utilizar, así como el origen x e y (que puede ser diferente al definido por <span class="notranslate">sprite</span> en las propiedades de <span class="notranslate">sprite</span> ), y también puede establecer cualquier transformación que desee aplicar a la imagen cuando se adjunte, así como el color que se mezclará con la imagen y su valor alfa (transparencia). Si el archivo adjunto se ha creado con éxito, la función devolverá <span class="inline">1</span> y si no lo ha hecho (ha suministrado un índice <span class="notranslate">sprite</span> no válido, o la base <span class="notranslate">sprite</span> no es un <span class="notranslate">Spine</span> <span class="notranslate">sprite</span>) entonces devolverá <span class="inline">-1</span>.</p>
  <p>Cabe destacar que la instancia <span class="notranslate">sprite</span> puede tener un color de mezcla y un ajuste alfa (<a href="../../Sprite_Instance_Variables/image_blend.htm"><span class="inline">image_blend</span></a> y <a href="../../Sprite_Instance_Variables/image_alpha.htm"><span class="inline">image_alpha</span></a>), al igual que la ranura del accesorio (véase la función <a href="../Slots/skeleton_slot_colour_set.htm"><span class="inline">skeleton_slot_colour_set()</span></a>), por lo que el color y el alfa finales que tendrá el accesorio asignado <span class="notranslate">sprite</span> para la ranura serán un compuesto de todos estos valores.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">skeleton_attachment_create_colour(name, sprite, ind, xorigin, yorigin, xscale, yscale, rot, colour, alpha);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">name</span></td>
        <td><span data-keyref="Type_String">Cadena</span></td>
        <td><span class="notranslate">The name (as a string) of the attachment to create.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">sprite</span></td>
        <td><span data-keyref="Type_Asset_Sprite">Activo Sprite</span></td>
        <td><span class="notranslate">The sprite_index to get the attachment image from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">ind</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The image_index to get the attachment image from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xorigin</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The x origin for the image being used.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">yorigin</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The y origin for the image being used.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">xscale</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The horizontal scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">yscale</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The vertical scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc...</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">rot</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The rotation of the image: 0 = normal, 90 = turned 90° counter-clockwise etc.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">Colour</span></td>
        <td><span data-keyref="Type_Constant_Colour">Color</span></td>
        <td><span class="notranslate">The colour value to use (A constant, integer or hex value).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">Alpha</span></td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td><span class="notranslate">The alpha value to use (from 0 to 1).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (1 if successful, -1 if not)</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">skeleton_attachment_create_colour(&quot;sword&quot;, spr_Weapons, 0, 0, 80, 1, 1, 90, c_red, 1);<br />
    skeleton_attachment_create_colour(&quot;knife&quot;, spr_Weapons, 1, 0, 45, 1, 1, 90, c_yellow, 1);<br />
    skeleton_attachment_create_colour(&quot;crossbow&quot;, spr_Weapons, 0, 10, 30, 1, 1, 0, c_white, 0.5);<br />
    skeleton_attachment_set(&quot;slot_leftHand&quot;, choose(&quot;sword&quot;, &quot;knife&quot;, &quot;crossbow&quot;));</p>
  <p>El código anterior comprobaría el nombre de archivo adjunto actualmente asignado para la ranura llamada &quot;slot_leftHand&quot; y si se devuelve un <span class="notranslate">string</span> vacío, se adjunta un nuevo <span class="notranslate">sprite</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Attachments.htm">Anexos</a></div>
        <div style="float:right">Siguiente: <a href="../Bones/skeleton_bone_data_get.htm"><span class="notranslate">skeleton_bone_data_get</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_attachment_create_colour
skeleton_attachment_create_color
-->
  <!-- TAGS
skeleton_attachment_create_colour
-->
</body>
</html>