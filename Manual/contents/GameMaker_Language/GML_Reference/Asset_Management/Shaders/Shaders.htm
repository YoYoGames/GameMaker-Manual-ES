<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Sombreadores</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Shaders" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Shaders,_YY_GLSLES_,_YY_GLSL_,_YY_HLSL11_,_YY_PSSL_" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Sombreadores</h1>
  <p>Los sombreadores son una herramienta increíblemente poderosa para manipular qué y cómo se <a class="glossterm" data-glossterm="renderizado" href="#">renderizan</a> las cosas en la pantalla por la tarjeta gráfica. Dado que estos diminutos programas se ejecutan en la propia tarjeta gráfica, son extremadamente rápidos de procesar, lo que libera valiosos ciclos de la CPU para la lógica del juego.</p>
  <p>Para crear un <span class="notranslate">shader</span> necesitarás haber escrito tanto un <b>sombreador de vértices</b> como un <b>sombreador de fragmentos</b> (también conocido como <b>sombreador de píxeles</b>) utilizando el <a href="../../../../The_Asset_Editors/Shaders.htm">editor de sombreadores</a>, e incluso si (por ejemplo) sólo quieres cambiar las posiciones de <span class="notranslate">vertex</span> para una instancia que se está dibujando, o si sólo quieres cambiar los valores de color para los píxeles, todavía necesitarás <b>ambos</b> programas para que funcione un <span class="notranslate">shader</span> completo.</p>
  <p class="note"><span class="note">NOTA</span> Los shaders <b>no</b> permiten cambiar el valor de ninguna variable que se les pase, por lo que se llamarán <b>constantes del shader</b> en toda la documentación que se refiera a ellos.</p>
  <p>Para obtener una visión completa de las funciones y variables disponibles de GLSL ES que puede utilizar para programar los propios <span class="notranslate">shaders</span>, consulte las <a href="https://www.khronos.org/registry/OpenGL/specs/es/2.0/es_cm_spec_2.0.pdf" target="_blank">páginas de referencia de OpenGL ES Shading Language (GLSL ES)</a>. El siguiente enlace también es útil, ya que contiene algunas tarjetas de referencia rápida para la API de OpenGL ES (tenga en cuenta que sólo las dos últimas tarjetas mostradas son aplicables a <span data-keyref="GameMaker Name">GameMaker</span>): <a href="https://www.khronos.org/opengles/sdk/docs/reference_cards/OpenGL-ES-2_0-Reference-card.pdf">Tarjetas</a> de referencia de OpenGL ES.</p>
  <p>Utilizar un <span class="notranslate">shader</span> en tus proyectos es muy sencillo, y sólo requiere un par de líneas de código para sacarle el uso más básico:</p>
  <p class="code">shader_set(myShader);<br />
    draw_self();<br />
    shader_reset();</p>
  <p>Como puede ver, se utilizan de manera similar a los modos de mezcla y las superficies, donde primero se selecciona (se establece) el <span class="notranslate">shader</span>, se dibuja lo que se quiere utilizando, y luego se restablece el objetivo de dibujo de nuevo. Si desea renderizar toda la pantalla a través de un <span class="notranslate">shader</span>, y no sólo un único <span class="notranslate">sprite</span> o fondo, tendrá que configurar una superficie para capturar la vista actual, y luego pasarla a través del <span class="notranslate">shader</span> (ver <a href="../../Drawing/Surfaces/Surfaces.htm">Superficies</a> para más información).</p>
  <p class="note"><b>NOTA</b>: <span class="notranslate">Shaders</span>, como todo lo relacionado con el dibujo, <b>sólo</b> puede <b>ser utilizado en el evento draw</b>. También vale la pena señalar que si usted está tratando de utilizar un valor de color en un <span class="notranslate">shader</span> y el <span class="notranslate">object</span> no tiene textura, los resultados saldrán negros.</p>
  <p>Si el <span class="notranslate">shader</span> que está utilizando tiene valores de entrada, estos se establecen utilizando las funciones de <i>uniforme</i>. Primero se obtendría el <i>manejador</i> del uniforme (que es esencialmente un valor de identificación para el uniforme que se va a establecer) utilizando la función <a href="shader_get_uniform.htm"><span class="inline">shader_get_uniform()</span></a> en el <b>Evento de Creación</b> de la instancia que utiliza el <span class="notranslate">shader</span>, y luego almacenar estos manejadores en variables, algo así:</p>
  <p class="code">colour_to_find = shader_get_uniform(sShaderDemo5, &quot;f_Colour1&quot;);<br />
    colour_to_set = shader_get_uniform(sShaderDemo5, &quot;f_Colour2&quot;);</p>
  <p>Una vez que tenga las manijas uniformes, pueden ser establecidas en el código <span class="notranslate">shader</span> para el <b>Evento de Dibujo</b> así:</p>
  <p class="code">shader_set(sShaderDemo5);<br />
    shader_set_uniform_f(colour_to_find, 1,1,1 );<br />
    shader_set_uniform_f(colour_to_set, 1,0,0 );<br />
    draw_sprite(sprite_index,image_index,x+24, y);<br />
    shader_reset();</p>
  <p>Una última cosa a tener en cuenta es que, aunque <span class="notranslate">shaders</span> es aceptado en todas las plataformas, sigue siendo específico para cada dispositivo y si el hardware o el software del dispositivo no puede utilizar <span class="notranslate">shaders</span>, entonces obtendrá un error. Por lo tanto, se recomienda comprobar que el <span class="notranslate">shader</span> ha sido compilado antes de configurar los uniformes o utilizar el propio <span class="notranslate">shader</span>, así:</p>
  <p class="code">if (shader_is_compiled(myShader))<br />
    {<br />
        shader_set(myShader);<br />
        draw_self();<br />
        shader_reset();<br />
    }<br />
    else show_debug_message(&quot;Shader failed&quot;);</p>
  <p>Como comprobación adicional, también puede llamar a la función <a href="shaders_are_supported.htm"><span class="inline">shaders_are_supported()</span></a> para ver si el hardware soporta <span class="notranslate">shaders</span>. En general, se realizan estas comprobaciones al inicio del juego y se almacenan los resultados como una <a href="../../../GML_Overview/Variables/Global_Variables.htm">variable</a> global para comprobarlos más tarde.</p>
  <p>Es importante tener en cuenta que <span data-keyref="GameMaker Name">GameMaker</span> también soporta algunas <b>macros</b> de compilación condicional que pueden ser utilizadas dentro de GLSL ES <span class="notranslate">shaders</span> para que puedan realizar código alternativo en plataformas específicas soportadas. Las macros y las plataformas en las que se generarán se muestran en la siguiente tabla:</p>
  <p> </p>
  <table>
    <tbody>
      <tr>
        <th>Macro de sombreado</th>
        <th>Valor</th>
        <th>Plataforma de destino</th>
      </tr>
      <tr>
        <td>EL SISTEMA DE GESTIÓN DE LA CALIDAD DE LOS PRODUCTOS DE LA INDUSTRIA DE LA CONSTRUCCIÓN ES UN SISTEMA DE GESTIÓN DE LA CALIDAD.</td>
        <td>1</td>
        <td>Todas las plataformas de destino</td>
      </tr>
      <tr>
        <td>EL SISTEMA DE GESTIÓN DE LA CALIDAD DE LOS PRODUCTOS DE LA INDUSTRIA DE LA CONSTRUCCIÓN ES UN SISTEMA DE GESTIÓN DE LA CALIDAD.</td>
        <td>2</td>
        <td>Mac y <span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>)</td>
      </tr>
      <tr>
        <td>EL SISTEMA DE GESTIÓN DE LA INFORMACIÓN DE LA EMPRESA ES UN SISTEMA DE GESTIÓN DE LA INFORMACIÓN.</td>
        <td>3</td>
        <td>Windows, UWP, XboxOne</td>
      </tr>
      <tr>
        <td>EL SISTEMA DE SEGURIDAD DE LA EMPRESA ES EL MISMO QUE EL DE LOS DEMÁS.</td>
        <td>4</td>
        <td>PS4</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>Cuando compilas tu proyecto <span data-keyref="GameMaker Name">GameMaker</span> en cualquiera de las plataformas listadas usando un formato GLSL ES <span class="notranslate">shader</span>, se generará <i>una</i> de las macros anteriores que puede ser usada comprobada en el código <span class="notranslate">shader</span> de esta manera:</p>
  <p class="code">#ifdef _YY_HLSL11_<br />
    // HLSL shader code here<br />
    #else<br />
    // GLSL shader code here<br />
    #endif</p>
  <p>Si eres nuevo en <span class="notranslate">shaders</span> o quieres una guía más completa para crearlos y utilizarlos con <span data-keyref="GameMaker Name">GameMaker</span>, consulta la siguiente página del manual:</p>
  <ul class="colour">
    <li><a href="../../../../Additional_Information/Guide_To_Using_Shaders.htm">Guía para el uso de sombreadores</a></li>
  </ul>
  <p> </p>
  <p>Las siguientes funciones están disponibles para dibujar y ajustar los sombreadores:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="shader_get_name.htm"><span class="notranslate">shader_get_name</span></a></li>
    <li><a href="shader_get_uniform.htm"><span class="notranslate">shader_get_uniform</span></a></li>
    <li><a href="shader_get_sampler_index.htm"><span class="notranslate">shader_get_sampler_index</span></a></li>
    <li><a href="shader_set.htm"><span class="notranslate">shader_set</span></a></li>
    <li><a href="shader_set_uniform_f.htm"><span class="notranslate">shader_set_uniform_f</span></a></li>
    <li><a href="shader_set_uniform_f_array.htm"><span class="notranslate">shader_set_uniform_f_array</span></a></li>
    <li><a href="shader_set_uniform_i.htm"><span class="notranslate">shader_set_uniform_i</span></a></li>
    <li><a href="shader_set_uniform_i_array.htm"><span class="notranslate">shader_set_uniform_i_array</span></a></li>
    <li><a href="shader_set_uniform_matrix.htm"><span class="notranslate">shader_set_uniform_matrix</span></a></li>
    <li><a href="shader_set_uniform_matrix_array.htm"><span class="notranslate">shader_set_uniform_matrix_array</span></a></li>
    <li><a href="shader_reset.htm"><span class="notranslate">shader_reset</span></a></li>
    <li><a href="shader_is_compiled.htm"><span class="notranslate">shader_is_compiled</span></a></li>
    <li><a href="shaders_are_supported.htm"><span class="notranslate">shaders_are_supported</span></a></li>
    <li><a href="shader_current.htm"><span class="notranslate">shader_current</span></a></li>
  </ul>
  <p> </p>
  <p>También tenemos una función especial que define un estado global para todos los sombreadores:</p>
  <ul>
    <li><a href="shader_enable_corner_id.htm"><span class="notranslate">shader_enable_corner_id</span></a></li>
  </ul>
  <p> </p>
  <p>Cuando trabaje con muestreadores de textura en <span class="notranslate">shaders</span> necesitará información sobre la textura que se está utilizando, en cuyo caso puede utilizar las siguientes funciones:</p>
  <p> </p>
  <ul class="colour">
    <li><a href="../Sprites/Sprite_Information/sprite_get_texture.htm"><span class="notranslate">sprite_get_texture</span></a></li>
    <li><a href="../Sprites/Sprite_Information/sprite_get_uvs.htm"><span class="notranslate">sprite_get_uvs</span></a></li>
    <li><a href="../Fonts/font_get_texture.htm"><span class="notranslate">font_get_texture</span></a></li>
    <li><a href="../Fonts/font_get_uvs.htm"><span class="notranslate">font_get_uvs</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_width.htm"><span class="notranslate">texture_get_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_height.htm"><span class="notranslate">texture_get_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_width.htm"><span class="notranslate">texture_get_texel_width</span></a></li>
    <li><a href="../../Drawing/Textures/texture_get_texel_height.htm"><span class="notranslate">texture_get_texel_height</span></a></li>
    <li><a href="../../Drawing/Textures/texture_set_stage.htm"><span class="notranslate">texture_set_stage</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texfilter_ext.htm"><span class="notranslate">gpu_set_texfilter_ext</span></a></li>
    <li><a href="../../Drawing/GPU_Control/gpu_set_texrepeat.htm"><span class="notranslate">gpu_set_texrepeat</span></a></li>
  </ul>
  <p> </p>
  <p>Aunque este manual <b>no</b> cubre ninguna de las funciones y variables de Open GL <span class="notranslate">shader</span>, sí contiene una lista de las que son exclusivas de <span data-keyref="GameMaker Name">GameMaker</span>. Estas constantes no forman parte de la especificación de Open GL para <span class="notranslate">shaders</span> y se suministran para simplificar la integración de <span class="notranslate">shaders</span> en sus proyectos.</p>
  <ul class="colour">
    <li><a href="Shader_Constants.htm">Constantes de sombreado</a></li>
  </ul>
  <p> </p>
  <p>Por último, <span data-keyref="GameMaker Name">GameMaker</span> le permite definir sus propios <b>formatos de vértices</b> a partir de los cuales puede crear sus propias primitivas personalizadas. Esto puede acelerar enormemente las operaciones de <span class="notranslate">shader</span> o puede utilizarse para ampliar sus capacidades y crear efectos sorprendentes. Puedes encontrar información sobre esto en las siguientes secciones:</p>
  <ul class="colour">
    <li><a href="../../Drawing/Primitives/Primitives_And_Vertex_Formats.htm">Primitivas y <span class="notranslate">Vertex</span> Formatos</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Asset_Management.htm">Gestión de activos</a></div>
        <div style="float:right">Siguiente: <a href="../Sequences/Sequences.htm">Secuencias</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Shaders
_YY_GLSLES_
_YY_GLSL_
_YY_HLSL11_
_YY_PSSL_
-->
  <!-- TAGS
shader_functions
-->
</body>
</html>