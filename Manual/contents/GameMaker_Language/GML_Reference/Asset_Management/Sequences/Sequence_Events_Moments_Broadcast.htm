<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Secuencia de eventos, momentos y mensajes de difusión</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Sequence Events, Moments and Broadcast Messages" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Sequence Events,Sequence Momements,Sequence Messages,broadcast messages,event_create,event_destroy,event_clean_up,event_step,event_step_begin,event_step_end,event_async_system,event_broadcast_message" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Eventos, momentos y mensajes de difusión</h1>
  <p>Aparte de todas las propiedades enumeradas <a href="Sequences.htm">aquí</a> para un <span class="notranslate">sequence</span> <span class="notranslate">struct</span>, también tiene la posibilidad de añadir propiedades de &quot;acción&quot; especiales a un <span class="notranslate">sequence</span>. Hay tres tipos diferentes de estas propiedades de &quot;acción&quot; que se pueden añadir a un <span class="notranslate">sequence</span> <span class="notranslate">object</span> - <b>Eventos</b>. <b>Momentos</b> y <b>Mensajes de Difusión</b> - y cada una de ellas se explica con más detalle en las secciones siguientes.</p>
  <h2>Secuencia de eventos</h2>
  <p>La secuencia <span class="notranslate">objects</span> puede tener <b>eventos</b> añadidos, y estos eventos son análogos a los utilizados por <span class="notranslate">object</span> <span class="notranslate">assets</span>. Los eventos que se asignan a un <span class="notranslate">sequence</span> <span class="notranslate">object</span> ocurrirán en un orden específico, ya sea una vez en un momento definido del ciclo de vida de <span class="notranslate">sequence</span>, o cada fotograma que el <span class="notranslate">sequence</span> esté ejecutando. En esta sección, discutiremos cómo se manejan estos eventos usando código, pero también pueden ser añadidos usando el <a href="../../../../The_Asset_Editors/Sequences.htm">Editor de Secuencias</a>. Tenga en cuenta que el orden de los eventos que se enumeran aquí no está influenciado por la dirección <a class="glossterm" data-glossterm="cabezal de reproducción" href="#">del cabezal de reproducción</a>, e incluso si el <span class="notranslate">sequence</span> se está reproduciendo hacia atrás, los eventos se ejecutarán en el orden que se indica a continuación.</p>
  <p>Los eventos disponibles son:<b></b></p>
  <ul class="colour">
    <li><b>Crear</b>: se activa cuando se crea una instancia de <span class="notranslate">sequence</span> en una capa.</li>
    <li><b>Destroy</b>: se activa cuando se destruye una instancia de <span class="notranslate">sequence</span> en una capa.</li>
    <li><b>Limpieza</b>: se activa cuando una instancia de <span class="notranslate">sequence</span> se recoge de la basura.</li>
    <li><b>Paso</b>: se activa justo antes del evento de paso habitual de <span class="notranslate">object</span>. <b>¡Importante!</b> Si el <span class="notranslate">sequence</span> está en pausa, este evento no se activará hasta el siguiente paso después de que el <span class="notranslate">sequence</span> comience a reproducirse de nuevo.</li>
    <li><b>Begin Step</b>: se activa justo antes del evento <span class="notranslate">object</span> begin-step. <b>¡Importante!</b> Si el <span class="notranslate">sequence</span> está en pausa, este evento no se activará hasta el siguiente paso después de que el <span class="notranslate">sequence</span> comience a reproducirse de nuevo.</li>
    <li><b>Paso final</b>: se activa justo antes del evento de paso final de <span class="notranslate">object</span>. <b>¡Importante!</b> Si el <span class="notranslate">sequence</span> está en pausa, este evento no se activará hasta el siguiente paso después de que el <span class="notranslate">sequence</span> comience a reproducirse de nuevo.</li>
    <li><b>Sistema asíncrono</b>: se activa igual que cualquier controlador de <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">eventos asíncronos del sistema</a> <span class="notranslate">object</span>. <em><b>Importante: si el evento está en pausa, no se activará.</b> Si el <span class="notranslate">sequence</span> está en pausa, este evento no se activará.</em></li>
    <li><b>Mensaje</b> de difusión: se activa durante la actualización de <span class="notranslate">sequence</span> cuando se encuentra un mensaje de difusión <span class="notranslate">keyframe</span>.</li>
  </ul>
  <p>Todos los eventos deben estar asociados a funciones definidas en <span class="notranslate">script</span>, por lo que para configurar un evento se debe asignar una <a href="../../../GML_Overview/Method_Variables.htm">variable de método</a> a una propiedad con el nombre correcto que indique a <span class="notranslate">sequence</span> qué evento debe llamar a la función. La sintaxis para esto es la siguiente:</p>
  <p class="code">&lt;sequence_struct&gt;.&lt;event_property&gt; = method(&lt;sequence_struct&gt;, &lt;function_name&gt;);</p>
  <p>Las propiedades de <span class="notranslate">sequence</span> <span class="notranslate">struct</span> para los diferentes eventos son las siguientes:<span class="inline"></span></p>
  <ul class="colour">
    <li><span class="inline">event_create</span><span class="inline"></span></li>
    <li><span class="inline">event_destroy</span><span class="inline"></span></li>
    <li><span class="inline">event_clean_up</span><span class="inline"></span></li>
    <li><span class="inline">event_step</span><span class="inline"></span></li>
    <li><span class="inline">event_step_begin</span><span class="inline"></span></li>
    <li><span class="inline">event_step_end</span></li>
    <li><span class="inline">event_async_system</span><span class="inline"></span></li>
    <li><span class="inline">event_broadcast_message</span></li>
  </ul>
  <p>Para dar un ejemplo de uso, digamos que queremos que el <span class="notranslate">sequence</span> invierta la dirección cuando se detecte un clic del botón izquierdo del ratón. Primero tendríamos que crear un <span class="notranslate">script</span> con la función que queremos llamar, algo así:</p>
  <p class="code">/// @function seq_reverse();<br />
    <br />
    function seq_reverse()<br />
    {<br />
        if mouse_check_button_pressed(mb_left)<br />
        {<br />
            if self.headDirection == seqdir_right<br />
            {<br />
                self.headDirection = seqdir_left;<br />
            }<br />
            else self.headDirection = seqdir_right;<br />
        }<br />
    }
  </p>
  <p>En esta función todo lo que hacemos es escuchar una pulsación del ratón y luego invertir la dirección de reproducción de la <span class="notranslate">sequence</span> a la que se ha vinculado el método. Notarás que actualmente no puedes pasar ningún parámetro a las funciones que están vinculadas a estas propiedades, y en todos los casos la variable <a href="../../../GML_Overview/Instance_Keywords.htm"><span class="inline">self</span></a> dentro del ámbito de la función se asigna a la instancia <span class="notranslate">sequence</span>.</p>
  <p class="note"><b>NOTA</b>: Vale la pena señalar que en el anterior <span class="notranslate">script</span> el identificador <span class="inline">self</span> puede ser omitido y sólo se utiliza para mostrar explícitamente el alcance de la variable del método que se utiliza para este ejemplo.</p>
  <p>Para asignar esto a un <span class="notranslate">sequence</span> se haría algo así:</p>
  <p class="code">var _seq = sequence_get(Sequence1);<br />
    _seq.event_step = method(_seq, seq_reverse);</p>
  <p>Ahora hemos asignado un evento de paso al <i>objeto</i> <span class="notranslate">sequence</span> con una función para detectar cuando se pulsa el ratón y luego cambiar la dirección del cabezal de reproducción de la <i>instancia</i> <span class="notranslate">sequence</span> después de que se haya creado en un <span class="notranslate">room</span>.</p>
  <h2><label for="2">Momentos</label></h2>
  <p>Un momento <b>de</b> <span class="notranslate">sequence</span> es una acción de código única que se dispara en uno o más fotogramas especificados mientras se reproduce <span class="notranslate">sequence</span>. Estos momentos de código son - al igual que con los eventos (explicados anteriormente) - simplemente <a href="../../../GML_Overview/Method_Variables.htm">variables de métodos</a> predefinidos que se disparan en el fotograma dado. Por ejemplo, digamos que quieres que un <span class="notranslate">sequence</span> cree una instancia de &quot;bala&quot; en un fotograma específico de la animación - primero tendrías que crear la función que se va a utilizar para esta acción, algo así:</p>
  <p class="code">/// @function seq_shoot();<br />
    <br />
    seq_shoot = function()<br />
    {<br />
        instance_create_layer(sequence.xorigin, sequence.yorigin, &quot;Instances&quot;, obj_Bullet);<br />
    }
  </p>
  <p>A continuación, se añadiría esto a un marco en la propiedad <span class="inline">momentKeyframes</span> del <span class="notranslate">sequence</span> <span class="notranslate">struct</span>. Esta es esencialmente una pista &quot;especial&quot; que sólo se utiliza para este propósito y por lo tanto sólo puede tomar los datos de <span class="notranslate">keyframe</span> que están asociados con las acciones del momento que usted quiere que el <span class="notranslate">sequence</span> tenga. Esta pista se crea de la misma manera que cualquier otra pista, creando <span class="notranslate">keyframe</span> <span class="notranslate">structs</span> y llenándolas con datos de <span class="notranslate">keyframe</span>, donde el canal 0 es el único que se puede utilizar y el tipo de pista es <span class="inline">seqtracktype_moment</span>. A continuación se muestra un ejemplo de cómo se crearía, utilizando la función que definimos anteriormente para disparar en los momentos dados (marcos):</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(3);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[1].frame = 120;<br />
    _k[2] = sequence_keyframe_new(seqtracktype_moment);<br />
    _k[2].frame = 180;<br />
    var _d = array_create(1);<br />
    _d[0] = sequence_keyframedata_new(seqtracktype_moment);<br />
    _d[0].channel = 0;<br />
    _d[0].event = method(_d[0], seq_shoot);<br />
    _k[0].channels = _d;<br />
    _k[1].channels = _d;<br />
    _k[2].channels = _d;<br />
    _seq.momentKeyframes = _k;</p>
  <p>El código anterior simplemente establecerá los fotogramas 60, 120 y 180 de la pista &quot;momento&quot; para llamar al método <span class="inline">seq_shoot</span>. Notará que actualmente no es posible pasar ningún parámetro a las funciones que se utilizan para cada momento, y en todos los casos la variable <span class="inline">self</span> dentro del ámbito de la función se asigna para ser la instancia <span class="notranslate">sequence</span> (generalmente no es necesario utilizar <span class="inline">self</span> pero en algunos casos especiales puede ser útil).</p>
  <h2><label for="3">Mensajes de difusión</label></h2>
  <p>Las secuencias pueden ser hechas para generar mensajes de <b>difusión</b>, los cuales son simples <span class="notranslate">strings</span> que se agregan a cuadros específicos a lo largo de la animación <span class="notranslate">timeline</span>, y cuando ese punto en el <span class="notranslate">timeline</span> es alcanzado, entonces el <span class="notranslate">string</span> será difundido a todas las instancias <span class="notranslate">object</span> que lo escuchen. Puedes añadir estos mensajes en el <span class="notranslate">IDE</span> usando el <a href="../../../../The_Asset_Editors/Sequences.htm">editor de secuencias</a>, pero también pueden ser creados y editados usando código.</p>
  <p>Para crear un mensaje de difusión en un <span class="notranslate">sequence</span> utilizando <span class="notranslate">GML</span>, es necesario añadirlos a un marco en la propiedad <span class="inline">messageEventKeyframes</span> del <span class="notranslate">sequence</span> <span class="notranslate">struct</span>. Se trata esencialmente de una pista &quot;especial&quot; que sólo se utiliza para este fin y, por lo tanto, sólo puede tomar los datos de <span class="notranslate">keyframe</span> que están asociados a los mensajes de difusión que desea que tenga el <span class="notranslate">sequence</span>. Esta pista se crea de la misma manera que cualquier otra pista, creando <span class="notranslate">keyframe</span> <span class="notranslate">structs</span> y llenándolas con datos de <span class="notranslate">keyframe</span>, donde el canal 0 es el único que se puede utilizar y el tipo de pista es <span class="inline">seqtracktype_message</span>. A continuación se muestra un ejemplo de cómo se crearía esto:</p>
  <p class="code">var _seq = sequence_get(my_Seq);<br />
    var _k = array_create(2);<br />
    _k[0] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[0].frame = 60;<br />
    _k[1] = sequence_keyframe_new(seqtracktype_message);<br />
    _k[1].frame = 120;<br />
    var _m1 = array_create(2);<br />
    _m1[0] = &quot;Hello&quot;;<br />
    _m1[1] = &quot;World&quot;;<br />
    var _m2 = array_create(1);<br />
    _m2[0] = &quot;This is a Broadcast Message&quot;;<br />
    var _d1 = array_create(1);<br />
    _d1[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d1[0].channel = 0;<br />
    _d1[0].events = _m1;<br />
    var _d2 = array_create(1);<br />
    _d2[0] = sequence_keyframedata_new(seqtracktype_message);<br />
    _d2[0].channel = 0;<br />
    _d2[0].events = _m2;<br />
    _k[0].channels = _d1;<br />
    _k[1].channels = _d2;<br />
    _seq.messageEventKeyframes = _k;</p>
  <p>Notarás que el texto del mensaje se pasa al canal de datos <span class="notranslate">keyframe</span> como un array. Esto se debe a que puedes emitir múltiples mensajes en la misma trama, y hacer que diferentes instancias de <span class="notranslate">object</span> los escuchen y reaccionen de manera diferente dependiendo del mensaje que estén esperando.</p>
  <p>Una vez que el mensaje de difusión ha sido emitido por <span class="notranslate">sequence</span>, puede analizarlo utilizando el evento <i>Other</i> &gt; <i>Broadcast Message</i> en las instancias de <span class="notranslate">object</span>, que se explica en detalle <a href="../../../../The_Asset_Editors/Sequence_Properties/Broadcast_Messages.htm">aquí</a>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Sequences.htm">Secuencias</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Sequence Events
Sequence Moments
Sequence Broadcast Messages
broadcast Messages
event_create
event_destroy
event_clean_up
event_step
event_step_begin
event_step_end
event_async_system
event_broadcast_message
-->
  <!-- TAGS
sequence_events_moments_broadcasts
-->
</body>
</html>