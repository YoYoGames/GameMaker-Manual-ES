<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ver_actualidad</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for view_current" />
  <meta name="rh-index-keywords" content="view_current" />
  <meta name="search-keywords" content="view_current" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>ver_actualidad</h1>
  <p>Esta variable de <b>sólo lectura</b> sólo es válida en el <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm"><b>Evento de sorteo</b></a> y devuelve el puerto de vista actual que se está renderizando. El valor de retorno cambiará durante el evento draw cuando tengas varias vistas ya que el evento draw es llamado <i>una vez por cada puerto de vista en sucesión</i>. Así que cuando (por ejemplo) estás usando el puerto de vista[0] y el puerto de vista[1] en tu juego <span class="notranslate">room</span>, el evento draw para <i>TODAS las</i> instancias se ejecutará dos veces, una para cada puerto, y con esta variable puedes comprobar qué vista se está dibujando actualmente. En general, esto se utiliza para sólo renderizar detalles específicos a un solo puerto cuando varios puertos de vista son visibles en el <span class="notranslate">room</span> al mismo tiempo. Vea el código de ejemplo a continuación.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">view_current;</p>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (view port index from 0 to 7)</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">if view_current == 0<br />
    {<br />
        var _xx = camera_get_view_x(view_camera[0]);<br />
        var _yy = camera_get_view_y(view_camera[0]);<br />
        draw_text(_xx + 32, _yy + 32, &quot;Player 1&quot;);<br />
    }<br />
    else<br />
    {<br />
        var _xx = camera_get_view_x(view_camera[1]);<br />
        var _yy = camera_get_view_y(view_camera[1]);<br />
        draw_text(_xx + 32, _yy + 32, &quot;Player 2&quot;);<br />
    }</p>
  <p>El código anterior comprueba qué vista se está dibujando en ese momento y luego dibuja un texto diferente en cada vista en función del valor de retorno.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Cameras_And_View_Ports.htm">Cámaras y puertos de visualización</a></div>
        <div style="float:right">Siguiente: <a href="view_enabled.htm"><span class="notranslate">view_enabled</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
view_current
-->
  <!-- TAGS
view_current
-->
</body>
</html>