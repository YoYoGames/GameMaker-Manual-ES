<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get" />
  <meta name="rh-index-keywords" content="http_get" />
  <meta name="search-keywords" content="http_get" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get</h1>
  <p>Con esta función, se conecta a la URL especificada para recuperar información. Como se trata de una función asíncrona, <span data-keyref="GameMaker Name">GameMaker</span> no se bloqueará mientras espera una respuesta, sino que seguirá funcionando a menos que obtenga información de devolución de llamada. Esta información será en forma de un <span class="notranslate">string</span> y activará un <b>Evento Asíncrono</b> en cualquier instancia que tenga uno definido en sus propiedades <span class="notranslate">object</span>. También hay que tener en cuenta que los parámetros de petición HTTP (los trozos que a veces se &quot;añaden&quot; al final de una URL cuando se envía un formulario en una página web) son perfectamente aceptables cuando se utiliza esta función, por ejemplo:</p>
  <p class="code">http_get(&quot;http://www.example.com/logon?username=&quot;+name);</p>
  <p>pasará el <span class="notranslate">string</span> mantenido en la variable &quot;nombre&quot; al <span class="notranslate">server</span> así como recuperará los datos de esa URL. Así que, esencialmente, cada vez que se necesite pasar un dato simple y corto desde el cliente a <span class="notranslate">server</span>, esta sería una opción razonable como función a utilizar.</p>
  <p class="note"><b>NOTA</b>: Debe tener en cuenta que, debido a la protección XSS de los navegadores, las solicitudes e intentos de carga de recursos de dominios cruzados se bloquean y pueden aparecer resultados en blanco. Para más información, consulte la sección sobre <a href="HTTP.htm">problemas</a> entre dominios.</p>
  <p>Esta función generará múltiples &quot;call backs&quot; que son recogidos por cualquier <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">evento HTTP</a>. Estos generarán un <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> (más conocido como &quot;diccionario&quot;) que es exclusivo de este evento y se almacena en la variable especial <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Este mapa DS contendrá diferentes valores dependiendo de si se devuelven datos o no. Por ejemplo, si se ha solicitado un archivo, el evento se disparará varias veces a medida que se reciba cada paquete de datos para poder mostrar una barra de progreso, por ejemplo. La estructura general del mapa DS será la siguiente:</p>
  <ul class="colour">
    <li><b>id: </b>El ID que fue devuelto por el comando. Si disparas una serie de peticiones a <span class="inline">http_</span> entonces necesitas saber a cuál estás recibiendo la respuesta, por lo que usarías este valor para compararlo con el valor que almacenaste cuando enviaste originalmente la petición para encontrar la correcta.</li>
    <li><b>estado: </b>Devuelve un valor inferior a 0 si se trata de un error, 0 si está completo y 1 si está recibiendo paquetes (para más detalles, véase más abajo).</li>
    <li><b>resultado: </b>Los datos recibidos (<span class="notranslate">string</span> solamente).</li>
    <li><b>url: </b>La URL completa que ha solicitado.</li>
    <li><b>http_status: </b>El código de estado http en bruto (si está disponible). Esto devuelve el código de estado web estándar para la mayoría de los navegadores, por ejemplo: 304 para &quot;No modificado&quot; o 204 para &quot;Sin contenido&quot;, etc...</li>
  </ul>
  <p>Si hay varios paquetes que se devuelven al juego, la tecla &quot;status&quot; de la llamada de retorno devolverá 1, en cuyo caso el mapa DS tendrá las siguientes teclas adicionales:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>Es el tamaño del archivo que la web <span class="notranslate">server</span> ha dicho que debe esperar recibir (puede ser -1 si la <span class="notranslate">server</span> no devuelve este dato).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>El tamaño de los datos que ya se han descargado.</li>
  </ul>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">http_get(url);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">url</span></td>
        <td><span data-keyref="Type_String"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Cadena</a></span></td>
        <td><span class="notranslate">The web address of the server that you wish to get information from</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event"><a href="../../../../../GameMaker_Language/GML_Reference/Asynchronous_Functions/Asynchronous_Functions.htm" target="_blank">Async Request ID</a></span></p>
  <p> </p>
  <h4>Ejemplo ampliado:</h4>
  <p>La función <span class="inline">http_get()</span> puede ser llamada desde cualquier evento, y como es asíncrona la llamada de retorno puede ser casi instantánea o puede tardar varios segundos. Llamar a la función es sencillo y sería algo así:</p>
  <p class="code">get = http_get(&quot;http://www.MacSweeneyGames.com/logon?username=&quot; + name);</p>
  <p>El código anterior pasará la <span class="notranslate">string</span> contenida en la variable &quot;name&quot; a la <span class="notranslate">server</span> dada, así como recuperará los datos de esa URL, desencadenando un Evento Asíncrono que contendrá el mapa async_load DS (el índice del mapa async_load se almacenará en la variable &quot;get&quot; para poder comprobar la devolución de llamada correcta). El Evento Asíncrono disparado sería el sub-evento <b>HTTP</b>, y en ese evento tendrías lo siguiente:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == get<br />
    {<br />
        if ds_map_find_value(async_load, &quot;status&quot;) == 0<br />
        {<br />
            r_str = ds_map_find_value(async_load, &quot;result&quot;);<br />
        }<br />
        else<br />
        {<br />
            r_str = &quot;null&quot;;<br />
        }<br />
    }</p>
  <p>El código anterior comprobará primero el id del mapa DS que se ha creado, y luego comprobará el &quot;estado&quot; de la llamada de retorno. Si el valor es igual a 0 (señalando el éxito) el resultado de la llamada de retorno se almacenará en una variable para su uso futuro, de lo contrario la variable se establecerá en un valor por defecto (en este caso &quot;null&quot;).</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Volver: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Siguiente: <a href="http_get.htm"><span class="notranslate">http_get_file</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
http_get
-->
  <!-- TAGS
http_get
-->
</body>
</html>