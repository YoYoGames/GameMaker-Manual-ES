<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>http_get_file</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for http_get_file" />
  <meta name="rh-index-keywords" content="http_get_file" />
  <meta name="search-keywords" content="http_get_file" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>http_get_file</h1>
  <p>Con esta función, puede conectarse a la URL especificada para recuperar información en forma de archivo. Como se trata de una función asíncrona, <span data-keyref="GameMaker Name">GameMaker</span> no se bloqueará a la espera de una respuesta, sino que seguirá funcionando a menos que obtenga información de devolución de llamada. Esta información será en forma de un <span class="notranslate">string</span> y desencadenará un <b>Evento Asíncrono</b> en cualquier instancia que tenga uno definido en sus propiedades <span class="notranslate">object</span>.</p>
  <p class="note"><b><span class="note">NOTA</span> </b>Debe tener en cuenta que, debido a la protección XSS de los navegadores, las solicitudes y los intentos de cargar recursos de dominios cruzados se bloquean y puede parecer que devuelven resultados en blanco. Para más información, consulte la sección sobre <a href="HTTP.htm">problemas</a> entre dominios.</p>
  <p>Este evento generará una &quot;devolución de llamada&quot; que es recogida por cualquier <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/HTTP.htm">evento HTTP</a>, en cuyo caso generará un <a href="../../Data_Structures/DS_Maps/DS_Maps.htm"><span class="inline">DS Map</span></a> (más conocido como &quot;diccionario&quot;) que es exclusivo de este evento y se almacena en la variable especial <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><b>async_load</b></a>. Este mapa DS contendrá diferentes valores en función de los datos que se devuelvan, es decir, el evento se disparará varias veces a medida que se reciba cada paquete de datos para poder mostrar una barra de progreso, por ejemplo. La estructura general del mapa DS será la siguiente:</p>
  <ul class="colour">
    <li><b>id: </b>El ID que fue devuelto por el comando. Si disparas una serie de peticiones a <span class="inline">http_</span> entonces necesitas saber a cuál estás recibiendo la respuesta, por lo que usarías este valor para compararlo con el valor que almacenaste cuando enviaste originalmente la petición para encontrar la correcta.</li>
    <li><b>estado: </b>Devuelve un valor inferior a 0 si se trata de un error, 0 si está completo y 1 si está recibiendo paquetes (ver más abajo para más detalles).</li>
    <li><b>resultado: </b>Los datos recibidos (<span class="notranslate">string</span> solamente).</li>
    <li><b>url: </b>La URL completa que ha solicitado.</li>
    <li><b>http_status: </b>El código de estado http en bruto (si está disponible). Esto devuelve el código de estado web estándar para la mayoría de los navegadores, por ejemplo: 304 para &quot;No modificado&quot; o 204 para &quot;Sin contenido&quot;, etc...</li>
  </ul>
  <p>Si hay varios paquetes que se devuelven a su juego, la clave de devolución de llamada &quot;estado&quot; devolverá 1, en cuyo caso el mapa DS tendrá las siguientes claves adicionales:</p>
  <ul class="colour">
    <li><b>&quot;contentLength&quot;: </b>Es el tamaño del archivo que la web <span class="notranslate">server</span> ha dicho que debe esperar recibir (puede ser -1 si la <span class="notranslate">server</span> no devuelve este dato).</li>
    <li><b>&quot;sizeDownloaded&quot;: </b>El tamaño de los datos que ya se han descargado.</li>
  </ul>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">http_get_file(url, local_target);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">url</span></td>
        <td><span data-keyref="Type_String">Cadena</span></td>
        <td><span class="notranslate">The web address of the server that you wish to get file from</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">local_target</span></td>
        <td><span data-keyref="Type_String">Cadena</span></td>
        <td><span class="notranslate">The local storage path to save the file to</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Ejemplo ampliado:</h4>
  <p>La función <span class="inline">http_get_file()</span> puede ser llamada desde cualquier evento, y como es asíncrona la llamada de retorno puede ser casi instantánea o puede tardar varios segundos. Llamar a la función es sencillo y sería algo así:</p>
  <p class="code">file = http_get_file(&quot;http://www.macsweeneygames.com/downloads/upgrade.zip&quot;, &quot;\Downloads\Upgrade.zip&quot;);</p>
  <p>El código anterior solicitará un archivo de la URL dada y lo establecerá para ser descargado en el área de almacenamiento local (como se especifica en las Opciones de Juego HTML5), en un directorio &quot;Descargas&quot; con el nombre de archivo dado (esto no tiene que ser el mismo que el nombre del archivo de origen, pero debe utilizar el mismo archivo <span class="notranslate">extension</span>). El índice del mapa <span class="inline">async_load</span> se almacenará en la variable &quot;file&quot; para que pueda comprobar la devolución de llamada correcta en el Evento Asíncrono, y si el directorio de guardado no existe, se creará. El Evento Asíncrono disparado sería el sub-evento <b>HTTP</b>, y en ese evento tendrías algo como lo siguiente:</p>
  <p class="code">if ds_map_find_value(async_load, &quot;id&quot;) == file<br />
    {<br />
        var status = ds_map_find_value(async_load, &quot;status&quot;);<br />
        if status == 0<br />
        {<br />
            var path = ds_map_find_value(async_load, &quot;result&quot;);<br />
            var files = zip_unzip(path, &quot;/NewContent/&quot;);<br />
            if files &gt; 0<br />
            {<br />
                global.ExtraContent = true;<br />
            }<br />
        }<br />
    }</p>
  <p>El código anterior comprobará primero el &quot;id&quot; del ds_map que se ha creado, y luego comprobará el estado de la llamada de retorno. Si el valor es igual a 0 (señalando el éxito), el resultado de la llamada de retorno se utilizará junto con la función <a href="../../File_Handling/Encoding_And_Hashing/zip_unzip.htm"><span class="inline">zip_unzip()</span></a> para descomprimir el archivo descargado en el directorio indicado. Si la descompresión tiene éxito, una variable global se establece en true.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Volver: <a href="HTTP.htm">HTTP</a></div>
        <div style="float:right">Siguiente: <a href="http_post_string.htm"><span class="notranslate">http_post_string</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
http_get_file
-->
  <!-- TAGS
http_get_file
-->
</body>
</html>