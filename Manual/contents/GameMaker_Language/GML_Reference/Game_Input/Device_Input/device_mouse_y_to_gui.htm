<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>device_mouse_y_to_gui</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for device_mouse_y_to_gui" />
  <meta name="rh-index-keywords" content="device_mouse_y_to_gui" />
  <meta name="search-keywords" content="device_mouse_y_to_gui" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>device_mouse_y_to_gui</h1>
  <p>Esta función devuelve la posición y del toque en el dispositivo en relación con la capa GUI. Dado que la capa GUI puede configurarse para tener un tamaño diferente independientemente de la resolución de la pantalla <i>y</i> del tamaño de <span class="notranslate">room</span>, a veces puede ser complicado obtener el punto exacto de la capa GUI en el que un usuario ha tocado la pantalla. Con esta función puedes obtener esa posición basándote en el tamaño real de la GUI, haciendo que los botones de la GUI y los elementos del HUD sean más fáciles de crear e interactuar. Si estás ejecutando esto en un módulo de HTML5 o de PC y Mac, este valor se actualiza constantemente, siempre y cuando el dispositivo (normalmente un ratón) esté conectado, sin embargo, para los dispositivos móviles, esto sólo se actualizará mientras se esté tocando la pantalla, y ten en cuenta que el número máximo de toques que se pueden detectar dependerá mucho del dispositivo que se esté utilizando y del sistema operativo que ejecute.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">device_mouse_y_to_gui(device);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descripción</th>
     </tr>
      <tr>
        <td><span class="notranslate">device</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">The device (from 0 - <i>n</i>) that is being checked.</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">if device_mouse_check_button(0, mb_left)<br />
    {<br />
        if device_mouse_y_to_gui(0) &gt; 0 &amp;&amp; device_mouse_y_to_gui(0) &lt; 32<br />
        {<br />
            pressed = true;<br />
        }<br />
        else<br />
        {<br />
            pressed = false;<br />
        }<br />
    }</p>
  <p>El código anterior comprueba si el ratón del dispositivo está siendo presionado y si es así, entonces sondea la posición x del dispositivo en la capa de la GUI para ver si está dentro de los parámetros. Si lo está, establece la variable &quot;pressed&quot; a <span class="inline">true</span>, de lo contrario la establece a <span class="inline">false</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Device_Input.htm">Entrada de dispositivos</a></div>
        <div style="float:right">Siguiente: <a href="device_is_keypad_open.htm"><span class="notranslate">device_is_keypad_open</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
device_mouse_y_to_gui
-->
  <!-- TAGS
device_mouse_y_to_gui
-->
</body>
</html>