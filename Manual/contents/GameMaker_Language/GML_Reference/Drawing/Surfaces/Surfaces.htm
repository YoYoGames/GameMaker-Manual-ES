<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Superficies</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for the Surface functions and variables" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Surfaces,application_surface,application surface,app surface" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Superficies</h1>
  <p>En los eventos normales de dibujo, <span data-keyref="GameMaker Name">GameMaker</span> no dibuja directamente en la pantalla, sino que dibuja en una <b>superficie</b> llamada <i>superficie de aplicación</i>. Esta superficie es básicamente un &quot;lienzo&quot; en blanco que luego puede ser manipulado antes de ser dibujado en la pantalla cuando sea necesario, y en la mayoría de los casos <span data-keyref="GameMaker Name">GameMaker</span> maneja esto para usted (aunque también puede manipularlo usted mismo en el código para <span class="notranslate">shaders</span>, la escala y muchas otras cosas - más detalles se dan a continuación).</p>
  <p>Sin embargo, aparte de esta superficie de aplicación, también puedes crear tus propias superficies y utilizarlas para crear efectos especiales impresionantes o sutiles en tu juego. Por ejemplo, puedes usar las superficies para &quot;atrapar&quot; instancias, que luego pueden ser destruidas, y de esta manera puedes crear un efecto de calcomanía donde el <span class="notranslate">sprite</span> para la instancia se muestra en la superficie como si todavía existiera, permitiendo efectos gráficos como escombros, sangre, etc... sin ninguna sobrecarga de procesamiento real. Otra cosa que se puede hacer con las superficies es utilizarlas como texturas para ser manipuladas, o para crear <span class="notranslate">sprites</span> &quot;sobre la marcha&quot;, o para crear superposiciones complejas. de hecho, ¡los usos de las superficies son infinitos!</p>
  <p>Las superficies normales son bastante fáciles de usar, pero hay algunas reglas básicas que deben seguirse al utilizarlas:</p>
  <ul class="colour">
    <li>En primer lugar, debes saber que las superficies<i>(excepto</i> la de la aplicación) son &quot;volátiles&quot;. Esto significa que si el dispositivo o la ventana pierde el foco o se minimiza (buenos ejemplos son cuando ALT +Tab a otra ventana y de vuelta en Windows, o en un dispositivo <span class="notranslate">Android</span> cuando la aplicación pierde el foco debido a una llamada) entonces la superficie <strong>puede ser destruida</strong>. Esto se debe a que se almacena <em>sólo</em> en la memoria de la textura<a class="glossterm" data-glossterm="VRAM" href="#">(VRAM</a>) y puede ser sobrescrita cuando la plataforma de destino necesita esa memoria para otra cosa, lo que significa que usted debe <i><b>siempre</b></i> tener algún tipo de código a prueba de fallos, normalmente con la función <a href="surface_exists.htm"><span class="inline">surface_exists()</span></a> función.</li>
  </ul>
  <p class="note" style="padding-top: 0.5em;padding-right: 1em;padding-bottom: 0.5em;padding-left: 4em"><span class="note">NOTA</span><strong> </strong>Esto no parece ocurrir con <span class="notranslate">sprites</span> u otros visuales <span class="notranslate">assets</span> (¡pero en realidad sí ocurre!) ya que también se almacenan en la memoria regular (RAM) y cuando se eliminan de la memoria de texturas (VRAM) se restauran inmediatamente de la memoria regular cuando el juego recupera el enfoque.</p>
  <ul class="colour">
    <li>En segundo lugar, debes tener en cuenta que las superficies pueden requerir grandes cantidades de VRAM para ser utilizadas, por lo que debes intentar mantenerlas lo más pequeñas posible. Normalmente, se intentará que no sean más grandes que el tamaño de la vista o de la ventana de visualización.</li>
    <li>En tercer lugar, <b>sólo</b> debe <b>crear superficies en el</b> evento de dibujo. Si usted crea una superficie en el evento Create de una instancia, podría potencialmente obtener el <i>mismo</i> índice que el <span class="inline">application_surface</span>. Esto puede entonces causar muchos problemas y confusión ya que usted piensa que está utilizando su propia superficie, pero en realidad está utilizando el objetivo de renderizado actual. También debe tratar siempre de limitar el <i>dibujo</i> a una superficie en el evento de dibujo también, ya que debido a la forma optimizada en que <span data-keyref="GameMaker Name">GameMaker</span> dibuja a la pantalla, se recomienda que mantenga todas las funciones de dibujo <i>dentro del evento de dibujo</i> - esto incluye la limpieza de una superficie cuando se crea por primera vez, etc ... Dibujar a una superficie fuera del evento draw es posible y puede incluso ser necesario para algunos efectos, pero no es como <em>debería</em> hacerse.</li>
    <li>En cuarto lugar, al dibujar en una superficie manualmente, la superficie <i>siempre</i> está en la posición de (0,0). Esto significa que puede ser necesario convertir las coordenadas <em>absolutas</em> en coordenadas <em>relativas</em> para la superficie. Por ejemplo, si tienes una superficie del tamaño de la cámara y deseas dibujar algo que es actualmente visible en la cámara a esa superficie, debes restar las coordenadas x e y de la vista de la cámara de las coordenadas x e y reales para obtener una posición relativa a la posición de la superficie (0,0). Por lo tanto, el código sería algo así</li>
  </ul>
  <p class="code">if view_current = 0<br />
    {<br />
        surface_set_target(surf);<br />
        with (obj_Effect)<br />
        {<br />
            var _vx = camera_get_view_x(view_camera[1]);<br />
            var _vy = camera_get_view_y(view_camera[1]);<br />
            draw_sprite(sprite_index, image_index, x - _vx, y - _vy);<br />
        }<br />
        surface_reset_target();<br />
    }<br />
    else<br />
    {<br />
        draw_surface(surf, 0, 0);<br />
    }</p>
  <ul class="colour">
    <li>Por último, cabe señalar que al dibujar sobre una superficie se tendrá en cuenta el color <em>y el</em> componente alfa de cada píxel, tanto de la propia superficie como de lo que se está dibujando sobre ella. Esto puede llevar a algunos resultados poco intuitivos (por ejemplo, dibujar un <span class="notranslate">sprite</span> con 0,5 alfa a una superficie con 0 alfa dará un alfa final de 0,25). Las razones de esto se explican en la siguiente página, y le recomendamos que la lea antes de trabajar con superficies: <a href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">Guía para el uso de Blendmodes</a></li>
  </ul>
  <p class="note"><span class="note">NOTA</span> Esto no se aplica a la <a href="application_surface.htm">superficie de la aplicación</a>, sólo a las superficies creadas por el usuario.</p>
  <p>El uso básico de una superficie sería el siguiente:</p>
  <ul class="colour">
    <li>Primero se crea una superficie y se asigna su índice a una variable.</li>
    <li>En ese caso, el objetivo de dibujo sería la superficie y no la pantalla.</li>
    <li>A continuación, dibujarás las cosas que desees, así como realizarás cualquier otra manipulación.</li>
    <li>Una vez que hayas terminado, restablece el objetivo de dibujo para que todo el dibujo posterior se realice de nuevo en la pantalla.</li>
    <li>Por último, se dibujaría la superficie (o se utilizaría en un <span class="notranslate">shader</span>, o lo que sea necesario).</li>
  </ul>
  <p>Una cosa a tener en cuenta es que si necesita dibujar toda la pantalla en una superficie (incluyendo <span class="notranslate">tiles</span>, fondos, etc...) puede simplemente acceder a la propia superficie de la aplicación (ver más abajo para más detalles) o puede asignar una superficie a un puerto de vista usando la variable <a href="../../Cameras_And_Display/Cameras_And_Viewports/view_surface_id.htm"><span class="inline">view_surface_id[0..7]</span></a> ya que con esto, todo lo que sea visible en ese puerto de vista se dibujará en la superficie correspondiente.</p>
  <p>Las siguientes funciones existen para tratar con las superficies (estas funciones son específicas para crear y manipular superficies, pero para dibujarlas realmente en la pantalla deberías utilizar las funciones específicas de dibujo que se encuentran más abajo):</p>
  <ul class="colour">
    <li><a href="surface_exists.htm"><span class="notranslate">surface_exists</span></a></li>
    <li><a href="surface_create.htm"><span class="notranslate">surface_create</span></a></li>
    <li><a href="surface_create_ext.htm"><span class="notranslate">surface_create_ext</span></a></li>
    <li><a href="surface_resize.htm"><span class="notranslate">surface_resize</span></a></li>
    <li><a href="surface_set_target.htm"><span class="notranslate">surface_set_target</span></a></li>
    <li><a href="surface_set_target_ext.htm"><span class="notranslate">surface_set_target_ext</span></a></li>
    <li><a href="surface_get_target.htm"><span class="notranslate">surface_get_target</span></a></li>
    <li><a href="surface_get_target_ext.htm"><span class="notranslate">surface_get_target_ext</span></a></li>
    <li><a href="surface_reset_target.htm"><span class="notranslate">surface_reset_target</span></a></li>
    <li><a href="surface_copy.htm"><span class="notranslate">surface_copy</span></a></li>
    <li><a href="surface_copy_part.htm"><span class="notranslate">surface_copy_part</span></a></li>
    <li><a href="surface_depth_disable.htm"><span class="notranslate">surface_depth_disable</span></a></li>
    <li><a href="surface_get_height.htm"><span class="notranslate">surface_get_height</span></a></li>
    <li><a href="surface_get_width.htm"><span class="notranslate">surface_get_width</span></a></li>
    <li><a href="surface_get_texture.htm"><span class="notranslate">surface_get_texture</span></a></li>
    <li><a href="surface_get_depth_disable.htm"><span class="notranslate">surface_get_depth_disable</span></a></li>
    <li><a href="surface_getpixel.htm"><span class="notranslate">surface_getpixel</span></a></li>
    <li><a href="surface_getpixel_ext.htm"><span class="notranslate">surface_getpixel_ext</span></a></li>
    <li><a href="surface_free.htm"><span class="notranslate">surface_free</span></a></li>
    <li><a href="surface_save.htm"><span class="notranslate">surface_save</span></a></li>
    <li><a href="surface_save_part.htm"><span class="notranslate">surface_save_part</span></a></li>
  </ul>
  <p> </p>
  <p>Existen las siguientes funciones para dibujar superficies:</p>
  <p class="note"><b><span class="note">NOTA</span> </b>Cuando se trabaja con superficies existe la posibilidad de que dejen de existir en cualquier momento debido a que están almacenadas en la memoria de texturas. Debe comprobar <b>SIEMPRE</b> que una superficie existe utilizando <span style="font-size:1px;"><a href="surface_exists.htm"><span class="inline">surface_exists()</span></a></span> antes de referenciarlas directamente.</p>
  <ul class="colour">
    <li><a href="draw_surface.htm"><span class="notranslate">draw_surface</span></a></li>
    <li><a href="draw_surface_ext.htm"><span class="notranslate">draw_surface_ext</span></a></li>
    <li><a href="draw_surface_part.htm"><span class="notranslate">draw_surface_part</span></a></li>
    <li><a href="draw_surface_part_ext.htm"><span class="notranslate">draw_surface_part_ext</span></a></li>
    <li><a href="draw_surface_stretched.htm"><span class="notranslate">draw_surface_stretched</span></a></li>
    <li><a href="draw_surface_stretched_ext.htm"><span class="notranslate">draw_surface_stretched_ext</span></a></li>
    <li><a href="draw_surface_tiled.htm"><span class="notranslate">draw_surface_tiled</span></a></li>
    <li><a href="draw_surface_tiled_ext.htm"><span class="notranslate">draw_surface_tiled_ext</span></a></li>
    <li><a href="draw_surface_general.htm"><span class="notranslate">draw_surface_general</span></a></li>
  </ul>
  <p> </p>
  <p>Por último, dispone de dos funciones para almacenar y recuperar superficies en <a href="../../Buffers/Buffers.htm">los buffers</a>:</p>
  <ul class="colour">
    <li><a href="../../Buffers/buffer_get_surface.htm"><span class="notranslate">buffer_get_surface</span></a></li>
    <li><a href="../../Buffers/buffer_set_surface.htm"><span class="notranslate">buffer_set_surface</span></a></li>
  </ul>
  <p> </p>
  <p>Como se mencionó anteriormente, <span data-keyref="GameMaker Name">GameMaker</span> no renderiza la mayoría de las cosas en la pantalla directamente, sino que las renderiza en la <b>superficie de la aplicación</b>. Esto es esencialmente una superficie - al igual que cualquiera que usted puede hacer a sí mismo utilizando las funciones de superficie - y como tal puede ser manipulado, dibujado, enviado a <span class="notranslate">shaders</span>, etc . Básicamente, todo lo que harías normalmente con una superficie creada por ti también puede aplicarse a la superficie de la aplicación.</p>
  <p class="note"><b>NOTA</b>: Lo único que <b>no se puede</b> hacer con la superficie de aplicación es liberarla. Siempre existe, aunque el valor del índice para acceder a ella puede cambiar.</p>
  <p>Cuando ejecutas tu juego, esta superficie se crea la primera vez que se llama al evento <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">draw</a> en cada nuevo <span class="notranslate">room</span> que introduzcas, lo que significa que no se dibuja nada hasta ese momento. Sin embargo, todavía puedes obtener la posición de la superficie de la aplicación y redimensionarla en el evento de <b>creación</b> o en cualquier otro evento sin obtener ningún error y los valores utilizados serán relevantes para la superficie cuando sea creada. El actual <span class="notranslate">sequence</span> de eventos para la creación y dibujo de la superficie de aplicación es el siguiente:</p>
  <ul class="colour">
    <li>Evento previo al sorteo<br>
               --- &gt; <b>se crea la superficie de aplicación (si no existe) y se establece el objetivo de renderización</b></li>
    <li><b></b>Por cada puerto de vista visible, o, si no hay puertos de vista activos, una vez
      <ul class="colour">
        <li>Evento de inicio de sorteo</li>
        <li>Evento de sorteo</li>
        <li>Evento de fin de sorteo<br>
                  --- &gt; <b>el objetivo de renderizado de la superficie de la aplicación se restablece aquí</b></li>
      </ul>
    </li>
    <li><b></b>Evento posterior al sorteo<br>
              --- &gt; <b>la superficie de la aplicación se dibuja ahora en el <a class="glossterm" data-glossterm="búfer de visualización" href="#">buffer de la pantalla</a> </b> por defecto <b><br>
                         (aunque puede </b> <span class="notranslate">switch</span> desactivar esto usando <span class="inline"><a href="application_surface_draw_enable.htm">application_surface_draw_enable()</a></span>)</li>
    <li><b></b>Evento de inicio de la GUI</li>
    <li>Evento GUI de dibujo</li>
    <li>Evento de finalización de la interfaz gráfica de usuario (GUI)</li>
  </ul>
  <p>El uso de esta superficie significa que puedes crear fácilmente transiciones increíbles usando <span class="notranslate">shaders</span>, o tomar la pantalla y envolverla alrededor de una forma 3D, o simplemente escalar un juego de baja resolución a cualquier pantalla de resolución... Las posibilidades son infinitas.</p>
  <p>Para acceder a esta superficie, es necesario utilizar la variable global incorporada <span class="inline">application_surface</span> que se explica en la página siguiente:</p>
  <ul class="colour">
    <li><a href="application_surface.htm"><span class="notranslate">application_surface</span></a></li>
  </ul>
  <p> </p>
  <p>También tiene algunas funciones especializadas que están diseñadas <em>sólo </em>para su uso con la superficie de la aplicación:</p>
  <ul class="colour">
    <li><a href="application_surface_enable.htm"><span class="notranslate">application_surface_enable</span></a></li>
    <li><a href="application_surface_is_enabled.htm"><span class="notranslate">application_surface_is_enabled</span></a></li>
    <li><a href="application_get_position.htm"><span class="notranslate">application_get_position</span></a></li>
    <li><a href="application_surface_draw_enable.htm"><span class="notranslate">application_surface_draw_enable</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="../Drawing.htm">Dibujo</a></div>
        <div style="float:right">Siguiente: <a href="../Lighting/Lighting.htm">Iluminación</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Surfaces
app surface
application surface
-->
  <!-- TAGS
surfaces_functions
-->
</body>
</html>