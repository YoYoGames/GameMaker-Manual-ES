<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <title>video_draw</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Reference page for video_draw" />
  <meta name="rh-index-keywords" content="video_draw" />
  <meta name="search-keywords" content="video_draw, draw video, render video" />
  <meta name="condition-tags" content="" />
</head>
<body>
  <h1>video_draw</h1>
  <p>Esta función dibuja el fotograma actual del <a href="video_open.htm">vídeo</a> abierto en una superficie (o dos superficies). Devuelve la(s) superficie(s) como parte de su matriz de retorno, que puede ser <a href="../Surfaces/draw_surface.htm">dibujada manualmente</a>.</p>
  <p>La función también devuelve datos sobre el estado del vídeo, que se amplían a continuación.</p>
  <p>Asegúrese de que esto sólo se llama después de una llamada a <span class="inline"><a href="video_open.htm">video_open()</a></span> pero antes de una llamada a <span class="inline"><a href="video_close.htm">video_close()</a></span>, de lo contrario no hará nada (ya que no habrá un vídeo cargado).</p>
  <h2>Datos de retorno</h2>
  <p>La función devolverá un array, cuyo primer elemento (<span class="inline2">[0]</span>) será un valor real. Este valor indica el estado del vídeo, y será:</p>
  <ul class="colour">
    <li><strong>0</strong>, si el vídeo se reproduce sin problemas</li>
    <li><strong>-1</strong>, si hubo un error</li>
    <li>En algunas plataformas, <strong>-2</strong>, si el vídeo ha terminado de reproducirse (momento en el que se puede eliminar de la memoria con una llamada a <span class="inline"><a href="video_close.htm">video_close()</a></span> )
      <ul>
        <li>Se recomienda usar los <a data-xref="{text}" href="Videos.htm#h">Callbacks Async</a> en su lugar para saber cuando un video termina</li>
      </ul>
    </li>
  </ul>
  <p>Cuando este valor de estado es <strong>0</strong>, el array contendrá más datos, que dependerán del formato del vídeo. Puedes conocer el formato del vídeo llamando a <span class="inline"><a href="video_get_format.htm">video_get_format()</a></span>.</p>
  <h2>Vídeos RGBA</h2>
  <p><span>Para los vídeos RGBA, la posición <span class="inline2">[1</span> ] contendrá la superficie en la que se dibujó el fotograma de vídeo. Puedes obtener esta superficie y <a href="../Surfaces/draw_surface.htm">dibujarla</a> manualmente.</span></p>
  <h2>Vídeos YUV</h2>
  <p><span>Algunas plataformas (especialmente las consolas) utilizan el formato de color YUV para los vídeos, que hace uso de dos superficies. En ese caso, la matriz tendrá las posiciones <span class="inline2">[1]</span> y <span class="inline2">[2]</span> con dos superficies:</span></p>
  <ul class="colour">
    <li><span>[<span class="inline2">1</span> ] es la principal superficie de vídeo en blanco y negro</span></li>
    <li><span>[<span class="inline2">2</span> ] es la superficie de croma que contiene todos los datos de color</span></li>
  </ul>
  <p>Ambas superficies se combinan entonces utilizando un YUV <span class="notranslate">shader</span> antes de ser utilizadas para texturizar un quad personalizado, que dibujará el vídeo en la pantalla.</p>
  <p>Lee <a data-xref="{title}" href="YUV_Videos.htm">los vídeos de YUV</a> para ver los pasos para dibujar estas dos superficies utilizando un <span class="notranslate">shader</span>.</p>
  <p>Para conocer los detalles de implementación específicos de una consola en particular, consulta su documentación en el <a href="https://help.yoyogames.com/hc/en-us/">servicio de ayuda de YoYo Games</a>.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">video_draw();</p>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Array"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Overview/Arrays.htm">Array</a></span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">var _data = video_draw();<br />
    var _status = _data[0];<br />
    <br />
    if (_status == 0)<br />
    {<br />
        var _surface = _data[1];<br />
    <br />
        draw_surface(_surface, x, y);<br />
    }
  </p>
  <p>El código anterior llama a <span class="inline">video_draw()</span>, y comprueba si el estado devuelto es 0, lo que significa que el vídeo se está reproduciendo. En ese caso, obtiene el ID de la superficie y la dibuja en la posición de la instancia. Esto sólo funcionará para los vídeos RGBA.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Atrás: <a data-xref="{title}" href="Videos.htm">Reproducción de vídeo</a></div>
        <div>Siguiente: <a data-xref="{title}" href="YUV_Videos.htm">Vídeos YUV</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
video_draw
-->
  <!-- TAGS
video_draw
-->
</body>
</html>