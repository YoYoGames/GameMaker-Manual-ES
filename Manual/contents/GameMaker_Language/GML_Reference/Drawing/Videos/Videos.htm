<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>Reproducción de vídeo</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Overview of video drawing functions" />
  <meta name="template" content="../../../../assets/masterpages/Manual_Page.htt" />
  <meta name="rh-index-keywords" content="videos" />
  <meta name="search-keywords" content="videos" />
  <meta name="condition-tags" content="" />
</head>
<body>
  <h1 id="h1">Reproducción de vídeo</h1>
  <h2>¿Cómo se reproducen los vídeos?</h2>
  <p>Siga estos pasos para cargar vídeos en <span class="notranslate">runtime</span> y reproducirlos:</p>
  <ul class="colour">
    <li>Añade un archivo de vídeo a los <a data-xref="{text}" href="../../../../Settings/Included_Files.htm#h">Archivos Incluidos</a><span class="inline2">(</span> directorio<span class="inline2">/datafiles</span> ) de tu proyecto.</li>
    <li>Cargue el vídeo mediante <span class="inline"><a href="video_open.htm">video_open()</a></span>.
      <ul>
        <li>También puede cargar un vídeo desde una URL.</li>
      </ul>
    </li>
    <li>Dibujarla en un evento de Dibujo usando <span class="inline"><a href="video_draw.htm">video_draw()</a></span>.
      <ul>
        <li>Esta función dibuja el vídeo en una superficie interna, que devuelve como parte de su matriz de retorno.</li>
        <li>Debe dibujar esa superficie manualmente utilizando <span class="inline"><a href="../Surfaces/draw_surface.htm">draw_surface()</a></span> para que el vídeo aparezca.
          <ul>
            <li>Dibujar vídeos <a data-xref="{title}" href="YUV_Videos.htm">YUV</a> requerirá pasos adicionales.</li>
          </ul>
        </li>
      </ul>
    </li>
    <li>Cuando el vídeo termine, elimínalo de la memoria llamando a <span class="inline"><a href="video_close.htm">video_close()</a></span>.
      <ul>
        <li>Utilice las <a href="#h">llamadas de retorno asíncronas</a> para ejecutar el código cuando el vídeo termine.</li>
      </ul>
    </li>
  </ul>
  <h2>Códecs de vídeo y licencias</h2>
  <p><span data-keyref="GameMaker Name">GameMaker</span> no viene con ningún códec, y hace uso de los códecs presentes en la plataforma en la que se ejecuta el juego. Esto significa que tus vídeos deben estar codificados en un formato que pueda ser decodificado en la plataforma o plataformas de destino.</p>
  <p>El uso de ciertos formatos puede requerir el pago de derechos de licencia en función de la licencia del códec correspondiente y de los ingresos del juego, y en tal caso, el desarrollador será legalmente responsable de los derechos que deba pagar a los propietarios del códec. Los códecs también tienen licencias diferentes en cada plataforma, por lo que hay que tener cuidado con los juegos que se distribuyen en varias plataformas.</p>
  <p>Tenga en cuenta que los formatos de vídeo (como <span class="inline2">.mp4</span>, <span class="inline2">.avi</span>, <span class="inline2">.mkv</span>, etc.) no son más que contenedores que envuelven flujos de <strong>vídeo</strong> y <strong>audio</strong>, los cuales pueden codificarse por separado y pueden requerir licencias distintas.</p>
  <p>Para la distribución en plataformas de consola, consulte con su representante de cuenta para saber qué formatos puede utilizar sin tener que pagar derechos de licencia adicionales.</p>
  <h2>Formatos</h2>
  <p>Los formatos de vídeo que puedes cargar y reproducir en tu juego dependerán de tu plataforma de destino, y de los códecs que sean compatibles con esa plataforma.</p>
  <h2>Funciones</h2>
  <p>Puedes cargar, reproducir y manipular archivos de vídeo en <span class="notranslate">runtime</span> utilizando las siguientes funciones:</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="video_open.htm">video_open</a></li>
    <li><a data-xref="{title}" href="video_close.htm">video_close</a></li>
    <li><a data-xref="{title}" href="video_draw.htm">video_draw</a></li>
    <li><a data-xref="{title}" href="video_set_volume.htm">video_set_volume</a></li>
    <li><a href="video_pause.htm">video_pausa</a></li>
    <li><a href="video_resume.htm">video_resumen</a></li>
    <li><a href="video_enable_loop.htm">video_enable_loop</a></li>
    <li><a href="video_seek_to.htm">video_seek_to</a></li>
  </ul>
  <p> </p>
  <p>Las siguientes funciones se utilizan para obtener información sobre el vídeo cargado actualmente:</p>
  <ul class="colour">
    <li><a href="video_is_looping.htm">video_is_looping</a></li>
    <li><a href="video_get_volume.htm">video_get_volume</a></li>
    <li><a href="video_get_duration.htm">video_get_duration </a></li>
    <li><a href="video_get_position.htm">video_get_position</a></li>
    <li><a href="video_get_status.htm">video_get_status</a></li>
    <li><a href="video_get_format.htm">video_get_format </a></li>
  </ul>
  <h2 id="h">Devoluciones de llamada asíncronas</h2>
  <p>El evento <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Social.htm">Async Social</a> se dispara en las etapas indicadas a continuación, con la clave <span class="inline2">&quot;type</span> &quot; en su mapa <span class="inline2">async_load</span> ajustada al valor dado:</p>
  <ul class="colour">
    <li>&quot;<span class="inline2">video_start&quot;</span>: Cuando el vídeo empieza a reproducirse, que es cuando su <a href="video_get_status.htm">estado</a> cambia de <span class="inline2">video_status_preparing</span> a <span class="inline2">video_status_playing</span>.</li>
    <li><span class="inline2">&quot;video_end&quot;</span>: Cuando el vídeo termina. Esto no se activa cuando el vídeo está configurado <a href="video_enable_loop.htm">en bucle</a>.</li>
  </ul>
  <p>Este es un ejemplo de un evento Async Social que escucha las devoluciones de llamada de vídeo:</p>
  <p class="code">var _type = async_load[? &quot;type&quot;];<br />
    <br />
    if (_type == &quot;video_start&quot;)<br />
    {<br />
        obj_video.display_video = true;<br />
    }<br />
    else if (_type == &quot;video_end&quot;)<br />
    {<br />
        obj_video.display_video = false;<br />
        video_close();<br />
    }
  </p>
  <p>El código anterior lee el tipo del mapa <span class="inline2">async_load</span>. Cuando el vídeo se inicia, establece una variable en un <span class="notranslate">object</span> a <span class="inline2">true</span>, para poder mostrar el vídeo.</p>
  <p>Cuando el vídeo termina, establece esa misma variable a <span class="inline2">false</span>, y luego llama a <span class="inline"><a href="video_close.htm">video_close()</a></span> para eliminar el vídeo de la memoria.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Atrás: <a data-xref="{title}" href="../Drawing.htm">Dibujo</a></div>
        <div>Siguiente: <a data-xref="{title}" href="../Colour_And_Alpha/Colour_And_Alpha.htm">Color y Alfa</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
	Videos
-->
  <!-- TAGS
-->
</body>
</html>