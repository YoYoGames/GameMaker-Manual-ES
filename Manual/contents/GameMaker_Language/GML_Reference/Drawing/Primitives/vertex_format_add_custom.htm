<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vertex_format_add_custom</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_format_add_custom" />
  <meta name="rh-index-keywords" content="vertex_format_add_custom,vertex_type_float1,vertex_type_float2,vertex_type_float3,vertex_type_float4,vertex_type_colour,vertex_type_ubyte4,vertex_usage_position,vertex_usage_colour,vertex_usage_normal,vertex_usage_textcoord,vertex_usage_blendweight,vertex_usage_blendindices,vertex_usage_depth,vertex_usage_tangent,vertex_usage_binormal,vertex_usage_fog,vertex_usage_sample" />
  <meta name="search-keywords" content="vertex_format_add_custom,vertex_type_float1,vertex_type_float2,vertex_type_float3,vertex_type_float4,vertex_type_colour,vertex_type_ubyte4,vertex_usage_position,vertex_usage_colour,vertex_usage_normal,vertex_usage_textcoord,vertex_usage_blendweight,vertex_usage_blendindices,vertex_usage_depth,vertex_usage_tangent,vertex_usage_binormal,vertex_usage_fog,vertex_usage_sample" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vertex_format_add_custom</h1>
  <p>Esta función le permite utilizar un <span class="notranslate">data type</span> personalizado para atributos específicos del formato <span class="notranslate">vertex</span> como parte del nuevo formato <span class="notranslate">vertex</span> que se está creando. Los valores disponibles para utilizar están definidos por la constante <span class="notranslate">data type</span> que se elija, listada a continuación:</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Draw_Vertex_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Vértice <span class="notranslate">Data Type</span> Constante</a></span></th>
      </tr>
      <tr>
        <th>Constante</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float1</span></td>
        <td>Un único valor de coma flotante</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float2</span></td>
        <td>Dos valores de coma flotante</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float3</span></td>
        <td>Tres valores en coma flotante</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_float4</span></td>
        <td>Cuatro valores de coma flotante</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_colour</span></td>
        <td>Cuatro valores de componentes (r, g, b, a)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_type_ubyte4</span></td>
        <td>Valores de bytes sin signo de cuatro componentes (de 0 a 255)</td>
      </tr>
    </tbody>
  </table>
  <p><br>
    El uso que se le dará a estas constantes también necesita ser definido para que los valores puedan ser &quot;ligados&quot; apropiadamente dentro del <span class="notranslate">shader</span> que se está creando. Esto es necesario debido al hecho de que DX y OpenGL tienen diferentes requisitos, por lo que si no se vinculan correctamente, no aparecerán en el <span class="notranslate">shader</span>. Las constantes de uso disponibles que puedes elegir se enumeran a continuación y las que utilices dependerán de las características específicas del <span class="notranslate">shader</span> que se está creando:</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Draw_Vertex_Usage"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Tipo de uso de vértices Constante</a></span></th>
      </tr>
      <tr>
        <th>Constante</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_position</span></td>
        <td>valores de posición (x, y, z)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_colour</span></td>
        <td>valores de color (r, g, b, a)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_normal</span></td>
        <td>valores normales de los vértices (nx, ny, nz)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_textcoord</span></td>
        <td>Coordenadas UV (u, v)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_blendweight</span></td>
        <td>el peso de mezcla de la matriz de entrada (para la animación esquelética, por ejemplo)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_blendindices</span></td>
        <td>los índices de las matrices a utilizar (para la animación esquelética, por ejemplo)</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_depth</span></td>
        <td>profundidad de los vértices <span class="notranslate">buffer</span> valor</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_tangent</span></td>
        <td>valores tangentes</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_binormal</span></td>
        <td>valores binormales</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_fog</span></td>
        <td>valores de niebla</td>
      </tr>
      <tr>
        <td><span class="notranslate"><span class="inline">vertex_usage_sample</span></td>
        <td>índice de muestreo</td>
      </tr>
    </tbody>
  </table>
  <p><br>
    Hay que tener en cuenta algunas cosas importantes cuando se utilizan formatos personalizados como estos:</p>
  <ul class="colour">
    <li>La función <span class="inline">vertex_format_add_custom()</span> sólo soporta <span class="inline">vertex_usage_position</span>, <span class="inline">vertex_usage_colour</span>, <span class="inline">vertex_usage_normal</span> y <span class="inline">vertex_usage_textcoord</span> cuando se utiliza GLSL <span class="notranslate">shaders</span>. Éstos se asignarán a los atributos de <span class="notranslate">shader</span> <span class="inline">in_Position</span> , <span class="inline">in_Colour[0 - ...]</span>, <span class="inline">in_Normal</span> respectivamente (cualquier cosa que no sea uno de estos tres atributos - por ejemplo: coordenadas de textura - puede asignarse a cualquier atributo que se defina).</li>
    <li>En general, deberías usar <span class="inline">vertex_usage_textcoord</span> para todos los parámetros extra siempre que sea posible, ya que los tipos como <span class="inline">vertex_usage_blendweight</span> y <span class="inline">vertex_usage_tangent</span> están casi obsoletos en la mayoría de los lenguajes <span class="notranslate">shader</span>, y probablemente no se conviertan correctamente. En su lugar, utilice <span class="inline">vec</span>, <span class="inline">vec2</span>, <span class="inline">vec3</span> o <span class="inline">vec4</span> tipos <span class="inline">vertex_usage_textcoord</span> y todo debería funcionar bien.</li>
    <li>GLSL ES <i>no</i> soporta atributos enteros, por lo que pasar <span class="inline">ivec4</span>'s no funciona (este tipo se suele utilizar cuando se pasa <span class="inline">vertex_usage_blendindices</span>). Lo que hay que hacer es pasar las coordenadas de la textura y luego en el <span class="notranslate">shader</span>, convertirlas a <span class="inline">ivec4</span> de esta manera:</li>
  </ul>
  <p> </p>
  <p class="code">attribute vec3 in_Position;<br />
    attribute vec4 in_BlendIndices;<br />
    attribute vec4 in_BlendWeights;<br />
    <br />
    varying vec4 v_vColour;<br />
    varying mat4 v_mat;<br />
    <br />
    void main()<br />
    {<br />
        gl_Position = gm_Matrices[MATRIX_WORLD_VIEW_PROJECTION] * vec4( in_Position.xyz, 1.0);<br />
        v_vColour = in_BlendWeights;<br />
         ivec4 t = ivec4(in_BlendIndices);<br />
         v_mat = gm_Matrices[ t.x ];<br />
    }
  </p>
  <ul class="colour">
    <li>Los pesos de mezcla se almacenan normalmente en una matriz y luego se accede a ellos utilizando índices de mezcla, pero puede ver aquí que en lugar de definir <span class="inline">in_BlendIndices</span> como un atributo <span class="inline">ivec4</span>, es un <span class="inline">vec4</span>, luego se convierte en un <span class="inline">ivec4</span> en el código. Esto se usa para indexar el array creado usando <span class="inline">gm_Matrix</span> (sólo se puede acceder a un array usando un valor <span class="inline">INT</span> - no un float).</li>
    <br />
     
  </ul>
  <h4>Sintaxis:</h4>
  <p class="code">vertex_format_add_custom(type, usage);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">type</span></td>
        <td><span data-keyref="Type_Constant_Draw_Vertex_Data_Type"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Vértice <span class="notranslate">Data Type</span> Constante</a></span></td>
        <td><span class="notranslate">The data type that this custom vertex data will hold (see the <b><i>type constants</i></b> listed above).</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">usage</span></td>
        <td><span data-keyref="Type_Constant_Draw_Vertex_Usage"><a data-rhwidget="HyperlinkPopover" href="../../../../../GameMaker_Language/GML_Reference/Drawing/Primitives/vertex_format_add_custom.htm">Tipo de uso de vértices Constante</a></span></td>
        <td><span class="notranslate">The use that the data will get(see the <b><i>usage constants</i></b> listed above).</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Void"><a data-rhwidget="HyperlinkPopover" href="../../../../../LINKGOESHERE">N/A</a></span></p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">vertex_format_begin();<br />
    vertex_format_add_textcoord();<br />
    vertex_format_add_custom(vertex_type_float3, vertex_usage_position);<br />
    my_format = vertex_format_end();</p>
  <p>El código anterior creará un nuevo formato <span class="notranslate">vertex</span> con sólo la textura y 3 valores de punto flotante personalizados para la posición. A continuación, almacena el id del formato en la variable &quot;mi_formato&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Primitives_And_Vertex_Formats.htm">Primitivas y <span class="notranslate">Vertex</span> Formatos</a></div>
        <div style="float:right">Siguiente: <a href="vertex_format_end.htm"><span class="notranslate">vertex_format_end</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
vertex_format_add_custom
vertex_type_float1
vertex_type_float2
vertex_type_float3
vertex_type_float4
vertex_type_colour
vertex_type_ubyte4
vertex_usage_position
vertex_usage_colour
vertex_usage_normal
vertex_usage_textcoord
vertex_usage_blendweight
vertex_usage_blendindices
vertex_usage_depth
vertex_usage_tangent
vertex_usage_binormal
vertex_usage_fog
vertex_usage_sample
-->
  <!-- TAGS
vertex_format_add_custom
-->
</body>
</html>