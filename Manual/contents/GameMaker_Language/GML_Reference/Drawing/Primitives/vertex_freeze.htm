<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vertex_freeze</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_freeze" />
  <meta name="rh-index-keywords" content="vertex_freeze" />
  <meta name="search-keywords" content="vertex_freeze" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vertex_freeze</h1>
  <p>Esta función puede utilizarse para &quot;congelar&quot; un <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>. Este <span class="notranslate">buffer</span> pasa a ser <b>de sólo lectura</b>, lo que significa que si necesita cambiarlo, tendría que borrar todo el <span class="notranslate">buffer</span> y volver a crearlo. Un <span class="notranslate">buffer</span> congelado puede ser enviado al <span class="notranslate">shader</span> más rápido que un <span class="notranslate">buffer</span> normal y dinámico y se recomienda para aquellos efectos que requieren una primitiva personalizada sin cambios durante la duración de un nivel o del juego.</p>
  <p>La función devolverá 0 al congelar con éxito el <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> especificado, sin embargo, si falla por cualquier razón, devolverá -1.</p>
  <p> </p>
  <h4>Sintaxis:</h4>
  <p class="code">vertex_freeze(buffer);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descripción</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer_Vertex">Vértice <span class="notranslate">Buffer</span> ID</span></td>
        <td><span class="notranslate">The vertex buffer to freeze.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devuelve:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span> (0 for success, -1 for failure)</p>
  <p> </p>
  <h4>Ejemplo:</h4>
  <p class="code">// Create event<br />
    vertex_freeze(vbuff);</p>
  <p>El código anterior congelará el <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> dado en el evento Create, para que pueda ser utilizado como un <span class="notranslate">buffer</span> &quot;estático&quot; en otros eventos para un acceso más rápido.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Atrás: <a href="Primitives_And_Vertex_Formats.htm">Primitivas y <span class="notranslate">Vertex</span> Formatos</a></div>
        <div style="float:right">Siguiente: <a href="vertex_freeze.htm"><span class="notranslate">vertex_submit</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos los derechos reservados</span></h5>
  </div>
  <!-- KEYWORDS
vertex_freeze
-->
  <!-- TAGS
vertex_freeze
-->
</body>
</html>